<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[如何用Axure制作动态可收缩的边栏效果]]></title>
      <url>%2F2018-12-24-%E5%A6%82%E4%BD%95%E7%94%A8Axure%E5%88%B6%E4%BD%9C%E5%8A%A8%E6%80%81%E5%8F%AF%E6%94%B6%E7%BC%A9%E7%9A%84%E8%BE%B9%E6%A0%8F%2F</url>
      <content type="text"><![CDATA[前言 在一部分的网站（特别是数据分析为主的B端产品中）会大量使用侧边栏，为了显示更多的类容，侧边栏可以按照要求收缩成为很窄的边栏，以扩大可视的网页面积。当然这种效果主要是用JS+CSS来实现。今天我们讨论如何在原型工具中实现这种效果。 案例描述 对于大部分以数据为主要展示的网站，需要更大屏幕来显示更多的数据内容，包括图形和报表等。我们经常会注意到，其侧边栏的菜单是可以收缩的。那么我们如何在Axure原型中实现这种效果呢？ 假设我们侧边栏有11个菜单选项，我们要实现的效果如下： 当某项菜单被选中后需要高亮显示 当切换边栏（sidebar)时，隐藏菜单名称，只显示边栏的图标 当切换边栏为icon样式的时候，高亮效果仍然保持，但高亮的区域为图标区域 切换边栏的时候，数据显示区域自动向左边扩展 具体的显示效果参考如下的图示： Figure 1: 参考图示 任务拆解 我们可以看到，这个sidebar可以分为两种状态，icon+菜单、icon状态，另外还有个需要注意的就是选择菜单的highlight状态。那么怎么实现呢？ 第一步：分解sidebar 我们知道，其实点击切换后，sidebar应该是两种不同的状态，这两种状态应该是独立存在的，即不能在一个效果中显示。所以需要两个动态面板来解决这个问题： Step 1: 创建一个动态面板,设置两种状态分别是full和icon。 Figure 2: 创建动态面板 Step 2: 设置动态面板，full是包括了图标和菜单名称的样式，而icon状态是只包含图标的状态 Figure 3: 设置full状态的菜单 Figure 4: 设置icon状态的菜单 Step 3: 设置icon状态的侧边栏宽度，这样点击后显示icon状态时可以收缩侧边栏 Figure 5: 设置icon状态的 第二步：设置高亮效果 首先我们先做一个高亮的矩形区块，然后用热区点击到对应的菜单，那么该高亮区块就位移到点击菜单的对应区域 那么我们可以用交互中的移动功能实现： Figure 6: 设置高亮效果 那么设置后的效果如图： [[ 第三步：设计切换按钮并切换状态 我们先设计切换按钮，切换按钮应该是个动态面板，有两个按钮状态，分别切换至full模式和icon模式。 设计交互时应该是，当按钮是FULL时，点击后本来按钮切换至ICON状态，同时sidebar也切换至icon状态，当按钮是ICON时，点击后按钮本身切换至FULL状态，sidebar也切换至full状态，效果如下： Figure 7: sidebar切换状态 第四步：设计高亮区域随着sidebar切换而变化 我们从第三步看到，当我们切换sidebar的显示状态时，高亮区域仍然和full模式是一样长度的，所以我们可以这么认为在点击切换按钮时我们还应该同时改变高亮区块的长度。 在full模式下的高亮区块的宽度是200，而sidebar在icon模式下的宽度是72。所以，我们应当在点击切换按钮时同时改变高亮区块的宽度。 其实，这个交互只需要设计转换为icon模式的情况下，把高亮区块宽度改变为72，转换为full模式下高亮区块的宽度变更为200即可。 Figure 8: sidebar切换状态-附加高亮调整 这样，我们基本上就完成了最主要的边栏收缩的主要原型了。 设置左边内容区域随着切换而移动 我们首先创建一个可以包含内容的矩形并填充文本内容。如图所示： Figure 9: 添加文字矩形 再修改FULL和ICON的按钮的切换的交互： Figure 10: sidebar切换状态-附加高亮调整 就这样，完了。今天是平安夜，加班到现在准备回家了，就先这样。后面有修改再说。 Edit Me at Github - Org Source - Last Updated 2018-12-24 一 21:27.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[人生如梦幻泡影]]></title>
      <url>%2F2018-11-19-%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A2%A6%E5%B9%BB%E6%B3%A1%E5%BD%B1%2F</url>
      <content type="text"><![CDATA[最近最近状态一直不好，归结起来是受工作的影响。职业生涯快十年了，从来没有因为工作导致焦虑，甚至过去几年我从没有一首歌能够反复听一天。现在发生了，确实因为工作充满焦虑。在这份工作里自己的路已经迷失了，无从踏步前行，也不知道前路如何。 大部分时候是疲惫的，我也不知道工作中该做什么，彷徨而焦虑。像是在暗无天日的空间里喘着粗气，负重前行，背的却是什么都不知道的重物。 如果前路迷雾如何办这个世界本来就没什么有趣的东西，除了让人叹为观止的逻辑和暗藏在背后的物理必然，其余的都是多此一举。世间万物皆有其不一样的，我能接受的就是按照自己想的去做，去前行就行了罢？ 这个世界自以为聪明的人比比皆是，我自己恐怕也没逃脱，如此说来。大家既然都一样，何必照顾他人的脸面，既然不开心那么我拍拍屁股走人即可，大可活得丧一点。不用看他人的眼镜里自己是徐徐生辉的还是满目憎恨。世间不值得啊。 去尝试下不可预知的未来我决定了去尝试一下不知道的未来的任何可能，无所畏惧。 未来如何，又何必提前烦恼]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[过去和希望]]></title>
      <url>%2F2018-06-16-%E8%BF%87%E5%8E%BB%E5%92%8C%E5%B8%8C%E6%9C%9B%2F</url>
      <content type="text"><![CDATA[过去半年 父亲去世已经半年了。 我也很久没写文章了，过去的半年其实一直过得不开心，只是慢慢的变得好一些。时间是冲刷一切的最佳方式，混合了其它方式：努力的工作、更多的会见朋友、看更多的书、甚至还看着无关痛痒的电视剧。 怀念是真的很奢侈的事情，他的照片和视频就在我手机里，可是我几乎不怎么看，因为心会痛。情况是慢慢变好了，不再像最初时候那么伤痛，让时间来冲刷一切吧。 最近懒了 最近人懒了，大部分时候不想动脑筋，不想思考，也不想做事。 但生活要继续啊，必须努力工作，赚钱养自己。自己又不是富二代，可以肆意的追求理想，无所顾忌的享受生活。我们就是要成为被生活轮着蹂躏的人而已。 懒得表现不只是说五体不勤，还有不再思考，不再动脑筋。过去吧，我这人特喜欢追求和别人不一样的东西，所以我花了大量时间学习，以及思考一些非常规的知识、技能以及理论。有时候还沾沾自喜，觉得自己不走大部分人的路，有自己的个性和想法。 所以，很勤劳的学习，但是最近懒了不愿意再费力气了。 很多事情在开始有不好的苗头，就要狠下心来掐灭这种苗头，不能形成势头否则就不再好控制了。懒病就是其中之一，前两天我打电话给我的健身的客户经理，让她帮忙查下我的健身卡还有多长时间，她说我的卡停了快一年半了&#x2026;我暗自乍舌，我竟然有这么久没去健身了。 可我是怎么瘦下来了呢？ 说起来，最近这段时间睡觉是越来越晚了，过去几年养成的规律的作息时间，在这小半年几乎被抛弃了，这也是懒的表现，不自律了。自己对自己的要求降低了，觉得将就也可以了。这是生活上的。 过去每个月会阅读一些技术上的书籍，或者强化升级一下已掌握的技能。可是今天，我用Emacs写文档，居然不知道如何插入时间。前几天想用UML画图，居然忘了一些命令。工作中，遇到了问题现在找不到解决的入口，说好的工作如吃饭喝水，似乎并不是这样了。也说明，工作和学习懒了。 所幸的是，大脑还在正常的运转，还在不断的自我调节。让我可以反思到我目前遇到了问题，需要我自己去解决。 追求不一样需要代价的 过去多年，我一直在生活工作中，希望自己做的和别人不一样。所以，用了好多办法，学习稀奇古怪的东西，掌握乱七八糟的技能。 花了大量的时间，学了很多自己觉得有用的东西，但是和其他人的不一样的时候，我们就面临着协同工作时，信息共享的方式不一样。举个例子，基本上不可能在大路上划船一样，当然你说下暴雨的深圳或者上海，那我只能说，没有绝对的壁垒，当情况发生巨变，万事皆可以连接。 无论是工作还是生活中，我们其实更接近于大众。因为这样的沟通成本会降低到比较低的地步，很多时候我们追求的是更优秀，确实可能我们做的更好了，但和其他人之间的连接就低效了，或者甚至是失效的。 我过去几年，为了追求工作质量和高效率，开始频繁使用效率更高的工具和工作方式。例如我写文档，用LaTeX、数据分析用R或者Python、画图用UML语言。是的，这些在我这里被用的轻车熟路，我甚至可以开会的时候用Markdown记录会议的要点和结论，然后会议后用几分钟修改下，直接用高效工具输出高质量的文档、图片，方案以及结果。 甚至，我精简了使用的工具，越来越简单，也越来越高效。所以，上班的时候大量的重复性劳动被我几乎精简到不怎么浪费的地步，可以由大量的时间去阅读，思考和论证。 但协同性太差了，如果工作只是由我一个人完成，效率会很高。但涉及到多人协作的时候，我就需要用着大家通用的东西。当然，不是我自恋，即便是用这些我仍然能够超越大部分人。但这时候的痛苦就来了，总觉得自己在浪费时间。我不应该把时间花在这上面，我应该更多的时间去扩大自己的视野，去建立更大的格局。 思考是需要有成果的，所以很多时候我就在想为什么别人能做成这样？为什么要这样做？不想浪费过多的时间在繁文缛节上。 但这样同样要付出巨大的代价，如何平衡才是最重要的。 仪式感很重要，但不能追求的过分。就像我为了一份文档更好看，花了一两个小时去做workflow，是的做完了更好看了，可是80%的自动化被降低为40%的自动化，我也不知道这样是否划算。 学会和自己的妥协 有个朋友说我爱讲大道理，我有时候确实会不自知的这么做。 可惜的是，大道理懂得人不少，可是真的按照道理做的人却不多了。在我看来，所谓己所不欲勿施于人，那么要求别人做的事情，自己最好也能够做到。 不过，我确实醒悟到了，没必要强求。就像我不喜欢被别人强求一样，一切都按照合理的方式运行就可以了。所以，要学会的就是和自己的妥协，不要太累。 就这样吧，也不知道写什么。这种文章还不如写一篇技术性的文章来的容易。 伤脑！ Edit Me at Github - Org Source - Last Updated 2018-06-16 六 17:19.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如果不能忘记]]></title>
      <url>%2F2018-03-23-%E5%A6%82%E6%9E%9C%E4%B8%8D%E8%83%BD%E5%BF%98%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[生命无常 父亲去世快百天了，从我上次回去照顾他最后一段时间到这次清明回去给他扫墓，时间过得真快。过去的三个多月，我有时候用着我不曾使用的方法和手段让我尽量淡化悲伤，但仍然不免怀念他。 从安葬他到我这次回去扫墓前，一直算是匆忙。都不曾在他的面前说说话，沟通下感情。这次回去正好有时间，一个人能够好好的在他的墓前说说话，也是忏悔也是勉励自己。 过去已经回不去了 我的记忆力在抑郁症之后退化了很多，大部分时候并不记得很多东西。平时工作和生活也会靠一些工具来增强我的记忆力。所以，我很伤心已经记不得小时候大部分和父亲的互动，哪怕是一些糗事能够知道也是其他人诉说的。 小时候我挺笨的，父亲教我学拼音，我半天学不会。他的耐心并不好，所以看我学不会就体罚我，但似乎我不记恨他。大概是我从小就没这种记仇的思维方式。他曾经做过我的班主任，但也不是很耐心，在班里不过个把月我就转到别的班级了。 其它的记忆其实挺少，我小时候还和他发生过冲突，在饭桌上怒目相向，现在想起来还是有趣。他绝大部分时间都不管我，放任我自由的成长，却没想到我一直把他作为反面的例子去成长自己。 回忆他的过去 我们家是农民出身，父亲就是农民教师。好在爷爷奶奶在过去艰苦的时候供养他们读书，所以他最终能够在文化大革命的那些年完成至高中学业，在当地也算是知识分子，正因为如此也能从事了教育工作。 但父亲本身的缺陷也很明显，就是性格。后来我反思也正因为是这种性格，才导致了后来他的结局。他一生固执且偏执，而且不够开阔，很多时候都希望能够自己左右大局。最后在成都陪他的那段时间，因为他不配合治疗我发了脾气。只是没想到，他没能挺过去，我当时抱着最大的乐观，希望能够有最好的结果，但终究无力。 为此，我还是有点后悔，当时那么对他，或许我能够更耐心点，会觉得好受点。 其实，过去也没有什么好回忆，因为在我看来他这一生肯定是有争议的一生。 反面和正面 正因为他的性格和习惯，我很小的时候就发现了。所以，我这一辈子用他做反面了。不吸烟，不随意发脾气，学会聆听等等。 但正如我写的悼词，他的基本素质真的很光辉。他善良、有爱心、孝顺、正直，而这所有的东西也被我看到了。他用他的言行为我树立了绝佳的榜样。 有好有坏，有血有肉有灵魂，这就是他，也值得我怀念一生了。 改变是好的现象 清明的时候，我在他的墓前想了很多，说了很多。 过去，他很少干涉我，大部分时候关心的是我的身体，或者家里有大事需要做决策，征求我的意见。对于我的工作、生活、感情等问题他几乎不问。 不问并不代表他不关心啊。 他的追悼会，他的好朋友，也是在他重病期间帮助他找医生医院的发小吧。告诉我，父亲和他聊天一直担心我的家庭问题，其实内心期望我能尽快成家，他对我的工作觉得挺不错，而且他知道我的品性，也很放心。但父亲说，他看到他同龄的同学朋友都当爷爷了，自己却看不到儿女成家，子孙满堂还是内心失望的。 特别是他也大概知道自己时日无多，更是内心伤感了。尽管如此，他却不当面和我说，估计我也是让他失望了。 过去的我，其实挺自我。自己的事情自己知，其实也较少考虑他们的感受，现在也是有点不安。 在父亲墓前，我无法承诺什么。因为，我一直觉得这些事情是个人的事情，无论如何也是我自己的宿命，我一直不希望被人左右，也不希望被人干涉，对于我来说我知道自己的目的。我能承诺的是，就是一定会过得很好，有自己满意的结果。 无论什么样，倘若有一天我成家有儿女了，当他们能明白的时候，带着他们到父亲的墓前拜祭，把我写的碑文解释给他们听，告诉他们爷爷的人品和一生。 当初立碑，亲朋好友说碑文是文言文看不懂，他们懂不懂没关系，我们的子孙后代懂就行了。 父亲的财产 他的意志和精神算是留给我最大的财富，因为那是我的父亲，世间的独一无二。 过去我和他的沟通不算多，但现在想起来，他也时刻影响着我。 在最初的时候，他怕他的病拖累我们家的经济，告诉我看病花15万就行了，不能再多。 但父亲你可曾知道，你的健康和生命无价，怎么可以用钱来衡量！ 永在 不能忘记，也不要忘记，也不该忘记。 所以，我想念你。 Edit Me at Github - Org Source - Last Updated 2018-04-14 六 21:23.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[2017年终大总结]]></title>
      <url>%2F2017-12-17-2017%E5%B9%B4%E7%BB%88%E5%A4%A7%E6%80%BB%E7%BB%93%2F</url>
      <content type="text"><![CDATA[又是一年了 一转眼，2017年又快过去了。按照往年的习惯，一般都会在元旦假期写一篇年终总结，过去有时会发在微信公众号，有时会发在博客，有时写在笔记软件里只给自己看。 今年打算提前一点时间写完，也是不希望最后半个月有什么不好的事情吧。回忆一下过去一年的种种，也给自己定一些目标，虽然这些目标一般都不能全部完成。 健康 今年家里最重要的事情就是父亲的病，也算是不小的一个变故，大半年的主要精力都在这件事情上了。 父亲是个老烟民，所以也算肺癌的高风险人群。过去几年，作为儿女也会提醒他去体检，可能也是我们长期不在父母身边只是提醒而没有足够的重视，所以在过去几年他就只体检过一次，那时候还没什么问题，可是多年后我们疏于预防，终究还是碰到了。 父亲最初只是发烧，而且抗生素无明显效果，那时候他却去了山东跟随堂叔打工，后来我们安排人把他从山东送回来了家里，那段时间我甚至准备去山东带他回家了。回到家后检查，医生说可疑肺癌。我们又赶紧安排他去上级医院检查，得知确切结果当晚就定了第二天的机票回家了。 其实，为了他治疗的事情也一度曲折。因为考虑他的性格，在初期我决定了隐瞒他真实情况，所以在刚开始他是在不知情的情况下进行的化疗。但后来考虑更好的治疗环境和方式，我还是决定告诉他然后去了成都治疗。 值得高兴的事是，他的治疗还是有效果，医生反馈的结果都是偏好的。尽管我已经无法知道他的后续生存会如何，对于我们做儿女的尽一切能力保证他的生命延续和生活的更高质量。 这件事对我的影响很大，在我得知父亲的病情后特别内疚，因为我们对父母的关心没有做到最好，这也给我一个警醒对亲近的人的关注最重要的就是身体健康，这也将会成为我的一个准则。 这里我感谢我妈妈的工作，她立即停止了她的工作去照顾父亲。而且生病的父亲脾气并不好（尽管没生病父亲的脾气也很古怪），所以很多时候她都是很淡定的和父亲相处并支持他。我并不能长时间在家照顾父亲，在刚开始的几个月安排住院治疗时频繁回家，但后来稳定了我就没怎么回家了。有时候母亲也很焦躁，毕竟父亲是个难相处的人，大部分时候我只能作为润滑剂从中调节。 我很庆幸我们家能在困难面前团结一致，为了共同的目标而努力，每个人或许有累或者焦虑的时候，但我们的心和精神在一起，这对我们解决问题给了很大的帮助。 工作 工作其实没什么，简而言之就是不怎么开心。 过去一年的团队变化给我带来的影响其实挺大，只是我一直以沉默应对，所以是用自己的能力做好自己的工作。后来加入到上海的项目中，发现整个工作的情况发生了一些我自己都觉得很无奈的事情。 虽然我不敢说自己的产品经理经验足够丰富，但过去多年的实际工作早已经形成了自己的产品观和方法论。这次却被冲击的支离破碎，我不能理解一个人的工作方法和逻辑如此混乱却试图用这种方法影响整个团队。 后来又有一些事情颠覆了我的观念，突然觉得原来这个团队早就变得很无法描述，过去的佛系工作方法居然能够让我舒适地工作了不短的时间，逃离了这种无奈的尴尬。 至于以后的打算，目前正在规划中也就不便多说。 情绪 今年的压力很大，家庭和工作是两大需要解决的问题。很难得是在这个情况下，我坚持了把抑郁症用药基本停下来了。 年初我咨询了医生，医生并没有建议立即停药，但从去年下半年开始我已经开始逐渐减少日常的用药了。所以从今年初，我开始着手准备大幅度减少用药甚至阶段性停药。从一开始的用药量调成三分之一，到后来一周一次甚至一个月两次，并没有带来什么影响。 并不是我情绪会始终保持一个平稳的状态，在11月份的一段时间我的焦虑不安和低沉给我的身体和情绪带了不好的情况，我一度甚至开始恢复了药物的支持。所幸我更多的采用了不一样的方法来调节自己的情绪，很快就能恢复过来了。 从2012年开始被抑郁症困扰，不算严重的情绪问题逐渐发展成了无法控制的心理问题，最终靠药物治疗来解决问题。而带来的身体问题更加难以解决，2013年从康宁医院出院时体重达到了190斤，而作为对比我2012年末的时候体重才140多斤。 所以，其实我一度很缺乏自信，因为无法面对这样的自己。 体重 这是一个值得说的问题，今年我的一个重要任务就是减肥。因为体重的增加带来的身体问题就是脂肪肝，幸好血脂并不高也没有典型的高血压问题。但肥胖一定会带来健康的问题，而且肥胖实在是对个人形象的影响太大。 去年做完阑尾手术，也发现困扰自己的肠胃问题得到一定的解决，而且体重有了一定的下降，所以这给了我一些信心，于是把减肥作为2018年的重点目标之一。 其实减肥的方式对我来说很简单，一是将过去的日均饮水量增加了一倍，几乎平均每天2000cc；二是仍然坚持素食，并逐渐增多了青菜的摄入量，减少米饭摄入量；三是适当的运动，保证能量的消耗超过能量的摄入量。 值得高兴的是体重终于从接近190斤减到了167斤，大肚腩已经明显没了，整个人的体型也恢复到了一定程度。 这也算完成了一个大的目标了。 学习 今年在知识上的进步比较小，主要是时间的问题。因为频繁出差和加班，所以剩余的空闲时间比较少，有时候抽空读点书也是和技能没什么关系。今年读的哲学和历史书籍倒是多了一点。 这一年学习得到的越发零散，无法构成一个系统的知识结构，或许只能等以后慢慢的补充了。 其实，达克效应在我身上体现的愈发明显了，随着知道的越多越发现自己知道的越少，因为这个世界的未知真的太多，以前无知所以觉得世界很单薄，现在来看真是值得怜悯自己。 我也深信自己其实没有更多的权利甚至知识去判断事情的真伪性，所以尽管或许我能证伪但我没有动力去做了，保持他人自我判断的权利吧。 哦，有个值得高兴的事情就是自从我加入R邮件组已经四年了，今年终于开始可以在邮件讨论里回答其他人的问题了，也开始将过去几年学习的Python应用到工作实践中。 更值得我高兴的事情是，我总结了过去几年的产品经理工作经验，明确了我的产品观和产品方法论，终于有了工作使用的思想武器了。 新年目标 2018年的目标很简单： 持续的对父亲的病情关注并努力的保证他的生存质量 在工作上有大的突破，进入产品管理的方向 继续减轻体重，争取完全消除脂肪肝 继续不断地学习，努力构建完整知识体系 其余的重要的事情 嗯，努力加油！ Edit Me at Github - Org Source - Last Updated 2017-12-17 日 10:45.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[高贵的灵魂始终自由]]></title>
      <url>%2F2017-11-05-%E9%AB%98%E8%B4%B5%E7%9A%84%E7%81%B5%E9%AD%82%E5%A7%8B%E7%BB%88%E8%87%AA%E7%94%B1%2F</url>
      <content type="text"><![CDATA[题记其实这是一篇游记，但我用了一个飘忽的主题，别被标题给惊吓住了。只是，这篇游记附带了自我剖析以及无意识自发苏醒的一系列眼花缭乱的操作，主要目的只是认识自我和唤醒自我。 这篇文章有点长，如果你想阅读，可以拿杯温开水提前上完厕所，这样你能一气呵成读完。但是如果你说，你用手机看而且随时都手机在身，我很欣赏你。当然，如果你能坚持阅读完，以后能够偶遇到我，你一定要让我请你吃饭表达我的感激。 猝不及防的低沉真的没有丝毫的防备，就开始不对劲了，身体和情绪双双紧绷而且不能放松。在过去的7个月里，我随时随地保持着紧张，因为我总想着我会面对着我预想不到的情形，高度的紧张感能让我快速的反应。去过那段时间我已经适应了这样的节奏，然而在我现在想放松的时候却居然出问题了。 前段时间很多事有了一定程度的好转，总算能够喘口气，我都觉得后面能放松一下了。可是长时间的紧张敢，导致我在过去差不多20天时间内，努力想放松结果却比原来更紧张。过去7个多月我没有11点半之前睡过觉，这段时间我开始努力恢复到10点半之前入睡，结果在床上折腾两小时，快凌晨一点才睡着。工作的时候身体完全不能放松，情绪也开始烦躁。是的，这种情况五年前历历在目。我过去一年已经很少用抗抑郁的药，而过去二十天每天都用… 我不愿告诉家人，因为在这个以及未来一段时间，我是唯一支撑家里的人，我不想他们担心。 我也不知道能和谁聊聊，而且我其实不喜欢传播负面情绪给朋友，所以自己一个人很压抑。 准备工作完全没有准备，就来了一场出走。 周二晚上我发了一个朋友圈。非常要好的朋友雪莉姐看到了，打电话问我的情况，我仿佛抓到了救命稻草，狂说一番。自从她恋爱更后来结婚，我就很少打扰她，这次她愿意倾听真的非常感谢她啊。 挂完电话想到自己应该做点什么，让自己重新回到正轨，干脆出去走走吧。然后订了周六早上的火车票和周六晚上的酒店，结果一激动把返程的车票订反了，于是干脆退掉返程票不买了。 周五一个朋友生日，我本来想约她一起吃饭庆祝她生日，周四早上没约到…，然后周四下午在做牙齿的根管治疗后，就临时决定退了周六的车票，改成周五晚上的车票，打电话把酒店改到周五晚上… 周五早上，又在淘宝上租了一辆摩托车。是的，在周六晚上的酒店和返程的车票（其实没有了），还有具体游玩的景点路线没搞定的情况下，我就这样出发了。 过去八年，我出门旅游（除了集体游）都会提前规划和提前做攻略，这次真的是没怎么准备，因为我想走到哪就在哪玩一会。 出行周五下班前，突然来了好多事，搞得我一阵手忙脚乱，晚了15分钟下班不说，一边走出办公室还一边打着工作电话，也不知道是不是个好兆头。坐地铁去北站到地铁站就已经快七点了，而高铁是七点二十出发。但是作为一个宠辱不惊，临危不乱的真男人。我依然是保持着固有的步行节奏直接去进站口希望用身份证进站，发现人工窗口排队的人太多了，考虑了下然后镇（yi）定（lu）自（xiao）若（pao）的走到取票窗口取票后走自助通道。 进了候车室车还没开始检票，我就找地方买瓶水，就在候车室走了个大S形，然后才走到检票口，这时候检票口已经是最后一拨人了，看到这我洋洋自得，着急有屁用啊。 上车前，二伯父在群里发了一个问题，[1,3,5,7,9,11,13,15]里求任取三个数加起来得三十，这道题以我二十年的智商分秒就解出来了，事实证明我现在的智商不及二十年前。我一上车就拿出电脑，准备写个python脚本计算，结果老是有问题。然后旁边一哥们很有兴趣的看着我，他说他以前对编程也有兴趣并且学过，他问我是什么语言，我一顿解释，当然他没学过python。他也跟着我研究，然后他一边百度一边和我热烈的讨论解决方法。 最终下车前（我先坐到广州南转车），我们还是没解决… 说实话这时候并不能显示我的蠢，因为我在广州南候车的时候又仔细看了下题目，突然发现这些数都是奇数，三个奇数相加怎么能得到一个偶数呢？？？？我突然有种自我放弃的感觉，想祈求上苍用雷劫让回到二十年前永远不再长大，才是我正确的归途，因为再这样下去我的愚蠢会越来越让我对自己失去信心的。 在广州南去桂林的动车上，我订了返程的车票，本来我想坐周天晚上的普快回深圳（到深圳周一早上10点），但是据说领导周一周二到深圳来监督我们工作，还是干脆周天下午回深圳，毕竟我早已经没假期了。 突然发现我忘了加那位兄弟的微信了。颇为遗憾，虽然只有三十分钟的交流，但那种热烈而充满兴趣的讨论很少见，因为两个都不是很懂的傻子（因为都没发现这个问题根本没解）彼此帮助对方再难出现了吧。 经过广州南转车去桂林，在车上很无聊也睡不着。就这样听着音乐坐完了两个多小时的车程，到达桂林快十二点了，准备打的去预定的酒店，在车站才发现可以直接包车去阳朔，但是太晚我也不想折腾而且定的酒店是不能取消那种，于是打的去酒店，到了酒店各种折腾凌晨两点才睡着。 玩的一天早上醒的其实比较早，大概七点半就醒了（长期的生物钟），然后不想起床又继续赖了一个小时。退完房就快九点了。这个时候我还在思考是坐船还是坐车去阳朔，想想为了快点到目的地，还是去坐汽车吧。 到了车站简单吃了个早饭，然后就准备出发，上车的时候有几个歪果游客，不敢确定他们是否坐对了车，然后就拿着票问我，扫了一眼车票然后就说Yes，结果他们连Thanks都没回复我，搞得我想说一句No thanks都不行（画外音：难道不是you are weclome吗？）。我一路在想他们的到底是伊比利亚人还是斯拉夫人呢（其实这两个人种差很远啦），反正不是日耳曼或者凯尔特人。 坐我旁边的小伙子来自北京，刚刚作为志愿者去贵州参加完活动后独自来到阳朔旅游，比我大了一岁。聊了一会，他走过很多地方，挺有趣的一个人。 去阳朔之前，我打电话给租车的老板，把本来租的燃油踏板换成了电动车，因为考虑到其实路途并不远，电动车就足够了。到了阳朔，老板把车直接送到车站，是一个米国旗团的小龟王（也可以称为小绵羊）。于是，这一天它就是我的坐骑啦，它长这样的。 其实玩的很简单，就是骑着车到处跑，遇到景点就骑进去看看景点的介绍，有兴趣的就买票游览，不感兴趣就继续前进。大概浏览了几个景点，因为记性不好现在就差不多忘了，唯一记得就是十里画廊还可以，大榕树一般。 整个过程没有坐船，因为没觉得坐船多有趣。游览了几个景点，然后骑着车就往更远的地方跑，沿着一条路边骑边停，一路上吃吃喝喝，感觉很惬意。 中间骑车的时候看到那矗立的一座座小山很想拍照，于是我单手骑车单手拍照，发现拍的照片都是模糊的，而且有次差点手机掉了。于是我干脆不拍了，就骑着车看风景也觉得不错。 一路上非常多的摩托车，而且几乎都是小绵羊，有两个女生一辆车的，也有女生骑男生坐的，最多的是男生骑女生坐，少部分两个男生。我见了一个比较怪异的组合是，一个男生骑车，后面坐了一个大胖子…，可怜那辆小绵羊了。 差不多玩到六点过，我把车骑到西街还车，顺便在西街游览了一会儿。找了地方休息了下，顺便在微信上订了酒店。反正不是很远，就走路过去了，到了酒店收到惊喜，本来订了一个130元的普通大床房，酒店给升级成了套房，虽然只是一个晚上，但也觉得很开心啊。 因为过去一段时间很忙，所以身体并不是很舒服，很多筋骨比较僵硬。在美团搜索到一个养生堂，评价很高于是想去试试按摩，话说上次按摩应该还是2015年国庆出去玩，平时我都不好这口，既然出来玩自然要放松。不过发现比较远，还要折回西街，这时候就后悔把车还了。幸好酒店旁边有个租车的，租了个自行车就骑过去了。 到了养生堂，买了张团券，收银小姐扫码的时候还特别说明，他们是正规的按摩，我很诚恳的说我是来按摩放松下身体的。这年月啊，看来色情擦边球相关的事业已经发展的很迅速了啊。不得不说这家店的技师技术很不错，而且从侧面反映了按摩真是体力活。我让帮忙重点按下后颈部和双肩，她也忒使劲了吧，按的我痛死了。不过，按完确实全身觉得轻松了不少。 骑车返回酒店差不多九点半，在酒店房间整理下今天的记录就睡觉了。 整个骑行有若干小遗憾，到了路上发现怎么别人的小龟王都是新的，就我的有点破破的，骑起来还有响声，后来才知道他们的确是新车，但比我的租金贵了十多元，勉强心理平衡了。还有就是换了电动车的速度不咋样，虽然老板说他们的最高车速能上40KM/S，但估计他是在体重70KG下测得。以我的体重以及巨大横截面积带来的风阻，死活在32-33KM/S上不去，没有速度哪来激情，看来下次再来的话还是得租燃油踏板车。 骑行时差点还把包给丢了，路过一家玻璃屋时，停下来喝水发呆。走的时候忘了背包，我都把车骑出去快20米了，突然发现怎么轻松了这么多，然后才醒悟忘记拿包了，哈哈。就是这家： 返回深圳前一天晚上差不多十点就睡了，不知道是因为按摩让身体放松了还是有点累，很快就睡着了，不再像过去几天翻来覆去睡不着，果然出来游玩放松身心很有帮助啊，本来早上定的八点的闹钟，我醒来一看七点五十，简直perfect。 收拾好背包，下去吃了个简便的早饭，就直接退房准备回深圳啦。 说起回深圳订票，充分发挥了我这次随心所欲，不需准备的风格。昨天晚上我计划从阳朔坐汽车到桂林，然后去桂林西站坐动车先回广州南，再从广州南坐高铁到福田，而且订好了桂林西-广州南-福田的车票，所以计划是这样的： 结果在按摩的时候，我随便看了看12306，看到了阳朔到桂林西有火车，其实也看到了阳朔到深圳有高铁，但是在早上9点过，我并不确定能起得来，而且只剩下商务座觉得有点小贵，所以放弃了。我毅然决定买阳朔到桂林西的动车，这样可以无缝连接而且时间间隔相当的好。不得不说，传统的思维这样想是没错的，但是怎么能用传统思维去考虑阳朔的情况。事实也证明了没有准备是多么的天真。 订完票我正在按摩，我就问技师怎么去高铁站，她告诉我要去专门的汽车站去买票坐车去，然后要坐一个小时才会到。我目瞪口呆的问，难道高铁站不在阳朔县城附近，得到的回答是挺远。我突然明白了，阳朔县城附近都是自然景观的景点，为了保护自然环境和旅游资源，肯定不会把大型的车站和高铁线路放在县城附近的，于是我想了想把动车票退了，还是坐汽车算了。 我又算了笔经济账，觉得动车其实也划算啊。动车票价20元，而且24分钟就到桂林西了。我坐汽车从阳朔到桂林27元，然后要一个半小时，然后打车去桂林西要30分钟，差不多40多元的费用，所以： 看这个图果断选第一个方案啊，于是我又傻傻的重新定了一张从阳朔到桂林西的动车票，哈哈哈哈。 这是昨晚的准备，现在说说早上的实际发生的行为，再次证明不用大脑思考问题，或者我们已经习惯了某个行为方式，在一个陌生的环境里会带来很大的问题。 早上，我去路口坐公交车准备去汽车站转公交去高铁站，旁边一位大叔问我要不要坐他的摩托去，我已经等了好一会了还没等到车，所以不想继续等了。我问大叔可以微信支付吗，大叔说不会微信支付（大叔大概50多岁），然后我问大叔要多少钱，大叔说八元（其实路程不长）。我翻遍全身就找出来四元人民币和一百元的泰铢，我从深圳出发就带了十三元和一百泰铢（这个卵用没有），然后昨天又花了几元。大叔很无语的看着我说，行吧我把你送过去。于是我觉得遇到好人了（虽然他也是要高价），于是欢快的坐上摩托车去汽车站。 到了汽车站，我问大叔是不是这里坐车去高铁站。大叔说不是，要到高铁专线的汽车站坐车。好吧，我依然用常规思维理解了他们本地人口中说的汽车站，大叔说我送你去吧，我简直觉得他已经是大大的好人了，毕竟我只付了他四元钱。我还问大叔汽车站应该可以微信支付买票吧，大叔应该可以吧，我就很放心了。 到了汽车站，结果麻蛋说不能微信支付买票，简直无情啊。然后大叔又带我去旁边的邮储去取现，这里插播一句，我以后不会用邮储的服务，挂着银联的ATM机居然不能识别我的银行卡，还不如村镇银行。大叔又带我去旁边的村镇银行，我取了点现金，大叔发挥雷锋精神带我抄小路去车站，结果到了车站那趟车已经出发了，而下趟车十点半才出发，妥妥的赶不上火车啊，而且这个时候我都只支付了大叔四元钱。 没办法，只能在车站附近找个包车去车站，我身上没有零钱，找包车师傅换零钱他也没有，我干脆就让包车师傅付了大叔十元钱，自己又从钥匙包里找了三元硬币，都给了大叔。于是支付大叔的钱是4+10+3=17元，其实这钱已经超过实际价格了，但我觉得大叔真的是不错的好人，在我只有4元钱的时候并没有不理我，反而还热情的搭载我，毕竟在取现前我最多只能支付四元。我想了想，给他留个纪念，于是把一百元泰铢也给他了，告诉他可以留着纪念，也可以去银行换成人民币，哈哈。那么早上的总结如下： 你们以为这就算了吗？显然不是，后面的我都没想到。 我上了包车师傅的私家车（100元，含支付给大叔的10元，另外我查过滴滴的价格大概是82元，所以价格基本没多少高价），刚开始我和师傅聊的画风还不错，比如说桂林的山水特点、人情风俗、饮食习惯以及车站为什么这么远（师傅的回答和我思考的一致）。 大概出了城，师傅的话题就变了，稍微回忆下：师傅：一个人来旅游啊？我：是啊师傅：嗯，这里好，玩了几天啊？我：昨天上午到的阳朔师傅：哦，有没有去西街玩啊？我：玩了啊，下午还车的时候去逛了下西街，我觉得商业步行街都一个样，玩了一会就回去了。师傅：西街美女多哦我：没注意呢（真没注意），玩了一天累，去XXX按摩了下就回酒店睡觉了。师傅：哦，那家是正规的养生堂，有没有找美女玩啊？我：没遇到啊师傅：出来玩，找个美女玩啊，放松下。你又是一个人，怕什么？我：（尴尬的笑）这个不是怕什么，太累了。师傅：下次你一个人来，或者和朋友（只限男士）一起来玩就找我，我帮你们找美女玩。（然后师傅热情的发名片给我，我这么具有高贵自由灵魂的人当然是坚决的接过来看看啊）我：哟，师傅还是导游哦师傅：是啊，淡季就跑跑车，我们这妹子很多哦。我：是吧，忙季就当导游，不错啊。师傅：是啊，我们提供很多旅游服务啊，妹子很多。我：果然哪里旅游发达，色情产业也一定程度发达啊。师傅：就是，出来玩就是要放松，我们找美女提供一条龙服务，价格还公道。我：怎么公道法？师傅：你说，广东吧，随便找个美女至少得600元吧。我：这个价格还真不知道师傅：我们这400元服务质量就很好啦，比广东质量高服务好我：地域经济差异问题师傅：嗯，是的。下次来打我电话，绝对服务好。我：我还是怕。师傅：怕什么，你一个人出来玩，就是要玩的开心，反正你老婆不知道。我：（要是有老婆我还一个人出来玩么）其实我随便转转，吃吃喝喝也很开心。 没想到，做个私家车居然碰上拉皮条的了，太搞笑了。我这么有高贵灵魂，一切自由出发的人，有着坚定的道德观念和正直的德行的人，下次再去阳朔玩的时候必定是带着喜欢的妹纸去的好吧，哼哼。 后记其实，这次出来并不单纯是旅游，毕竟是时间短。大概想的是换个环境，思考几个我需要解决的问题，只有在轻松的环境下考虑这几个问题，才能做出比较正确的决定。 过去几年，特别是抑郁症之后，我把自己的欲望降到了一个低点（况且我原本就是一个低欲望的人），都快接近清心寡欲了。在工作和生活上几乎没什么追求，一直希望能够平淡。但是今年发生的事情，让我突然醒悟到如果过于追求平淡似乎并不是件合适的事，因此我想思考的就是，是否要改变，而如果改变是否会给我现在坚持的道德和观念带来冲击。 过去几年舒适平淡的生活，已经把过去的野心磨灭的差不多了，这不太妥当。 我想其实答案已经有了。 感谢这次说走就走的行动需要感谢以下机构： 感谢微信提供车票和酒店的预定服务感谢淘宝提供购买租车服务的平台感谢微信支付和支付宝全程提供无现金支付服务感谢12306提供的火车票预定服务感谢以下机构提供了整个旅程的资金支持：汇添富基金（相当给力）、易方达基金（也很给力）、国投瑞银基金（中规中矩）、博时基金（纯粹酱油），希望他们继续努力，为我下次旅行继续提供支持。 感谢各位的阅读，祝你们安好！ 本文由Evernote提供全程的笔记功能，导出为markdown格式在MWeb上修改编辑（D2815阳朔-广州南），最后编辑于2017-11-05 16:17。在G6071广州南-福田的车上推送。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[读书和买书的变迁]]></title>
      <url>%2F2017-10-30-%E8%AF%BB%E4%B9%A6%E5%92%8C%E4%B9%B0%E4%B9%A6%E7%9A%84%E5%8F%98%E8%BF%81%2F</url>
      <content type="text"><![CDATA[目的 我已经不记得我的第一本书是什么时候买的了，但我还记得是什么书，在哪买的。从我开始读书起，已经快三十年了，社会的进步和我的成长，无论是买书还是读书，均有了很大的变化，以此文纪念这些年读书的经历。 读书算是爱好吗？ 我一直怀疑读书是否算是一个爱好，在当今如果不多读点书，似乎是很难的。无论是工作、交际还是生活，书籍是人们快速和系统获取知识的最有效的方式。 现在自媒体的泛滥，让人们获取资讯的方式变得更简单，但我一直不承认这些传递的东西是一种知识，很多东西需要系统的知识体系来不断的渗透。 我一直喜欢读书，并且坚持了数十年，而且随着年龄的增长，读书的范围也日渐拓宽，很多做人做事的态、方法和理念都是从书本中学习到，并不断总结形成了自己的的观点。 其实，很多人在离开学校后，就不再读书，或者单纯的只是为了工作才会去学习，这还是被逼迫的。 书籍不断的塑造我们的知识结构，不断的让我们的精神净化，如果我们不更新我们的知识和思想，我们就会被遗弃。 我认为，读书在现在情况下，还真成了爱好，而不是大家的共识。 读书的变迁 我周岁的时候，在老家的习俗下，有个抓周的习俗活动。据我妈说，我先抓了吃的（难道证明我是个吃货？可是我并不是啊），然后抓了书本。 我妈说：这孩子以后就是个读书的料，实际上他们并不认为这种抓周靠谱，所以早早在老家修房子，以为我会在农村扎根，成为一个农民，娶妻生子&#x2026;，好了，扯远了。 我觉得真的能预测一个人的行为，自从我学会认字读书，基本上空余的时间差不多都是捧着书本读书。 幸好我父亲是个老师，家里的藏书在农村家庭里算是顶尖的存在了，而且后来他继续大学的专修，很多厚部头的历史书籍，我小学到初中，基本上读了很多历史的书。 除了历史，很多哲学的书也会读，不过年少的时候思想并不成熟，所以当时很多都读不懂，现在回过头来再读，倒是所获良多。 四大名著、金庸也是那时候读的，很搞笑的是，读初中的时候每次考试，我早早做完试卷，就在桌肚子底下垫本金庸小说，读的不亦乐乎。 后来高中学习倒是很紧张，也没时间看些闲书，大概只有在寒暑假的时候读些稀奇古怪的书。 我高中有个室友，读钢铁是怎样炼成的，读了一个学年。 买书的变迁 最早的时候是在新华书店买书。 我第一本自己的书，实在镇上的新华书店买的一本怎么学习写作文的书。 然后在初中毕业之前，就没有再买过书了，一般都是换着书读，或者借书读。 高中的时候，有段时间流行贝塔斯曼的邮寄活页，上面介绍了很多书籍，然后我们很多人就会选自己喜欢的，然后凑钱去邮局用汇款单寄款，然后贝塔斯曼书友会把书寄过来，这个我们用的倒是很多。 再后来，卓越网（现在的亚马逊的前身）也开始学习贝塔斯曼寄活页，采用了同样的方式，搞个书友会。 嗯，新华书店也是非常重要的买书渠道，但是那时候穷学生没什么钱，新华书店又不打折，我大部分时候就是过去读书，买书是件奢侈的事。 那时候，县城差不多半年会搞一次展销会，很多盗版书在展销会上出售，那个时候我们会去淘书，很多各种奇怪的书都有。当然书籍的质量很差，不过大家乐此不疲。还是我有个室友，为了买书，连续吃了大半个月的泡面，让我十分钦佩。 大学的时候买书的行为基本上就没有了，因为存放是个不容易的事，不过图书馆真的很不错。我后来都不知道自己借过多少次的书了，就凭借这些书，我学会了很多专业之外的东西。 工作以后 刚工作，那时候在Morningstar工作，公司允许每年报销1000元的书籍费用，特别高兴。所以那时候买书很积极，但也因为如此，买书就不仔细，买了很多垃圾的书。 现在那些书还在我的书架里吃灰。 尽管后来离开了MS，我也每年基本上保持买一定量的书来阅读，慢慢的书越来越多，很难简单的收藏。就开始买书架，越来越多，也开始把对自己没有什么作用的书开始送出去，分享给需要的人。 就在今天，买了一千多的书，打完折差不多就四百，算起来比较划算了。 可惜的是，花了好多时间挑选书，而且好几本收藏了很久的书，居然在这个打折的季节缺货，哎，太可惜&#x2026; Edit Me at Github - Org Source - Last Updated 2017-10-30 一 22:22.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[过去和未来]]></title>
      <url>%2F2017-10-29-%E8%BF%87%E5%8E%BB%E5%92%8C%E6%9C%AA%E6%9D%A5%2F</url>
      <content type="text"><![CDATA[写篇文章真难 晚上在家想写篇博客文章，憋了半天没写出来，本来想约几个好友吹水聊天找找感觉，但大家都有自己的事情忙，所以干脆登录死了快一年的公众号（居然还有十几个关注，真的是不离不弃啊，太感谢了），爬下来一篇无病呻吟的老文章，权当完成任务。 过去和未来 晚上脑子抽了下自创了一个句子：绕不过的是过去，看不穿的是未来。 想想我，活了三十年，很多事情想的并不清楚，也不明白。就这样糊里糊涂的过去了，一不小心还得了个抑郁症，然后以为自己大彻大悟，其实就放狗屁，没放下的东西还多着呢。 之前，我很多时候还是会和人妥协，说的好听叫为人和善，说的不好听就是没原则。我只是懒得计较，大部分时间花在争执上是没有必要的。 我过去怎么样，我已经没有办法去改变了，或许曾经操蛋过，也或许曾经傻逼过，但又如何，我不可能再回去变得英明睿智了，所以终究还是操蛋的过去。 未来怎么样，我还是能左右的。 我还是从本源上相信我自己是个聪明的人，能够判断出事情的是非，判断一个人的优劣，或许还能做一两件出彩的事，免得更以后回过来看，认为自己确实是个傻逼。 坚持原则好不好? 第二个问题比较虚。 我给自己定了很多原则，而且似乎特别死忠的维护这些原则，觉得背叛了原则就和我就和自己有了莫大的仇怨。哪怕是对自己很重要的人也这么要求，显得不近情理。 是对还是错呢？ 我也不知道，反正我有时候想抽自己两嘴巴，想问自己，你干什么不好，非得想做个君子圣人，以为能彰显自己多么正确，实际上就是设置陷阱让自己奋不顾身的跳，并且跳之前还高呼：真理万岁。 所以，有时候两个字形容自己就是傻逼。 说起来，过多的限制框架并不能造就一个正确的人，可能多了很多束缚，而成就者往往并不拘泥小节，大体原则上遵守就行了。 看来，有必要对一些不合适宜的原则说再见了。 很多事情真的想不到 我这几年有明显进步的是情绪控制力。 想想啊，我的情绪控制能力一直很不错，几乎不会生气发火，也不会和人争执，几乎不会有剧烈的情绪波动（有过一次那么失态），也不会随意的不开心。唯一就是2012年那次抑郁症爆发的那次，完全没能控制住自己。 想想当年，每当不开心就请朋友吃饭，现在没这个习惯了，哈哈。 我记得曾经有个人说过，如果你交朋友，要注意他是否会为一些小事情绪失控，我不仅从行为上避免了，而且从心理上避免了。 我花了更多的时间发展我各种乱七八糟的兴趣，这些东西足以排解掉我的伐开心了。以前要是有人惹我生气，我会偷偷的不高兴，现在啊，惹我生气的机会都很少了，即使对方说的我不开心，我也会指出来，然后妈蛋过两小时我就忘了。 看来，记性不好真的有好处啊。 好人不一定有好报 我现在开始相信了，好人不一定有好报。 但是，这有什么关系呢，我还是想做一个好人。 这是本性，我一直认为，善良是一个人的本性，无论是再绝望的环境，善良的人对待这个世界的心态仍然是善良的，并不一定是期盼有好的回报。 可社会的事实就是，在不断挤压善良的人。 我妈从小教导我，要做一个善良的人，我也一直坚守这个信念。 放弃就是罪过 我不相信坚持就是胜利 。 但我相信，不坚持就没有机会看到明天。 这个世界啊，就是这样的。 Edit Me at Github - Org Source - Last Updated 2017-10-29 日 21:19.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[《Python金融大数据分析》读书笔记-1]]></title>
      <url>%2F2017-10-26-%E3%80%8APython%E9%87%91%E8%9E%8D%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-1%2F</url>
      <content type="text"><![CDATA[写在前面 近期会逐渐的把一些读书笔记整理成文档，一是想把一些东西分享出来，另外就是用写作来调整下状态，欢迎大家拍砖，另外由于笔记是用org格式文档转过来的，可能排版会不是很好看，请原谅！ 第四章-数据类型和结构 基本数据类型 基本数据类型包括整数、浮点数、字符串。因为Python是动态类型的语言，因此在程序运行时可以判断数据的类型，而不需要在使用前实现声明数据类型。 可以用type函数来返回变量的数据类型： a=10type(a) 返回的结果是int类型的数据： &lt;type 'int'&gt; 按照我们的理解，整数和数学意义上的整数一致，并且整数类型是Python标准和内建的数据类型。Python有个特点就是可以处理任意大的整数。 浮点数一般用来表示小数或者分数， 对于浮点数，Python提供了*decimal*模块可以提供任意精度的浮点数，并提供了使用这些数值时处理精度问题的多个选项。 import decimalfrom decimal import Decimald=Decimal(1) / Decimal(10) 处理完自然数和浮点数，我们来看看文本，Python表示文本的基本数据类型是字符串(string)，并且字符串对象有一些内建方法。 t='this is a test string object't.capitalize()t.split() 我们会发现Python会返回如下结果： This is a test string object ['this','is','a','test','string','object'] 处理字符串对象或者文本时，有个强大的工具就是正则表达式，在Python中的模块为re模块。具体可以参阅相关的数据。 import reseries = """'01/18/2014 13:00:00',100,'1st';'01/18/2014 13:30:00',110,'2nd';'01/18/2014 14:00:00',120,'3rd'"""dt = re.compile("'[0-9/:\s]+'") #datetimeresult = dt.findall(series)resultOut[6]: ["'01/18/2014 13:00:00'", "'01/18/2014 13:30:00'", "'01/18/2014 14:00:00'"] 基本数据结构 Python的基本数据类型有/元组/、/列表/、/字典/、/集合/。 元组 元组(tuple)是一种高级数据结构，由多个数据构成的数据集合，其中的数据可以是任何一种数据，并且并不要求元组内的数据基本的类型是一致。 t = (1, 2.5, 'date', (1, 4, 6))tOut[8]: (1, 2.5, 'date', (1, 4, 6))type(t)Out[9]: tuple 在Python中，几乎所有的数据类型结构，都有內建索引，可以自由的引用对应的元素（包括单个元素和多个元素），*这里需要注意的是Python的索引从零开始*。 t = (1, 2.5, 'date', (1, 4, 6))tOut[8]: (1, 2.5, 'date', (1, 4, 6))type(t)Out[9]: tuplet[2]Out[10]: 'date't[3]Out[11]: (1, 4, 6) 元组还有其它的方法可以了解，需要注意的是元组一旦定义，它们是很不容易更改的，所以如果需要更灵活的数据结构，引出了列表。 列表 列表(list)相对元组，更加灵活也更强大。而且，列表是金融数据使用的最基本的数据结构。创建方法和元组类似，但是使用[]符号。 l = [1, 2.5, 'date', (1, 4, 6)]lOut[14]: [1, 2.5, 'date', (1, 4, 6)]l[3]Out[15]: (1, 4, 6)l1 = list(t)l1Out[17]: [1, 2.5, 'date', (1, 4, 6)]type(l1)Out[18]: list 我们看到，可以使用[]赋值列表，也可以使用list函数来创建列表，并且列表和元组一样可以方便的索引。 除了以上的方法，列表还可以通过不同方法来扩大或缩小（增加或者删除列表的元素）。 import timel.extend(time.localtime()) # 把时间的每个数据作为元素增加至l列表lOut[24]: [1, 2.5, 'date', (1, 4, 6), 2017, 10, 26, 21, 48, 12, 3, 299, 0]l.remove(2.5) # 移除值为2.5的元素lOut[26]: [1, 'date', (1, 4, 6), 2017, 10, 26, 21, 48, 12, 3, 299, 0]l.pop(0) # 移除索引为0的元素Out[27]: 1lOut[28]: ['date', (1, 4, 6), 2017, 10, 26, 21, 48, 12, 3, 299, 0] 以上就是列表的简单介绍，列表还有其它的方法，可以参考相关的书记和手册，这里就不再赘述了。 字典 字典(dict)对象就是按照键码（可能是字符串对象）读取的数据字典，也是一种可变序列（上面所说的元组是不可变序列，列表是可变序列），是按照key:value的方式进行存储数据，需要说明的是列表是有序的而且可以排序，但字典对象是无序且不可排序的，字典可以用{}定义。 d = { 'name' : "Allen Zheng", 'age' : 31, 'sex' : "male", 'Country' : "China", 'Title' : "Senior Product Manager" } type(d)Out[30]: dict 同样，字典对象也內建了一些方法，比如索引等等： n [31]: d.keys()Out[31]: dict_keys(['name', 'age', 'sex', 'Country', 'Title'])d.values()Out[32]: dict_values(['Allen Zheng', 31, 'male', 'China', 'Senior Product Manager'])print(d['age'], d['Title'])31 Senior Product Manager 字典支持for遍历的循环，事实上元组和列表也支持for遍历循环： for value in d.values(): print(type(value))&amp;lt;class 'str'&amp;gt;&amp;lt;class 'int'&amp;gt;&amp;lt;class 'str'&amp;gt;&amp;lt;class 'str'&amp;gt;&amp;lt;class 'str'&amp;gt;for key in d.keys(): print(key)nameagesexCountryTitlefor (key, value) in d.items(): print(key,value)name Allen Zhengage 31sex maleCountry ChinaTitle Senior Product Manager 更多字典的方法和介绍可以参考相关的书籍或者文档。 集合 集合是Python中使用较少的一种数据结构，集合是其它对象的*无序*集合，每个元素只包含一次。 t = ('a','b','f','d','a','m','b')T = set(t)TOut[44]: {'a', 'b', 'd', 'f', 'm'}l = [1,5,'a',7,1,'b','a']L = set(l)LOut[47]: {1, 5, 7, 'a', 'b'} 使用集合对象，可以实现数学上的集合论相关的运算，比如生成并集、交集和差集等。另外，集合有个用处就是去除列表的重复元素。 后续 下一篇笔记会介绍NumPy的数据结构，NumPy是用于金融数据分析的基石，会花更多的篇幅来说明。 另外，最近由于厌倦了工作中的时间管理、项目管理、文档管理和任务管理用不同的软件工具，实在是烦躁。于是重新拿起了荒废许久Emacs，把遗弃已久的org-mod重新拾起来做日常管理。研究了两天，逐渐上手就深深迷恋爱不释手。这里就放个截图给大家看看。 有空可以介绍一下Emacs和org-mode，简直是写作和日常管理的神器。 Edit Me at Github - Org Source - Last Updated 2017-10-26 四 23:44.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[生命的精彩来自内心的丰富]]></title>
      <url>%2F2017-10-25-%E7%94%9F%E5%91%BD%E7%9A%84%E7%B2%BE%E5%BD%A9%E6%9D%A5%E8%87%AA%E5%86%85%E5%BF%83%E7%9A%84%E4%B8%B0%E5%AF%8C%2F</url>
      <content type="text"><![CDATA[导言 最近的心情有点低沉，也不知道向谁诉说，总觉得憋在心里不太妥当。干脆还是写写文章，记录一下自己的心情，这样以后也可以回头看看，体会过去的自己。 什么样的路我一直认为自己是个幸运的人，虽然我没有亲见过比我糟糕许多的人，但我可以能想象到整个社会很多人的境遇是我平生可能不曾见过的。也就是说其实我还是处在很好的环境和情况下了。 这几年，我的孤独感越来越浓烈，很多时候有很多事情，很多思考不知道告诉谁。给父母讲，他们不一定理解，甚至很多时候我说什么他们都不明白。对朋友其实也有保留，因为大部分时候我觉得自己和其他人有很多不一样的思想和人生观念，所以真的能聊得来的朋友就很少了。而且，我这人也挺奇怪，有个很好的朋友自从恋爱了，我就尽量少打扰她了，她结婚了就更不好意思像过去那样随意地找她聊天了。 那天看到一篇文章，大概讲的是孤独是上天对一个人的赏赐，让一个人真正的了解自己的内心，学会和自己相处。过去很多年，我绝大部分时间都是和自己相处，学会了了解自己的优势和劣势。 最近一年今年家里最大的一件事就是父亲病了，当然父亲病了肯定有他自己的因素，但我的疏忽也是主要的原因。过去几年，他作为老烟民实际上有着患肺癌的高风险因素，过去我提醒他体检，但很多时候只是提醒，却没有强制性的要求，导致不能及时发现，等到发现的时候病情已经很严重了。 亲人患病对家庭来说是很沉重的，并不是因为经济的问题，而是身体和心理的痛苦。刚刚得知父亲的病，我们商量了达成一致，先瞒着他不让他知道，免得他的心理负担过重。我其实也不知道这样对不对，但确实隐瞒对治疗造成了很多不便。因为很多检查和治疗都想着不让他知道，但难免有蛛丝马迹会不对。 过了一段时间，治疗效果很不如人意，我们决定还是告诉他，并给他安排了更好的医院进行治疗。为此那段时间，我往返深圳成都数次，去联络医院和医生。然后把他转到成都的医院，同时尽量的用心理辅导来排解他的低落，我能明显感受到他的害怕和担忧。这个时候，作为家里的支柱，应该起到更大的作用，我每天打电话聊天尽量的让他感觉不到害怕。而且父亲也担心严重的病会花费巨额的医疗费，我也尽量的让他不要担心。 有的时候，家庭有问题才能发现这个家庭是否团结，凝聚力如何。我们家在父亲病了，体现了强大的团结。每个人都尽自己最大的努力来解决问题，母亲在医院护理父亲半年，在一个很小的床上就睡了大半年，姐姐也回家做饭照顾。我也在假期或者平时往返深圳成都数次，家庭体现出了强大的凝聚力，用了各种方式和各种渠道去帮助父亲，所以无论从治疗还是生活，我们都在努力做到最好，父亲也慢慢的解开心结，治疗效果也很好，这就是对我们最大的回馈。 每个人都会面临问题无论作为个体还是集体的一份子，我们都会面对自己的问题和亲人、朋友的问题，这些会给我们带来很大的困扰。坦白讲，今年大部分时候的情绪并不好，要花大部分时间照顾家人，为父亲的病奔走，找医院、检查、和医生商量治疗方案、学习相关的知识、以及各种打听化疗后的护理等等，所以大部分时间都是繁忙的。而且，工作也开始忙碌，并且遇到各种问题，最突出的就是和领导的工作理念不同。 显然，遇到这些事情，大部分人都不会高兴得起来。这几年我倒是学会了如何处理自己的情绪，或许我觉得很辛苦，也很艰难，情绪难免低落，但这些都不能带给身边的人，更不能带个关心自己的人。 这时候我能做的就是，该做什么事就做什么事，保持平稳的心态。 人生可以很精彩正如邓丽君所唱的歌：路纵崎岖亦不怕受磨炼，我们要活得精彩就得让自己的内心更丰富。 五年前，我受抑郁症困扰和感情的失败，在心情最为沮丧的时候选择了辞职，以为休息一段时间可以让自己平复并走出阴影。然而，一段时间的松懈并没有让我真的恢复。那时候很颓废，内心干涸，无所事事，每天除了玩游戏上网看电视，其它的事情都不做了。要知道，过去近三十年我的兴趣爱好广泛，音乐、书法、读书、体育、厨艺和手工活都是我的爱好，那时候都没兴趣了。自己把自己的内心抛弃，不再继续任何有意义的尝试，所以活得很丧气。 现在想来，自己还是不够沉稳，遇到了无法处理的事情就不愿意面对，或者没有尽最大的努力去改变自己，让自己回到正轨。 这几年，过去的兴趣也没有找回来多少，但总有新的事情能够吸引我…，这样挺好。 孤独是上天给的最大赏赐每个人都会有孤独的时候，这个是上天给的最大的赏赐，我们如何处理孤独是人生中必须经过的。 孤独只能相处，不能解决。这么多年我已经习惯了它，很多时候它的产生来自于和家人、朋友的观念上的差异，或者对待某件事情的看法。因为会在那么一刹那间，觉得这个世界了解我的人怎么这么少，而我恰好有个习惯就是不愿意解释，说起来还是我的一个观点：我们不应该改变任何人的观念和思想，因为他是一个独立的人，我应该尊重他的思想和观念。 所以，更加孤独的时候就是，双方有了冲突，我不愿解释，而对方却努力想让你接受他的观点，这个时候我就很压抑。不过大部分时候我都无所谓，特别是如果这个试图改变我的人对我来说没那么重要，几乎是无影响的。但是如何对方是我认为很重要的人，我就会很忧郁，因为这种冲突很难解决，结果大部分时候我就妥协了。 所以，环境的孤独是无关痛痒的，然而心理上的孤独是挺难忍受的，但我想到我喜欢的人，我关心的人开心，似乎这也没什么大不了的，因为他们开心了我就开心了… 所有的事情都是在你经历时才会觉得，它们真的很有意思]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[基于TuShare和ECharts的金融数据可视化]]></title>
      <url>%2F2017-10-19-%E5%9F%BA%E4%BA%8Etushare%E5%92%8CECharts%E7%9A%84%E9%87%91%E8%9E%8D%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%2F</url>
      <content type="text"><![CDATA[导言 之前写过一篇文章，介绍用python从网易财经抓取数据并使用matplotlib和R画出K线图。上述方法尤其适用的场景，有时候在交互式绘图方面显得力不从心，今天介绍以下基于ECharts进行交互绘图，并且我们将数据的获取方式进行更新，使用TuShare这个开源的财经数据接口获取需要的数据。 简介首先介绍下TuShare和ECharts两个有用的工具。 TuShareTuShare点击这里访问是一个由个人开发和维护的开源财经数据接口包，其中的数据包括股票的历史行情、实时行情数据、分类数据、财务数据和基本面的数据等，数据均是从第三方取到获取并包装，使用python对数据进行清洗和处理，最终的数据格式为Pandas中支持的data.frame格式的数据。 如TuShare本身介绍所述，该数据接口适用于量化投资分析师（Quant)、对金融市场进行大数据分析的企业和个人、金融公司以及学习利用python进行数据分析的人（包括学生）。所以如果你对金融分析感兴趣，而又不想付费使用商业的数据接口，Tushare是一个非常不错的选择，如果你觉得这个接口很好用，并且愿意适当支持作者，你也可以在Tushare的主页进行捐助. EChartsECharts是一个纯粹的JavaScript库，由百度开发和维护的一个开源项目。这个百度的产品确实很赞，你可以在官网查看实例，并且可以修改实例来体验产品，可以发现基本上主流的图形都可以支持，而且由于文档有中文版，适合对英语阅读有困难的朋友。 另外，hexo其实是支持echarts模块的，其插件为hexo-tag-echarts3，并且你可以参考使用方法，对于此本文就不再展开说明了。 安装安装TuShareTuShare的安装很简单，可以在网站查看其的系统依赖，一般Python是最新版的都支持（包括Python2和Python3）。另外，因为tushare的数据格式为data.frame，因此要求python安装了Pandas库。使用命令安装如下： 以Mac OS为准，Linux和Windows参考网站的提示方法 pip install tushare # Python2安装pip3 install tushare # Python3安装# 如果安装报错，一般是没有安装Pandas，可以如下安装：pip install pandas # Python2安装pip3 install pandas # Python3安装 安装完就可以使用TuShare了。 安装ECharts实际上ECharts可以下载到本地，并可以和你的web或者app程序打包应用，我们这次使用的ECharts不是使用本地调用代码，而是使用Python的一个模块，其中动态导入js脚本实现绘图。因此本次不用安装ECharts。 实现原理在Python的Ipython中，有个display的模块，可以实现HTML效果的展示，更出彩的是Ipython Notebook中自带JS模块可以动态导入js脚本并执行。可以先看看示例（本文的示例均是使用Ipython)： from Ipython.display import HTMLHTML('这是&lt;font color=\'read\'&gt;HTML代码&lt;/font&gt;测试代码') ECharts的基本用法ECharts是个纯粹的JS图形库，所以其语言本质是Javascript语言。根据官网的示例，我们构建以下一个图形： option = &#123; title : &#123; text: '各金融资产比重', subtext: '纯属虚构', x:'center' &#125;, tooltip : &#123; trigger: 'item', formatter: "&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)" &#125;, legend: &#123; orient: 'vertical', left: 'left', data: ['股票','债券','基金','金融衍生品','现金及等价物'] &#125;, series : [ &#123; name: '金融资产', type: 'pie', radius : '55%', center: ['50%', '60%'], data:[ &#123;value:335, name:'债券'&#125;, &#123;value:310, name:'基金'&#125;, &#123;value:234, name:'现金及等价物'&#125;, &#123;value:135, name:'金融衍生品'&#125;, &#123;value:1548, name:'股票'&#125; ], itemStyle: &#123; emphasis: &#123; shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' &#125; &#125; &#125; ]&#125;; 对应的图形就如下所示，并且图形可以交互显示: // 基于准备好的dom，初始化echarts实例 var myChart = echarts.init(document.getElementById('echarts5431')); // 指定图表的配置项和数据 var option = option = { title : { text: '各金融资产比重', subtext: '纯属虚构', x:'center' }, tooltip : { trigger: 'item', formatter: "{a} {b} : {c} ({d}%)" }, legend: { orient: 'vertical', left: 'left', data: ['股票','债券','基金','金融衍生品','现金及等价物'] }, series : [ { name: '金融资产', type: 'pie', radius : '55%', center: ['50%', '60%'], data: [ {value:335, name:'债券'}, {value:310, name:'基金'}, {value:234, name:'现金及等价物'}, {value:135, name:'金融衍生品'}, {value:1548, name:'股票'} ], itemStyle: { emphasis: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' } } } ] }; // 使用刚指定的配置项和数据显示图表。 myChart.setOption(option); 所以我们看到，ECharts基于javascript绘制图形，定义好图形的参数和数据，用浏览器渲染就能得到所需要的图形，我们本文就使用了TuShare获取数据，并对数据进行清洗和处理。 TuShare的基本用法安装TuShare后可以直接使用，tushare有各种接口返回不同的数据，非常容易操作，例如： import tushare as tsprice_by_day = ts.get_k_data(code='600000', ktype='D', autype='None', start='2017-01-01', end='2017-10-19')price_by_day[0:10]# 运行结果如下：Out[5]: date open close high low volume code0 2017-01-03 16.21 16.30 16.44 16.17 162371.0 6000001 2017-01-04 16.29 16.33 16.35 16.18 296587.0 6000002 2017-01-05 16.30 16.30 16.38 16.24 264376.0 6000003 2017-01-06 16.30 16.18 16.30 16.13 171955.0 6000004 2017-01-09 16.24 16.20 16.29 16.13 149087.0 6000005 2017-01-10 16.18 16.19 16.24 16.14 79967.0 6000006 2017-01-11 16.24 16.16 16.24 16.15 91933.0 6000007 2017-01-12 16.18 16.12 16.20 16.11 82961.0 6000008 2017-01-13 16.10 16.27 16.29 16.10 190341.0 6000009 2017-01-16 16.23 16.56 16.60 16.10 533047.0 600000 示例中，我们使用了ts中的get_k_data方法，获取了股票代码为600000（浦发银行）的历史日数据，同样我们还可以使用其它接口获取其它的数据，甚至包括分时数据。 实现股票的日K线图根据以上我们的想法，首先 未完成，待续]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[LaTeX字体设置技巧]]></title>
      <url>%2F2017-08-26-LaTeX%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE%E6%8A%80%E5%B7%A7%2F</url>
      <content type="text"><![CDATA[导言 上次介绍了LaTeX中如何使用表格，本次介绍如何在LaTeX中使用字体，包括使用中文字体。 基本设置在任何文档处理工具中，字体设置是必须的。Word中可以对整个文章使用默认的字体，也可以单独对某部分文字使用不同的字体，而且相对比较简单，只需要选择要设置的部分文字，选择使用的字体就可以了，但是如何个性化的字体比较碎散就需要大量的操作了。 LaTeX也一样，需要配置使用字体。一般如果不设置，会使用默认的字体： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\begin&#123;document&#125;This is a test document, if don&apos;t declare the font, LaTeX will use default font which is Computer Modern Roamn created by Donald Knuth. \end&#123;document&#125; 那么输出的效果如下图： 可以看到，LaTeX使用了其自带的默认字体Computer Modern Roamn（CMR），这个字体是由Donald Knuth1创建的。 另外，默认的设置下是不支持中文字体的： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\begin&#123;document&#125;This is a test document. \\这是一个测试文档\end&#123;document&#125; 原因在于LaTeX的默认字体CMR并不支持中文。 支持中文LaTeX中要支持中文，可以使用CJK环境。但本文不介绍这种方式，xetex（xelatex）支持UTF8编码，所以解决了中文支持的问题。一般我们使用fontspec来调用字体。 %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;fontspec&#125;\setmainfont&#123;Comic Sans MS&#125; % 设置字体为Comic Sans MS\begin&#123;document&#125;This is a test document. \\\end&#123;document&#125; 编译后的文档如下图： 但是Comic Sans MS也并不支持中文，所以如果输入中文，还是会出现乱码： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;fontspec&#125;\setmainfont&#123;Comic Sans MS&#125; % 设置字体为Comic Sans MS\begin&#123;document&#125;This is a test document, we use Comic Sans MS font. \\这是一个测试字体的文档。\end&#123;document&#125; 所示，编译结果的文档如下，中文部分出现了乱码： 我们设置新的字体，字体能够支持中文： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;fontspec&#125;\setmainfont&#123;MicrosoftYaHei&#125; % 使用微软雅黑字体\begin&#123;document&#125;This is a test document, we use MicrosoftYaHei font. \\这是一个测试字体的文档，使用微软雅黑字体。\end&#123;document&#125; 编译结果如图，已经能显示中文了： 更多设置如果只是设置了字体还是不足的，有些配置能让字体显示等更方便，比如连字方式、断行方式等： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;fontspec,xunicode, xltxtra&#125;\setmainfont&#123;MicrosoftYaHei&#125; % 使用微软雅黑字体\begin&#123;document&#125;This is a test document, we use MicrosoftYaHei font. \\这是一个测试字体的文档，使用微软雅黑字体，如果不设置断行方式等，那么当输入的文档内容超过一行时，不能自动的进行断句，英文断句不用设置，默认了断句方式。\end&#123;document&#125; 编译的结果如下，可以看到中文不能智能断行，导致文本内容超出了页面： 所以，可以配置断行的方式，可以由LaTeX自动的对句子断行： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;fontspec,xunicode, xltxtra&#125;\setmainfont&#123;MicrosoftYaHei&#125; % 使用微软雅黑字体%-----------------------------------------------------------------% 设置文本字体和断句方式\XeTeXlinebreaklocale &quot;zh&quot;\XeTeXlinebreakskip = 0pt plus 1pt \begin&#123;document&#125;This is a test document, we use MicrosoftYaHei font. \\这是一个测试字体的文档，使用微软雅黑字体，如果不设置断行方式等，那么当输入的文档内容超过一行时，不能自动的进行断句，英文断句不用设置，默认了断句方式。\end&#123;document&#125; 编译后结果如下，中文能够自动的断行了： 中英文字体分别设置如果设置了默认字体，所有的文本会使用同一个字体，如上面的一些图片，英文和中文使用了同一个微软雅黑字体。事实上，LaTeX可以让中英文分别使用不同的字体。方式是用fontspec和xeCJK分别设置main字体，来使用不同字体： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;fontspec,xunicode, xltxtra&#125;\usepackage&#123;xeCJK&#125; % 设置中文字体%-----------------------------------------------------------------% 定义字体\defaultfontfeatures&#123;Mapping=tex-text&#125;\setCJKmainfont&#123;圆体-简&#125; % 中文的字体为圆体\setmainfont&#123;Comic Sans MS&#125; % 英文字体使用Comic Sans MS%-----------------------------------------------------------------% 设置文本字体和断句方式\XeTeXlinebreaklocale &quot;zh&quot;\XeTeXlinebreakskip = 0pt plus 1pt \begin&#123;document&#125;This is a test document, we use Comic Sans MS font for English. \\这是一个测试字体的文档，中文使用圆体字体。\end&#123;document&#125; 编译后的结果如图所以，我们看到中英文使用不同字体： main字体是重要使用的字体，还有另外两个字体设置： \setCJKsansfont&#123;MicrosoftYaHei&#125;\setCJKmonofont&#123;KaiTi&#125;\setsansfont&#123;Cochin&#125;\setmonofont&#123;Courier New&#125; 分别是sansfont和monofont字体。 一般而言，fontspec字体设置有很多选项，可以参考其文档。 1Donald Knuth是TeX的发明者，LaTeX其实就是基于TeX一系列宏包命令]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[LaTeX中的表格处理方式和技巧1]]></title>
      <url>%2F2017-08-03-LaTeX%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E5%92%8C%E6%8A%80%E5%B7%A71%2F</url>
      <content type="text"><![CDATA[导言 有段时间没有写笔记了，今天整理了一篇关于LaTeX写文档的内容，这是一个很少有人用的排版软件，我经常用来写报告、书籍和文档。今天介绍的是关于在LaTeX中使用表格。 基本处理在使用LaTeX写文档时，不可避免会使用到表格。我们在使用word时，会有内置基本的表格工具，或者直接在Excel等表格工具中进行编辑处理后粘贴过来。但是LaTeX不是这样，LaTeX需要使用宏包才能做出表格，而且LaTeX有很多不同的宏包完成表格的绘制工作。 标准LaTeX提供array和tabular两个制表环境，它们的的完整格式如下： \begin&#123;array&#125;[表格位置]&#123;列样式&#125;列表内容\end&#123;array&#125; \begin&#123;tabular&#125;[表格位置]&#123;列样式&#125;列表内容\end&#123;tabular&#125; \begin&#123;tabular*&#125;&#123;表格总宽度&#125;[表格位置]&#123;列样式&#125;列表内容\end&#123;tabular*&#125; 一般array使用于数组矩阵的排版，并且只能在数学环境中使用，如在equation中使用。绝大多数的情况下我们使用的是tabular环境来绘制表格。可以参考如下的案例：%!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;doc&#125;\begin&#123;document&#125;\begin&#123;tabular&#125;&#123;lcc&#125; \toprule %------------------------------ 功能 &amp;WEB &amp;APP \\ \midrule %------------------------------ 注册 &amp;$\surd$ &amp;$\surd$ \\ 登录 &amp;$\surd$ &amp;$\surd$ \\ 推送 &amp;$\times$ &amp;$\surd$ \\ \bottomrule\end&#123;tabular&#125;\end&#123;document&#125; 那么得到的表格如图所示： 线框我们在Excel表格中经常会有单元格的线条，可以在上面的示例中有{列样式}的选项，我们一般用|来表示竖线框，\hline表示横线框，示例如下： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;doc&#125;\begin&#123;document&#125;\begin&#123;tabular&#125;&#123;|l|c|c|&#125; \hline 功能 &amp;WEB &amp;APP \\ \hline 注册 &amp;$\surd$ &amp;$\surd$ \\ \hline 登录 &amp;$\surd$ &amp;$\surd$ \\ \hline 推送 &amp;$\times$ &amp;$\surd$ \\ \hline\end&#123;tabular&#125;\end&#123;document&#125; 得出的表格如图所示： 其中，在选项中的lc表示该列的内容的位置，有三个参数：l、c、r，分别是左对齐、居中对齐和右对齐 位置一般而言，表格的位置是浮动的，即是会根据文本内容确定，比如以上两个例子其实表格在文本的靠左位置，因此如果需要定义表格的位置。表格的位置为可选的选项: %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;doc&#125;\begin&#123;document&#125;\begin&#123;table&#125;[!htbp]\centering\begin&#123;tabular&#125;&#123;|l|c|c|&#125; \hline 功能 &amp;WEB &amp;APP \\ \hline 注册 &amp;$\surd$ &amp;$\surd$ \\ \hline 登录 &amp;$\surd$ &amp;$\surd$ \\ \hline 推送 &amp;$\times$ &amp;$\surd$ \\ \hline\end&#123;tabular&#125;\end&#123;table&#125;\end&#123;document&#125; \centering表示将表格居中放置，!htbp表示对位置的一种处理： !表示无视美学规则，按下面的要求放置；然后h t b p分别代表4中放置方式，优先级依次递减h=here 放置在代码中这个图片出现的位置，也就是你想让它出现的位置；t = top 放在该页顶端；b = bottom 放在该页底部；p = page 另起一页单独放。 表格长度在以上表格中，我们发现表格的长度和列的内容长度一致，所以会导致有时候表格长度过短，一般来说需要自定义表格长度的时候我们使用tabular*环境： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;doc&#125;\begin&#123;document&#125;\begin&#123;table&#125;[!p]\centering\begin&#123;tabular*&#125;&#123;0.75\textwidth&#125;&#123;lcc&#125; \toprule 功能 &amp;WEB &amp;APP \\ \midrule 注册 &amp;$\surd$ &amp;$\surd$ \\ 登录 &amp;$\surd$ &amp;$\surd$ \\ 推送 &amp;$\times$ &amp;$\surd$ \\ \bottomrule\end&#123;tabular*&#125;\end&#123;table&#125;\end&#123;document&#125; 其中{0.75\textwidth}表示表格总长度，\textwidth表示的是这个文档的文本长度，所以这里表示整个文本长度的四分之三。当然你也可以用cm或者pt等单位表示长度，然后绘制的表格如下图所示： 但是有个特别不好的情况，最后一列的宽度太大，占据了剩余的文本长度，我们需要调整每列的长度，代码如下： %!TEX program = xelatex\documentclass[12pt,a4paper]&#123;article&#125;\usepackage&#123;doc&#125;\begin&#123;document&#125;\begin&#123;table&#125;[!p]\centering\begin&#123;tabular*&#125;&#123;0.75\textwidth&#125;&#123;@&#123;\extracolsep&#123;\fill&#125;&#125;lcc&#125; \toprule 功能 &amp;WEB &amp;APP \\ \midrule 注册 &amp;$\surd$ &amp;$\surd$ \\ 登录 &amp;$\surd$ &amp;$\surd$ \\ 推送 &amp;$\times$ &amp;$\surd$ \\ \bottomrule\end&#123;tabular*&#125;\end&#123;table&#125;\end&#123;document&#125; 这样，表格就好看点了。 在前一段代码中，我们增加了{@{\extracolsep{\fill}}，表示了把每列的剩余长度均匀的填充，将整个表格更合理的安排列宽。 结束语好了，今天就介绍到这里。下一篇我们继续讨论，跨页表格以及合并行、和并列、对角线、表内注释等内容。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[今日扯淡]]></title>
      <url>%2F2017-06-09-%E4%BB%8A%E6%97%A5%E6%89%AF%E6%B7%A1%2F</url>
      <content type="text"><![CDATA[前传 最近一直在写曹操的一篇文章，想写的诙谐幽默点所以在使吃奶的劲，奈何技能已经多年不用，所以进度较慢，大家需要静静等待一段时间。想想好久没吐槽了，昨天怼了一个大学同学，也正好吐吐槽。 关于怼人其实我是一个好人，我已经快二十年没骂过人了，也没说过除了靠、艹、擦、我去之外的脏话了，当然我不否认前面几个字确实有点脏。 包括今天，我骂人了但我仍然克制住了不说脏话。鲁迅先生说：不在沉默中爆发，就在沉默中灭亡。 确实，我忍他挺久了。 我发的朋友圈，他的评论永远是矫情或者装逼，可能是调侃吧，但我过去就算了。 如果一次两次，我可以视为一种调侃，但一直如此，那就是他嘴贱了。 而我平生最讨厌的人中就有嘴贱的人。 而且，我和他的关系并没有好到我可以视他的嘴贱为好基友般的调戏，哦不，调侃。 不光如此，我也一直对他的为人并不感冒。 我觉得我骂得还算轻的了，要是拿我当年写作文的风范，我可以用通篇不带脏话的骂得他怀疑人生。 更搞笑的是他居然还认为他这种嘴贱是理所应当。 我就不用说当年我用知识帮他忙，然后他反过来在我秀的书架时候评论我装逼了。 嘿嘿，我就秀了怎么样，咬我？ 反正现在狂犬病疫苗也不贵。 我这个人其实挺记仇的… 还有个同学，读硕士的时候写论文然后要我帮忙找数据、建模型、写代码，然后这个同学也在他的评论下跟了句：装的可以。 嗯，我是个本科生，而且那时毕业快5年了吧… 所以啊，人的心态啊，奇怪！ 你看，我的好基友和我说话都没正常过，我都觉得挺好，嗯我就是看人下菜的… 音乐欣赏好了，负面情绪发泄了，在写这篇文章的同时录了首歌，来大家请侮辱我吧。男低音版的漂洋过海来看你。 new APlayer({ element: document.getElementById("aplayer1"), narrow: false, autoplay: false, showlrc: 0, music: { title: "漂洋过海来看你", author: "allenmagic", url: "http://op0byyd4a.bkt.clouddn.com/%E9%A3%98%E6%B4%8B%E8%BF%87%E6%B5%B7%E6%9D%A5%E7%9C%8B%E4%BD%A0.mp3", pic: "http://7viihf.com1.z0.glb.clouddn.com/face.jpg", } }); 哎，还是站起来好好唱歌了，果然一心不能二用，有好多地方没处理好，连气息都已经控制不住了，失败啊。 后记以前吧，我还是个好孩子，看见不顺眼的人我还可以放过，哪怕对我也是那样，我也忍着。 幸亏抑郁症啊（我特么感谢的居然是一个病），让我明白了，忍那么多干嘛，我又不喜欢你，你也带不来给我生理上和心理上的欢愉，才懒得管你。 不怼你我怼谁，正好我最近烦着呢。 我还必须怼了你再拉黑你。 哦，关于我评论他朋友圈？我没那闲工夫…]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[说说魏武帝]]></title>
      <url>%2F2017-06-04-%E8%AF%B4%E8%AF%B4%E9%AD%8F%E6%AD%A6%E5%B8%9D%2F</url>
      <content type="text"><![CDATA[&#x2014; title: 说说魏武帝 date: 2017-06-04 17:48:01 tags: [三国, 历史, 曹操, 闲话] categories: 闲话扯淡 &#x2014; ## 序 &gt; 最近推荐父亲看看新三国或者重读《三国演义》，但他寄情于iPad上的斗地主而无视了我的推荐。然后我又兴趣盎然地把新三国再看了一遍，记得早年读史书三国就喜欢曹操，于是就想写篇关于其的文章，今天可以算是实现了。 &lt;!&#x2013; more &#x2013;&gt; &gt; 历史这个东西，太严肃其实没多少人愿意读，很多年前的事情很多人很多事，读完了很快就忘记了，反而常人异常热心关注一些奇闻怪谈的野史，不然像《鱼羊野史》这类的书籍怎么能如此火呢。所以写相关的文章显然不能太严肃，我词文不佳只能将就写的有趣，如果读起来觉得无聊，默默的骂我两句，我无所谓反正我听不到！ ## 为什么写曹操？ 中国历史，大奸臣的模子都是模式化的，比如骄横跋扈、欺上瞒下、残暴无仁。历史上看曹操在大部分眼里都是被视为奸臣（至少在大耳朵眼里就是国贼，与操势不两立。公瑾也说曹操名为汉相，实为汉贼），比如说曹操无视天子，干预天子的婚姻巴拉巴拉，反正就是一个字`你坏`。正如一千个读者有一千个哈姆雷特一样，作为历史爱好者每个人对曹操有不同的解读，在我看来曹操就是偶像啊，真的没见过历史上有这么有才华的君主（咳咳，君主级别的王霸）。 曹操的头衔不少，比如政治家、军事家、诗人、书法家（是不是和本朝太祖一样，只是太祖多了革命者和伟大的共产主义导师称号吧）。而且他在这几个领域都做到了绝顶的程度。比如政治家，作为曹魏政权的奠基人为结束末汉分离的局面做出了巨大贡献（尽管最后给司马家做了嫁衣，但操的工作是伟大的）。军事家则是打了一场历史著名的官渡之战，典型的以弱胜强，而且曹操北征匈奴和乌恒，内战内强外战外强的主啊，比之杨广征高句丽未成搭上大隋朝强多了，至于后来隔壁司马家的晋朝反被匈奴而灭，给老祖司马懿脸上啪啪作响啊。 湿人的话，操不仅文学湿，其本人也湿（据野史透露曹操专爱人妻）。曹操的诗篇很是大气，至少`东临碣石，以观沧海`和`对酒当歌，人生几何`这种词句两千年以来能写出来的也是屈指可数吧，以至于太祖评价：往事越千年，魏武挥鞭，东临碣石有遗篇。其书法也是豪气万丈，配上其职业军人、职业政客以及职业小三的王霸之气简直炯炯生辉。 说了这么多，为什么写曹操呢，因为那句`天下英雄，唯使君操耳`。 ## 年少轻狂时 这里说说大汉朝的一些政治问题，其实早在三分天下之前，大汉朝的权力就被三分了，分别是宦官、外戚和士族。大汉朝的做官不是考出来的，而是官僚家族互相吹捧推荐上去的，所以你就会发现四百年前做官的怎么四百年后你家怎么还做官，就是典型的老子英雄儿好汉。地方政权被士族把控，皇帝想要控制国家也就只能依赖最亲近的人就是宦官和外戚了，但宦官和外戚太不争气了，整天为了权力打的你来我去的，乱的一塌糊涂。所以后来有了党锢之祸以及黄巾之乱，就在这个时候魏武帝只点了几个技能点，没兵器没小兵就单独的走出生命之泉开始推塔的辉煌人生了。 曹操也不算没背景，其父曹嵩是大宦官曹腾的养子，按理说曹操就是典型的宦三代（这个说法不正确，宦官怎么都只能有一代的啊），应该属于宦官集团。但曹操毕竟是曹操，生逢乱世不走寻常路，反而和士族的袁绍等厮混。曹嵩其人吧，放在当朝的前几年绝对是官场老手，他就靠送钱送出来一个太尉，大概就相当于现在的首席军委副主席了（又是杜撰的官衔）。当然，在这种家庭环境下，曹操也在不到20岁就进入仕途，不久就担任了首都公安局北城分局的局长了，20岁的正处级啊。 和曹嵩的为官之道不一样，少年曹操可是正气凛然，严格执法。在任期间就直接把宦官的亲戚给办了，就是这样我从人群中来，我到人群中去，我是宦官之后我就专找宦官麻烦。这下不得了，当朝敢于和权势熏天的利益集团作斗争的人可很少，这种人才要重用，所以被调过去做顿丘的县令，正式成为了地方要员。 后来，曹操因为牵连，丢掉了正处级的职位和待遇，被正式革除出公务员集团，回到老家谯县读书，准备二次报考。 不几年，宦官内部发生了变动，曹操重新被征召，委任为议郞也就是现在的智库工作人员，奈何毕竟年少轻狂，又不懂得变通，固然论文数量不少，但SCI不愿意录入啊，而且几乎无人引用，偶尔吧被CSCI收录两篇。 ## Edit Me at Github - Org Source - Last Updated 2017-06-09 五 22:11.Render by hexo-renderer-org with Emacs 25.3.1 (Org mode 8.2.10)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[数据分析系列-R-数据]]></title>
      <url>%2F2017-05-27-%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97-R-%E6%95%B0%E6%8D%AE%2F</url>
      <content type="text"><![CDATA[引言上次做了R的介绍和安装点击这里直达，主要介绍了在各个不同的系统中怎么安装R软件，还基础的介绍了怎么使用R，今天探讨下R的数据相关的知识。 R的对象R中的所有对象都建立在一组基本的内嵌对象之上的，对象的类决定了其在R中的存储方式，同时R的对象也都属于某个类，而R提供了一组面向对象编程的机制。_这段话我也没懂!_ R的基本对象类型R有如下的基本对象类型： 基本向量 复合对象 特殊对象 R语言（即R代码） 函数 内置对象 字节码对象 以下简单介绍以下R的常用的对象。 向量向量是R中最基本的对象，也是最常用的存储数据的对象。特别的，向量中的元素都会被转成同样的数据类型，也就是说向量的元素都是同种类的数据。R有多种创建向量的方法，其中最常见的是c函数：&gt; v &lt;- c(1,2,3,4)&gt; v[1] 1 2 3 4 另外，我们可以使用操作符:生成向量:&gt; 1:10 [1] 1 2 3 4 5 6 7 8 9 10 另外一个更加灵活的是seq函数方式：&gt; seq(from=1, to=10, by=2)[1] 1 3 5 7 9 其中by参数理解为步长，表示生成从1到10步长为2的向量。seq还有其它很多种用法来生成序列，可以使用help(&#39;seq&#39;)来查看帮助文档。 逻辑向量这里特别说明下逻辑向量，R是允许操作逻辑向量的。其中逻辑向量的元素可以被赋予的值有TRUE,FALSE和NA,我们可以试试下面的语句:&gt; v[1] 1 2 3 4&gt; m &lt;- v &gt; 2.5&gt; m[1] FALSE FALSE TRUE TRUE&gt; class(m)[1] "logical" 其中v是第一个代码创建的向量。而m就是我们通过逻辑运算符$\lt、\leq、\gt、\geq$来判断生成的一个向量。 矩阵矩阵也是R中常用的对象类型，矩阵可以看成多个带有下标类型的的元素集合，和数学中的矩阵类似，一般我们可以把其中某个元素表示为$a_{ij}$，更通用的可视化的矩阵如下:$$\begin{equation}A_{i \times j} = \begin{bmatrix} a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{16} \\ a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{26} \\ \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ a_{i1} &amp; a_{i2} &amp; a_{i3} &amp; \cdots &amp; a_{ij}\end{bmatrix}\end{equation}$$ 在R中生成矩阵的函数为matrix:&gt; m &lt;- matrix(c(1:12),c(3,4))&gt; m [,1] [,2] [,3] [,4][1,] 1 4 7 10[2,] 2 5 8 11[3,] 3 6 9 12 可以看到我们用matrix函数将向量c(1:12)构建成了一个$3 \times 4$的矩阵，并且矩阵的填充是按照列填充的，如果我们想按照行填充命令如下：&gt; m &lt;- matrix(c(1:12),c(3,4),byrow = TRUE)&gt; m [,1] [,2] [,3] [,4][1,] 1 2 3 4[2,] 5 6 7 8[3,] 9 10 11 12 我们这里会看到矩阵m的长度是等于$i \times j$的：&gt; t &lt;- matrix(c(1:1500),c(30,50))&gt; length(t)[1] 1500 所以创建矩阵时要注意矩阵的长度，否则会产生错误。 因子因子为处理分类数据提供了一种非常有效的方法，因子是一个对等长的的其它向量进行分组的向量对象。R同时提供了有序和无序因子。我们先看一个例子：&gt; t &lt;- c(1,2,5,2,5,2,4,3,1,2)&gt; factor(t) [1] 1 2 5 2 5 2 4 3 1 2Levels: 1 2 3 4 5 首先因子是一个向量，其次因子有个不同的参数就是Levels，这个实际上是向量t中所有的元素去重（unique）后的值，举一个因子的使用：# 假设有若干省的人的提供样本体重数据# state表示包含数据的省份state &lt;- c("上海", "山西", "浙江", "四川", "四川", "广东", "湖南", "湖南", "浙江", "河南", "四川", "河南", "浙江", "浙江", "山西", "上海", "山西", "广东", "湖南", "河南", "浙江", "四川", "四川", "湖南", "山西", "江苏", "四川", "河南", "河南", "江苏")# weight表示对应的省的样本体重数据不含小数weight &lt;- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56, 61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46, 59, 46, 58, 43)# 获取省份的样本的因子水平fs &lt;- factor(state)# 计算每个省份样本的平均体重average_weight &lt;- tapply(weight, fs, mean) 计算的结果如下：&gt; average_weight 广东 河南 湖南 江苏 山西 上海 四川 浙江 55.50000 56.00000 52.25000 44.50000 55.00000 60.50000 57.33333 53.60000 列表列表是一种泛化的向量（没错它又是向量的变种），但它和向量不同就是列表不要求元素都是同一类型，列表也是有序集合构成的对象，它包含的对象我们又可以成为分量:Lst &lt;- list(name="阿三", wife="查无此人", no.children=3, child.ages=c(4,7,9))# 没搞懂老婆都查无此人了怎么还有孩子？手动大笑 其中，列表的分量是可以包含不同的模式或者类型，如一个列表可以包括数值向量、逻辑向量、矩阵、复向量、函数、······，简直是来者不拒。而且分量会被编号，所以可以通过编号来访问分量：# 比如想访问阿三可以这样&gt; Lst[[1]][1] "阿三"# 也可以这样&gt; Lst$name[1] "阿三"# 如果想知道阿三第二个孩子的年龄我们可以这样&gt; Lst[[4]][2][1] 7# 还可以这样&gt; Lst$child.ages[2][1] 7# 再来一个彩蛋:定义一个函数，输入阿三的第几个孩子返回一段话f &lt;- function(i) paste("我有个朋友叫",Lst$name,",他的老婆",Lst$wife,",但是他居然有",Lst$no.children,"个孩子,而且第",i,"个孩子",if (Lst$child.ages[i] &gt;= 15) "不仅可以读书还可以喝酒了" else if(Lst$child.ages[i] &lt; 15 &amp;&amp; Lst$child.ages[i] &gt;= 6) "正在苦逼的读书吧" else "或许能在幼儿园找个女朋友?" ,sep="")# 运行结果&gt; f(1)[1] "我有个朋友叫阿三,他的老婆查无此人,但是他居然有3个孩子,而且第1个孩子或许能在幼儿园找个女朋友?"&gt; f(2)[1] "我有个朋友叫阿三,他的老婆查无此人,但是他居然有3个孩子,而且第2个孩子正在苦逼的读书吧"&gt; f(3)[1] "我有个朋友叫阿三,他的老婆查无此人,但是他居然有3个孩子,而且第3个孩子不仅可以读书还可以喝酒了"# 我到底在玩什么啊！！！！！ 数据框数据框也是R常用的数据对象，数据框是和矩阵类似的一种结构，在数据框中，不同的列是可以为不同的对象。一般可以使用data.frame函数来创建数据框对象：# 我们沿用因子中的数据即省份的体重样本数据来构建数据框&gt; weight_by_state &lt;- data.frame('省份'=state,'体重'=weight) 如果有符合数据框限制的列表可以直接使用as.data.frame()函数转换为数据框，从外部环境读取数据使用read.table()和read.csv均可以创建数据框。 一般数据框有如下的限制条件： 分量必须是向量（数值、字符、逻辑），因子，数值矩阵，列表或其它数据框 矩阵，列表和数据框为新的数据框提供了尽可能多的变量，因为它们各自拥有列，元素或者变量 数值向量，逻辑值，因子保持原有格式，而字符向量会被强制转换成因子 在数据框中以变量形式出现的向量结构必须长度一致，矩阵结构必须有一样的行数 数组最后一个介绍的是数组（其余的类型用的较少就不再介绍），数组是数组可以看作是带有多个下标类型相同的元素集合:&gt; z &lt;- 1:1500&gt; dim(z) &lt;- c(3,5,100) 通过对dim属性的赋值（赋值的是维度向量），这样就将向量z成为了一个$3 \times 5 \times 100$的数组。所以z的1500个元素，元素的下标可以从1一直标记到对应元素的值。 除了dim()函数创建数组，更通用的可以使用array()函数创建数组：&gt; s &lt;- array(1:1500,c(3,5,100))&gt; class(s)[1] "array" 对象的模式和属性对象的模式mode是指是该对象基本要素的类型，这是专门用来描述一个对 象特征的术语。另外还有一个所有对象都有的特征是长度length，如果你想知道一个对象更详细的特征可以使用attributes函数来获取：&gt; attributes(s)$dim[1] 3 5 100 我们把模式和长度称为对象的内在属性。而且对象的模式和长度属性是可以改变的。 今天在坐火车，就写到这里吧，后面会有继续的内容。结束]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用hexo+github搭建静态blog]]></title>
      <url>%2F2017-05-25-%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81blog%2F</url>
      <content type="text"><![CDATA[写在前面过去几年，我曾经用多种方式写作。自从大学毕业，基本不再使用人人网（过去的时候叫校内网），后来新浪云发布，在网上找到了一个基于python的博客系统，随便改了改就发到新浪云上了，还给专门搞了一个一级域名(www.zyx1986.pw，现在已经不能用了）。 再后来，微信公众号开始流行，我也赶了个时髦开了公众号。微信公众号对文本、图片支持的还可以，但对于代码、公式的支持几乎没有，所以在微信公众号的文章大部分是随笔或者鸡汤，没什么营养。 最近开始整理之前的学习笔记，刚开始在简书上发文，刚写了两篇还可以，毕竟简书支持Markdown格式的文章，对代码高亮的支持也不错，但我想写的文章如果有数学公式就尴尬了，很繁琐而且效果不好，所以就想自己搭建一个blog。 搜索了下，hexo+github成了我的选择。 Hexo是什么Hexo是基于node.js的轻量化的博客框架，安装和使用都非常简单，很快就可以上手。并且Hexo支持自定义主题和Markdown格式的文件，极速渲染页面，非常适合经常写文档的朋友。 Hexo有很多插件支持更多更丰富的功能，因此能够支持丰富的文档特性，比如代码高亮、公式等，因此也很适合撰写科技和技术文章。 为什么是HexoHexo最大的优点就是遵循了KISS1原则，其具有以下特点 基于node.js安装简单 支持Markdown格式为源文件 支持MathJax渲染LaTeX的公式（大爱这一点） 支持代码高亮 配置简单可以定制主题 生成的是静态页面可以利用 GitHub的Pages功能 以上就足够了。 声明及准备 本文的安装是基于MacOS 安装准备： github账号 homebrew node.js npm hexo 由于node.js自带npm，所以只需要安装node.js即可。 搭建流程获取github因为是基于GitHub搭建静态blog站点，所以需要先获取GitHub的账号和建立相应的repository。如果你没有GitHub的账号，点击这里注册。 注册完获取到账号后，你可以创建一个repository： 创建的repo的名称为：yourid.github.io 安装node.js因为Hexo是基于node.js，所以要先安装node.js。在这里提供两种方式安装： 通过Homebrew安装强烈建议Mac用户安装Homebrew，通过Homebrew来管理Mac的软件，Homebrew在安装和删除软件上特别方便。 首先安装Homebrew，在终端输入: /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 安装完Homebrew，可以安装node.js： brew install node.js 安装完成后查看： node -vnpm -v 以上就完成了node.js和npm的安装。 离线方式安装除Homebrew安装外，可以离线下载安装包安装，点击这里在官网下载pkg安装包后，一路点击安装。 休息下听首歌听听我录得歌，不自动播放了，各位请欣赏，哈哈！ new APlayer({ element: document.getElementById("aplayer0"), narrow: false, autoplay: false, showlrc: 0, music: { title: "一生爱你千百回", author: "allenmagic", url: "http://op0byyd4a.bkt.clouddn.com/%E4%B8%80%E7%94%9F%E7%88%B1%E4%BD%A0%E5%8D%83%E7%99%BE%E5%9B%9E.mp3", pic: "http://7viihf.com1.z0.glb.clouddn.com/face.jpg", } }); 安装hexo安装hexo的命令很简单，在终端输入:npm install -g hexo-cli 安装完成后可以输入命令查看：hexo -v 建立本地站点安装完hexo后，需要在本地建立站点并初始化站点:mkdir blogcd bloghexo init 这样一个本地站点就完全建立了，你也可以用一个命令完成以上操作:hexo init blog 安装完成后的目录结构为：├── _config.yml├── node_modules├── package.json├── scaffolds├── source└── themes4 directories, 2 files 基本使用在blog目录内依次运行以下命令:hexo cleanhexo ghexo s 如果正常则会显示：INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 按住CMD键同时点击http://localhost:4000/就可以在浏览器访问本地站点啦. 完结 1.Keep it simple, stupid! ↩]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[一个关于风险评测计算的问题]]></title>
      <url>%2F2017-05-23-%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E9%A3%8E%E9%99%A9%E8%AF%84%E6%B5%8B%E8%AE%A1%E7%AE%97%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
      <content type="text"><![CDATA[前言近几天，在做一个工作相关的内容，就是对企业投资者进行风险评测。我设计了若干个问题，并根据投资者的选项用于评分，但需要提前计算多少种选项的可能性，并计算分数的分布。并根据分数确定相应的分数区间对应的风险等级。 这听上去是个简单的问题，但实际上计算起来颇为复杂，想了不少办法才实现。这里也记录下来，并写成分享的文章可以让大家看一下，说不定可以借鉴。 本次计算主要是使用Python和R。 由于代码比较简单，就不用同步到Github，所有代码在文章里都能获取到。 问题其实这次的问题很简单: 有6个风险评测的问题 每个问题有A、B、C三个选项 每个问题的分值比重不一样 每个选项的分数不一样 需要根据投资者的选择答案计算其最终得分 根据其得分给出风险等级 但我们要根据所有可能的选择结果确定分数范围，并根据分数范围确定其对应的风险等级。所以问题的计算逻辑就如下了： 获取所有的选择答案的组合结果 根据组合计算每一个结果的分数 根据所有分数确定分数区间和风险等级的对应关系 计算投资者的分数 确定投资者的风险等级 获取所有组合我们假设有A、B、C三个选项，对应的分数分别为[25,50,75]:[A, B, C] = [25, 50, 75] 总共有6道题，每道题有三个选项，所以答案的组合总共有$3^6=729$个，那么分数的可能性就有729个（实际上应该小于729，因为有不同答案但相同分数）。 我们不需要获取ABC的答案组合，只需要获得分数[25, 50, 75]的组合即可，所以我思考了不超过10s，就放弃了使用Excel，因为这么多年早忘了当初那丁点的VBA知识了，而这个要用Excel计算的话必须使用VBA，所以果断放弃。 那么再思考下要怎么计算，我们知道有6个答案，每个答案的分数是[25, 50, 75]中的一个，然后组成一个组合。所以其答案可能是: [A, A, B, B, C, A] = [25, 25, 50, 50, 75, 25] 这样的组合总共有729个，所以要获取所有可能的结果，那么可以使用Python的itertools包中的product就是笛卡尔积来计算所有的可能组合： import itertoolss = []for i in itertools.product([25,50,75], repeat =6 ): s.extend([i]) s就是所有的答案分数的组合可能，我们查看下组合的数量：print(len(s))729[Finished in 0.1s] 如何计算？我们已经知道了，每个答案组合有对应的分数，以上面的组合为例： [A, A, B, B, C, A] = [25, 25, 50, 50, 75, 25] 计算其分值为：250(随机的分数都能是这个值我服了)。 但我们不能这样简单的计算分值，因为每个问题的分值权重是不一样的，每个问题的重要程度是不一样的，我们预先定义每个问题权重为： [1, 2, 3, 4, 5, 6] = [20%, 20%, 20%, 20%, 10%, 10%] 所以每个投资者的分数计算公式为： $$Score = \sum_{i}^{n=6}score_i \times W_i$$ $score_{i}$即是答案的分值组合，$W_i$为每个答案分值的权重,重新计算的分数结果就是40分。 如果答案组合只有一两个，那么这样计算也就罢了，但我们有729个组合，不可能每个计算出来，至少我们的组合的获取就是要通过工具得出来。怎么计算所有729个组合分数呢，而且当选项扩展至4个甚至5个，问题扩展至数十个，那么答案组合就更多了，怎么办呢？ 复习下矩阵计算在6个问题3个答案的情况有729个组合，每个组合是有6个分数组成，每个分数有对应的权重，我们想到这样一个公式，$A_{m \times n}$ $\times$ $B_{n \times k}$ = $C_{m \times k}$: $$\begin{equation}\begin{bmatrix} 1 &amp; 2 \\ 3 &amp; 4\end{bmatrix}\times\begin{bmatrix} 1 \\ 2\end{bmatrix}=\begin{bmatrix} 5 \\ 11\end{bmatrix}\end{equation}$$ 这是线性代数中所学习的矩阵乘法，那么我们就可以认为，729个组合每个组合为6个分数，所以可以看成一个$729 \times 6$的矩阵$A_{729 \times 6}$，那么权重则是一个$6 \times 1$的矩阵$B_{6 \times 1}$，所有两个矩阵相乘则生成一个矩阵$C_{729 \times 1}$。 那么计算的整个公式就是： $$\begin{equation}\begin{bmatrix} a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{16} \\ a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{26} \\ \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ a_{i1} &amp; a_{i2} &amp; a_{i3} &amp; \cdots &amp; a_{ij}\end{bmatrix}\times\begin{bmatrix}b_{11} \\b_{21} \\\vdots \\b_{61}\end{bmatrix}=\begin{bmatrix}c_{11} \\c_{21} \\\vdots \\c_{i1}\end{bmatrix}\end{equation}$$特别的，$(i, j) = (729, 6)$。 Python计算逻辑和代码我们考虑整个计算的顺序和逻辑如下： 获取所有分数组合 将分数组合生成为矩阵 构建权重的矩阵 分别两个矩阵相乘 得到所有分数 用R做分数的图形分布 根据分布确定不同风险等级的分位数 我们考虑每一个步骤的代码： 获取所有分数组合 import itertoolss = []for i in itertools.product([25,50,75], repeat =6 ): s.extend([i]) 将分数组合生成矩阵 import numpy as npsm = np.mat(s) 构建权重的矩阵 w = np.mat([0.2,0.2,0.2,0.2,0.1,0.1]) 矩阵相乘 score = np.matrix.tolist(sm*w.T) % w.T指将矩阵转置为列矩阵 这段代码使用了np.matrix.tolist将计算后得到的矩阵直接转换为list列表，后面的第6步和第7步考虑在Python中调用R来实现。 Python调用R分析数据数据的预处理首先，需要使用python生成csv文件以供R使用，当然也可以在R中使用rpy2包调用R来分析。 使用python生成csv文件： writer = csv.writer(file("score.csv",'wb'))writer.writerow(['Value'])for s in score: writer.writerow(s) 在R中导入数据： rm(list = ls())setwd("/Users/eggs/Library/Mobile Documents/com~apple~CloudDocs/文档/document")score &lt;- read.csv("score.csv",header = TRUE) 怎样分析数据？其实分析的思路挺简单，总共有729个总体值，但实际上计算出来的Score值只有21个，所以我们要考虑每个Score值占总体组合的概率。一般我们考虑CDF（cumulative distribution function）就是累积分布函数： $$F(X) = F(x \leq X) =\begin{cases}\sum_{i=1}^{x \leq X}P_{x=i}， &amp; \text{x是离散的} \\[3ex]\int_{-\infty}^{X} f(x)\,dx， &amp; \text{x是连续的}\end{cases}$$ 所以我们可以在R中画出Score的累积分布函数图。 画累积分布函数图 画出累积分布图 par(family='MicrosoftYaHei')plot(ecdf(score$Value), do.points=FALSE, verticals=TRUE, main = 'CDF of score', xlab = 'score', ylab = 'CDF' ) 画出来的图如下： 用分位数工具取数 我们假设取[20%, 80%]分位数的值： y &lt;- quantile(score$Value,c(0.2,0.8)) 20% 80% 42.5 57.5 那么，我们可以认为： 分数在[0,25)之间的为谨慎型，当然这一类别是理论值，不会通过问卷计算出来分数在[25,42.5]之间的为保守型，占20%比例分数在(42.5,57.5]之间的为谨慎型，占60%比例分数在(57.5,75]之间的为积极型，占20%比例 结束语在这里简单的做了一个关于风险评测的计算介绍，由于最近比较忙，所以内容写的也不怎么严谨。简单说就是思路清奇，排版华丽（你知道我说的是反话）。而且最近也没写什么，所以只是恰好碰到问题就随便写了篇，姑且看着吧。 python代码如下：__author__ = "Eggs"# coding: utf-8import itertoolsimport numpy as npimport csvs = []for i in itertools.product([25,50,75], repeat = 6 ): s.extend([i])sm = np.mat(s)w = np.mat([0.2,0.2,0.2,0.2,0.1,0.1])score = np.matrix.tolist(sm*w.T)writer = csv.writer(file("score.csv",'wb'))writer.writerow(['Value'])for s in score: writer.writerow(s) R的代码如下：rm(list = ls())setwd("/Users/eggs/Library/Mobile Documents/com~apple~CloudDocs/文档/document")score &lt;- read.csv("score.csv",header = TRUE)a &lt;- unique(score$Value)par(family='MicrosoftYaHei')plot(ecdf(score$Value), do.points=FALSE, verticals=TRUE, main = 'CDF of score', xlab = 'score', ylab = 'CDF' )y &lt;- quantile(score$Value,c(0.2,0.8))length(score$Value)length(a)y 运行的结果如下：&gt; length(score$Value)[1] 729&gt; length(a)[1] 21&gt; y 20% 80% 42.5 57.5 一个测试：如果我们把题目答案扩展到4个，题目增加为10个，计算的结果如下：&gt; length(score$Value)[1] 1048576&gt; length(a)[1] 119&gt; y 20% 80% 43.5 56.5 可见总共的样本超过了100万，我们可以用图形观察如下： CDF图形： 概率密度图形： 可见样本越多，图形越平滑，而且其分布越接近正态分布（极限中心定理）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[数据分析系列-R-初探-介绍和安装]]></title>
      <url>%2F2017-04-19-%E5%AD%A6%E4%B9%A0R%E7%B3%BB%E5%88%97-1-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85%2F</url>
      <content type="text"><![CDATA[导言 上次说要把以前的笔记整理成文档，首先想要完成的就是R相关的学习笔记。所以近期准备写数据分析系列的文章，先从R开始，后续再介绍Python或者Excel。本文介绍R相关的基本知识和安装。因为这些是比较基础的内容，我并没有相关的学习笔记，所以临时撰写了一篇。 为什么是R我的职业之路是从数据分析开始的，但我是从大学开始学习R的，虽然是断断续续的学习，至少也算入了门。后来在工作中也时不时的用到，R具有一系列的特点就决定了它是个优秀的软件（或者编程语言），所以我希望能够介绍一下它。 R是什么R一般有两种解释：R编程语言和R程序。R语言是由奥克兰大学的Ross Ihaka和Robert Gentleman在20世纪90年代初开发。是一个GNU项目1,所以R是一个自由开源软件。 R是一种数据分析工具，意味着你可以像使用Excel那样使用它。不过，它和Excel不同的是，Excel在数据可视的情况下进行处理。R会用不同的对象和数据类型包装原数据，然后操作对象，并不显得直观。但处理数据的效率和大数据的支持，远比Excel优秀。 R也是一种编程语言，支持面向对象和函数式编程，所以你可以使用R编写数据处理和分析的程序，将数据分析工作做的更轻松。 和R类似的软件有Matlab,SAS,S-plus,S,SPSS等等，但R是免费的… 安装RR是开源软件，你可以自由的获取到安装包，而且R是免费的，其官方网站为： R官方网站 其下载地址为：Mac版下载地址Windows版下载地址Linux下载地址 建议Linux用户使用包管理软件下载，Ubuntu和Debian用户在终端输入： sudo apt-get install r-project Fedora和Redhat用户在终端输入：sudo yum install r-project Arch Linux用户在终端输入：sudo pacman -S r-project 启动R我们可以在命令行中运行R，比如在Linux或者Mac的终端中输入：R 结果就如图所示： 寻找合适的IDER安装后默认装了R console，你可以运行R console使用R，但这个IDE很简单，用起来并不会那么顺手。 所以我们需要找到适合自己的IDE或者其它环境，强烈建议用户使用RStudio,RStudio支持Windows、Mac和Linux系统，其下载地址如下：RStudio下载地址 Linux用户应该可以使用包管理软件安装，Windows用户还可以在R环境中使用如下命令安装：install.packages(&quot;installr&quot;) # 下载安装installr包library(installr) # 装在installr包install.RStudio() # 下载并安装RStudio IDE RStudid的默认界面如下： 如果你是Emacs2用户，你还可以使用Emac+ESS的环境来编辑R程序，另外Sublime Text也有集成的环境。 初探R 说明：本例所有代码在RStudio中编辑和运行 R一般是通过命令或者程序脚本来操作数据对象，所以它的使用方法和Excel不同。这里简单介绍一下： 计算数据长度&gt; n &lt;- c(1,2,3,4) # 创建一个向量并命名为n&gt; length(n) # 获取向量的长度[1] 4 # 向量的长度为4 这个方式和Excel有很大的不同，Excel需要在表格中输入数据，然后用公式求解。 我们又分别计算这个向量的平均值、中值以及标准差，R的代码如下：&gt; mean(n) # 计算向量n的均值&gt; [1] 2.5 # 计算结果为2.5&gt; median(n) # 计算向量n的中位值&gt; [1] 2.5 # 计算结果为2.5&gt; sd(n) # 计算向量n的标准差&gt; [1] 1.290994 # 计算结果 我们不需要关心n有多少数据，也不需要在R中一定要看到所有数据就能执行计算。 Excel的处理和运算则如图所示： 事实上，R支持的更多的数据对象类型，可以使得我们有很多默认的函数来计算需要的值，也可以自己创造函数来计算。 先说到这，后续更多 1.GNU项目是由Richard Stmallman发起的自由开源软件项目，全名是GNU is Not Unix ↩2.Emacs也是GNU项目的成果，你可以在GNU Emacs主页查看更多信息。 ↩]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用LaTeX写文档]]></title>
      <url>%2F2017-04-18-%E4%BD%BF%E7%94%A8LaTeX%E5%86%99%E6%96%87%E6%A1%A3%2F</url>
      <content type="text"><![CDATA[导言 平时工作也一直在用LaTeX，也一直想写一篇入门的文档。最近也在写产品手册，正好也在使用LaTeX撰写，所以写一篇介绍基本用法的文章，以供大家了解。 一、LaTeX简单介绍LaTeX是一个文档处理的宏包，只要你选择了对应的文档格式，设置好具体的页面排版方式，后续专注于写作内容即可。相比较Word这种所见即所得的文字处理软件，LaTeX的一个特点就是在撰写文档的时候，不知道具体的文档生成的样式（但你可以估计到生成的格式）。 标准的LaTeX文档是以.tex结尾的纯文档文本，所以其跨平台性特别好。一个写好的tex文档，在任何平台编译出来效果是完全一致的。而word、page文档等，在不同平台不同的软件下显示的结果是不一样的，所以其跨平台性很差。而且，纯文本文档有个好处就是文件小，并且通过一些管理工具非常容易管理。而且编辑tex的软件很多，不需要专有软件才能编辑。 LaTeX对数学公式的支持非常优秀，因此被广大的科技工作者、大学生用于撰写科技文章或者专业的论文，国外的学术杂志甚至只接受LaTeX的论文文档。 LaTeX是一系列宏包集合，因此一个标准的TeX文档应该是命令和文字的结合。 二、安装和使用LaTeX是一个排版系统，因此需要安装这个系统，其下载地址为： Windows MacOS Linux 建议Windows用户使用TeXLive，MacOS用户使用MacTeX（当然如果你是高级用户了可以尝试Basic版本的MacTeX，占用空间小）。Linux用户可以下载TeX的软件包，也可以用系统带的包管理器下载。（比如Debian和Ubuntu可以使用apt-get install，Fedora可以使用yum，Arch用户可以使用pacman等） 编辑文档的工具可以有很多种，最简单的是记事本（但肯定很难用）。一般Windows建议使用WinEdt,Linux用户可以使用LyX这一个可以预览的TeX编辑软件（几乎等同于所见即所得了），如果熟练了用户可以使用Sublime Text+LaTeXtools以及GNU Emacs。 三、入门的简单文档1、TeX文档的基本框架 \documentclass[a4paper,11pt]&#123;article&#125; %声明文档类型为article\begin&#123;document&#125; % 声明文档开始 This is a test document for \LaTeX . %文档内容\end&#123;document&#125; % 文档结束 首先要声明文档的样式，LaTeX支持多种文档类型，一般常用的是book、article、report三种。不同的文档类型有不同的结构。”%”后面的内容是注释，不会在编译后生成的文档中显示。 文档的内容都在\begin{document}和\end{document}之间，\begin{document}表示声明文档内容开始，\end{document}表示文档结束。 2、支持中文 LaTeX支持中文的方式有两中，一个使用CJK包然后声明一个CJK环境。另外一个用xunicode使用unicode字符支持中文。本文介绍第二种方式（我不喜欢CJK）。 示例内容： \documentclass[a4paper,11pt]&#123;article&#125;\usepackage&#123;fontspec, xunicode, xltxtra&#125;\begin&#123;document&#125; This is a test document for \LaTeX . \\ 这是一个\LaTeX 中文样本文档。\\\end&#123;document&#125; 编译后发现内容如下： 中文不能正常显示，原因在于字体的设置，因此需要重新设置字体，如果只是简单的使用一种字体，那么可以如下处理： \documentclass[a4paper,11pt]&#123;article&#125;\usepackage&#123;fontspec, xunicode, xltxtra&#125;\setmainfont&#123;MicrosoftYaHei&#125; \XeTeXlinebreaklocale &quot;zh&quot; %中文的断句\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt\begin&#123;document&#125; This is a test document for \LaTeX . \\[10pt] 这是一个\LaTeX 中文样本文档。\\\end&#123;document&#125; 特别注意，中文的断句方式和英文是不一样的（英语是自动断句），因此需要声明中文的断句方式为”zh”。\\\[10pt]表示换行，并且下一行和上一行行距为10pt。 生成的文档如下： 四、更进一步1、\\usepackage[option]{package} LaTeX很多功能需要宏包提供，所谓宏包就是一个文件提供了很多功能用于作者调用。宏包的调用命令如下： \usepackage[colorlinks,citecolor=green]&#123;hyperef&#125; %使用超链接宏包 举例如下： \documentclass[12pt,a4paper,openany,fleqn]&#123;book&#125; %声明文档类型\usepackage&#123;fontspec, xunicode, xltxtra&#125; %使用xunicode相关宏包\usepackage&#123;tikz&#125; %使用tikz宏包画图\usepackage&#123;subfig&#125; %使用subfig宏包\usepackage&#123;color&#125; %使用color宏包调用颜色\usepackage&#123;graphicx&#125; %使用graphicx处理图片\usepackage&#123;titlesec&#125; %使用titlesec定义章节标题等\usepackage&#123;indentfirst&#125; %首行缩进处理\usepackage&#123;geometry&#125; %使用geomtry包设置页面\usepackage[colorlinks,linkcolor=black,anchorcolor=blue,citecolor=green]&#123;hyperref&#125; %使用超链接\usepackage&#123;wrapfig&#125; %使用wrapfig处理浮动图片\usepackage[fleqn]&#123;amsmath&#125; %使用amsmath处理公式\usepackage&#123;latexsym&#125;\usepackage&#123;booktabs&#125; 2、图片处理 我们写文档时，很多时候都需要添加图片至文档，LaTeX处理图片一般有很多宏包，用的最多的就是graphicx宏包。使用方式如下： \documentclass[a4paper,11pt]&#123;article&#125;\usepackage&#123;fontspec, xunicode, xltxtra&#125;\usepackage&#123;graphicx&#125; %要加载graphicx宏包\setmainfont&#123;MicrosoftYaHei&#125; \XeTeXlinebreaklocale &quot;zh&quot; %中文的断句\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt\begin&#123;document&#125; This is a test document for \LaTeX . \\[10pt] 这是一个\LaTeX 中文样本文档。\\ 这个是广发基金的Logo图片。\\ \begin&#123;figure&#125;[htbp!] \centering %图片居中 \includegraphics[width=\textwidth]&#123;picture/guangfa.jpg&#125; \label&#123;fig:gflogo&#125; \caption&#123;广发基金LOGO&#125; \end&#123;figure&#125;\end&#123;document&#125; 编译后生成的文档截图如图所示： \\centering是居中的命令，另外也可以用\\begin{center}文档内容\\end{center}居中环境来处理文档居中。 3、表格处理 除了图片，我们很多时候还要处理表格。表格可以使用宏包来处理。本示例使用booktabs宏包处理，示例代码如下： \documentclass[a4paper,11pt]&#123;article&#125;\usepackage&#123;fontspec, xunicode, xltxtra&#125;\usepackage&#123;booktabs&#125;\setmainfont&#123;MicrosoftYaHei&#125; \XeTeXlinebreaklocale &quot;zh&quot; %中文的断句\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt\begin&#123;document&#125;%处理表格\begin&#123;table&#125;[htbp]\caption&#123;人员表&#125;\label&#123;tab:function&#125;\begin&#123;tabular*&#125;&#123;\textwidth&#125;&#123;@&#123;\extracolsep&#123;\fill&#125;&#125;lcc&#125; \toprule %------------------------------------- 姓名 &amp;性别 &amp;年龄 \\ \midrule %------------------------------------ 张三 &amp;男 &amp;20 \\ 李四 &amp;男 &amp;32 \\ 李倩 &amp;女 &amp;25 \\ \bottomrule %--------------------------------- \end&#123;tabular*&#125;\end&#123;table&#125;\end&#123;document&#125; 生成的表格图示如下： 五、总结LaTeX有很多其它的功能，特别是在编写大型文档或者书籍时效率很高。包括写公式、引用、参考文献处理，非常有用。 附上最近写的产品文档的源文件地址：汇添富企业版产品手册源文档汇添富企业版产品手册PDF文件由于文件太大不能正常下载，请使用新汇添富企业版产品手册PDF 更多的功能，请后续关注。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用Python画股票的K线图]]></title>
      <url>%2F2017-04-17-%E4%BD%BF%E7%94%A8Python%E7%94%BB%E8%82%A1%E7%A5%A8%E7%9A%84K%E7%BA%BF%E5%9B%BE%2F</url>
      <content type="text"><![CDATA[导言 本文简单介绍了如何从网易财经获取某支股票的价格数据，并根据价格数据画出相应的日K线图。有助于新手了解并使用Python的相关功能。包括列表、自定义函数、for循环、if函数以及如何使用matplotlib进行作图等内容。 第一步：从网易财经获取股票的价格数据我一般是在网易财经查看某支股票的价格和成交数据，网易财经可以查到任意沪深的股票，我们使用招商银行的数据作为参考。 1、构建爬虫获取股票价格数据这里不对Python做介绍了，如果需要了解什么是Python，可以自行百度或者访问Python官网. 加载需要的模块 代码如下： import re,urllib2,time,csv,datetimeimport matplotlib as mplimport matplotlib.pyplot as pltimport matplotlib.finance as mpfimport matplotlib.dates as mpd 其中urllib2是用来解析HTML内容的包，主要是从url获取网页内容；re是正则表达式包，本文会使用正则表达式来从抓取的网页数据中获取到有用的数据；time和datetime是时间相关的包，主要用来设定要抓取的时间以及其它相关时间的处理；csv包是用来生成csv数据（该数据会被用于R来画K线图），其余的几个包会在使用时单独介绍，你也可以在需要的时候在程序头部补充import。 设定时间相关 代码如下： t = time.localtime() # 获取当前的本地时间year = range(t[0],1989,-1) # 设定年度范围，从当前年度至沪市开市的年份倒序生成season = range(4,0,-1) # 生成季度的数据列表，从4季度到1季度倒序生成 为什么要这么设定时间呢？仔细的查看网易股票数据的url，是按照年度和季度来构成的，我们发现搜索数据也是用年度和季度来搜索的。其url构成如下：http://quotes.money.163.com/trade/lsjysj_600036.html?year=2017&amp;season=1可见可拆为6个子字符串，分别是http://quotes.money.163.com/trade/lsjysj_、600036、.html?year=、2017、&amp;season=、1。其中第2、4、6个子串可以参数化输入获取特定需求的数据。 定义获取数据的函数 代码如下： def getData(url): request = urllib2.Request(url) response = urllib2.urlopen(request) content = response.read() pattern = re.compile('&lt;/thead[\s\S]*&lt;/tr&gt; &lt;/table&gt;') ta = re.findall(pattern, str(content)) pattern1 = re.compile("&lt;td class='cGreen'&gt;") pattern2 = re.compile("&lt;td class='cRed'&gt;") pattern3 = re.compile(",") tab1 = re.sub(pattern1,"&lt;td&gt;",str(ta)) tab2 = re.sub(pattern2,"&lt;td&gt;",str(tab1)) tab = re.sub(pattern3, "", str(tab2)) if len(tab) == 0: data = [] else: pattern3 = re.compile('&lt;td&gt;(.*?)&lt;/td&gt;') data = re.findall(pattern3, str(tab)) for d in data: if d == '': data.remove('') return data 本段代码定义个一个函数getDate(url)，函数名为getData，参数为url。相当于从该url获取股票的交易数据，显然这个函数是定制的。 首先，我们用urllib2模块的相关函数解析并获取网页的数据。第二步，使用re模块的数据对抓取的网页内容进行初步的处理，分为了三个过程 首先匹配” “之间的内容并返回，因为在这之间的内容包含了所有需要的数据，这是一个简单的正则表达式，表示返回 两个字符串之间的所有内容 匹配、并使用替换，因为这两个字符串会影响后续的匹配数据，现行替换掉可以更方便的匹配到需要的数据 替换到千分位”,”号，因为Python和R并不会识别有千分位号的数据，所以我们要将数据转换为非千分位的数据。 tab是按照要求最后获取的包含数据和文本的原始内容 用if函数来获取除文本的数据，因为如果year和season超过了当前的界限，会返回空的tab，所以我们在这里进行判断，如果少了这个判断，会报出index error。这个if函数表示了如果tab为空，data也是个空的列表，如果tab不为空，那么根据pattern3返回需要的数据至data列表 用一个for循环来遍历data列表，删除空白的内容（其实这一步不需要，因为在if中已经剔除了空的内容。 所以定义了以上的函数后，就可以使用该函数返回特定url的数据。 获取某支股票的数据 代码如下： def get_stock_price(code): url1 = "http://quotes.money.163.com/trade/lsjysj_" url2 = ".html?year=" url3 = "&amp;season=" urllist = [] for k in year: for v in season: urllist.append(url1+str(code)+url2+str(k)+url3+str(v)) price = [] for url in urllist: price.extend(getData(url)) return price 自定义get_stock_price(code)函数，code是指股票代码，使用该函数可以返回该股票所有的历史数据（OHLC以及其它）思路很简单： 根据code构建其股票数据的页面的url列表 使用getData(url）函数和for循环，返回所有的历史数据 最终返回的是price的数据列表 这样，我们就可以使用该函数获取某支股票的所有历史数据： # get all histrocial data include all price and othersprice = get_stock_price(600036) 获取招商银行（600036）的所有历史数据。 2、保存数据保存为csv文件 代码如下： writer = csv.writer(file("stock.csv",'wb'))writer.writerow(['Date','Open','High','Low','Close','Volume'])pr = []for i in range(0,len(price),11): pr.extend([[price[i],price[i+1],price[i+2],price[i+3],price[i+4],price[i+8]]])for prl in pr: writer.writerow(prl) 我们使用csv模块保存数据为csv文件，用于在R中读取并作图，我们查看在网易的数据展示可以发现，总共11个字段，所有我们在每11个切片中，返回时间、OHLC（开盘价、最高价、最低价、收盘价）和交易量的数据并保存为csv的文件格式。 处理保存数据到列表 代码如下： # get the number for date by date2numdef Date_no(strdate): t = time.strptime(strdate, "%Y-%m-%d") y,m,d = t[0:3] d = datetime.date(y, m, d) n = mpd.date2num(d) return n# get the price data pr = []for i in range(0,len(price),11): pr.extend([[ Date_no(price[i]) ,float(price[i+1]) ,float(price[i+2]) ,float(price[i+3]) ,float(price[i+4]) ,float(price[i+8])]] ) 这个程序片段是用来处理和保存数据用于在pyhton中做出K线图。 定义函数将字符串的时间处理为matplotlib中作图使用的数值（直接获取的数据中时间是字符串） 返回返回时间、OHLC（开盘价、最高价、最低价、收盘价）和交易量的数据并存储在pr这个列表里 第二步：做出K线图在R中作图 代码如下： library(quantmod)rm(list = ls())setwd("~/GitHub/index/")price &lt;- as.xts(read.zoo("stock.csv",header=TRUE,sep=",",colClasses = c("Date", rep("numeric",5))))n &lt;- nrow(price)m &lt;- nrow(price)-100#pdf(file = "k.pdf")chartSeries(price[c(m:n)],theme = chartTheme("white"),up.col = "red",dn.col = "green",name = "600036",time.scale = 0.5,line.type = "l",bar.type = "ohlc",major.ticks='auto', minor.ticks=TRUE)#dev.off() 做出的图片效果如下：R中可以使用quantmod包中的chartSeries函数画出K线图，具体的使用方法可以参考chartSeries参考文档 在Python中使用matplotlib作图 代码如下： quotes = pr[0:80]print(quotes)fig,ax = plt.subplots(figsize=(30,6))fig.subplots_adjust(bottom=0.2)mpf.candlestick_ohlc(ax,quotes,width=0.4,colorup='r',colordown='g')plt.grid(False)ax.xaxis_date()ax.autoscale_view()plt.setp(plt.gca().get_xticklabels(), rotation=30) plt.show() K线效果图如下：使用matplotlib的candlestick_ohlc的参考文档,但是目前有一些问题，比如会将非交易日期也置放在x轴，会到至K线出现断裂，等待下一步的解决方法吧。 相关的代码已经同步到最大的同性交友网站我的Github上了，可以参考，其中stock.py是主要程序。 写在最后：因为我有近5年没使用过python了，所有代码可能不太简练。我也旨在解决问题，当然解决问题的方法千万种，比如这个例子，最直接的办法就是使用网易的下载所有（或者特定时间段）的数据为csv格式，然后用Excel画K线也可以的。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[基于蒙特卡洛模拟法计算投资组合的VaR值]]></title>
      <url>%2F2017-04-17-%E5%9F%BA%E4%BA%8E%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A8%A1%E6%8B%9F%E6%B3%95%E8%AE%A1%E7%AE%97%E6%8A%95%E8%B5%84%E7%BB%84%E5%90%88%E7%9A%84VaR%E5%80%BC%2F</url>
      <content type="text"><![CDATA[导言 VaR是目前通用的风险管理技术，适用于计算投资组合在一定置信水平下的损失不超过某值。计算VaR的方法有多种，本文试图介绍常用的蒙特卡洛模拟的方法计算特定投资组合的VaR值。 一、VaR的概念1.什么是VaR VaR是指假设目前的投资组合在未来一段时间冻结，将投资组合的头寸和到期前的不确定风险均考虑在内，有如下定义： 在一定置信水平下，投资组合在未来确定时间的损失不超过某个值，这个值就是VaR值。因此，VaR被一般定义为最小损失，是一个正数。具体的表达式如下： $$P(L&gt;VaR) \leq 1-c$$ L是指Loss(即投资组合的损失值)，c是指置信水平（例如95%）。所以公式可以解读为损失值大于VaR的概率不超过5%。 2.如何计算VaR 计算VaR的步骤一般如下： 逐日盯市确认投资组合的市值，比如1亿人民币。 衡量风险因素的变化率，可以根据历史数据计算其波动率。 设定时间区域，样本观察时间段，调整交易时间。 设定置信水平，例如95%。 分析数据，得出收入的分布概率，计算潜在的最大损失，综合得出VaR值 3.简单的描述VaR 我们可以用图形来定义VaR的概念，假设投资组合的收益R符合正态分布：$R \sim N(\mu,\sigma^2)$，也就是时候收益率R的图形是一个正态分布的图形，假设初始本金为$W_0$，那么到期后的收益为$W=W_0(1+R)$，其中净收益为$W-W_0$ 因此其收益显然也是符合正态分布。 从图中我们能看到，在x=-0.02处我们视为5%的发生率（假设），所以可以我们能看到计算的VaR值的区域，所以VaR就是计算该区域的值。 计算VaR的方法有多种，一般可以通过以下几种方法计算： 局部估值法和完全估值法 德尔塔-正态法 历史模拟法 蒙特卡罗模拟法 测量VaR有多种方法，一般其比较如下： 特征 德尔塔-正态 历史模拟 蒙特卡洛模拟 估值 线性 完全 完全 形状 正态 真实 一般都可以 是否随时间变化 是 可能 是 隐含的数据 可能 没有 可能 极端事件的反应 以低概率反映 在最近数据中反映 可能反映 相关系数的使用 是 是 是 VaR的精确性 极好 用短期窗口时较低 大量迭代时精确度好 是否容易计算 是 是 否 定价的精确性 取决于投资组合 是 是 可解释性 容易 容易 困难 VaR分析 容易分析 比较困难 比较困难 主要缺点 非线性、后尾 风险随时间变化、异常事件 模型分析 二、蒙特卡洛模拟蒙特卡洛模拟算是一种数值分析方法， 还未写完]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[关于新的blog的说明]]></title>
      <url>%2F2017-04-17-%E5%85%B3%E4%BA%8E%E6%96%B0%E7%9A%84blog%E7%9A%84%E8%AF%B4%E6%98%8E%2F</url>
      <content type="text"><![CDATA[说明这是我的新的Blog，是的我又要开始折腾写文章了，这次是被迫无奈才自己用hexo在Github上部署了一个博客。花了一个多小时基本上框架已经搭建好了，之前写的两篇发表在简书的文章也迁移过来了，幸好文档都是用markdown写的，迁移过来基本不费事，很快就搞定了。 目前，Blog运行在Github上，同时我会将其也部署到七牛云上，这样也不用担心有的时候Github会因为被墙而不能访问。做好起码的备份是必须要考虑的。 为什么我要迁到新的Blog我一直对自己的评价是：善于学习和思考，但不善于表达。有例为证，高中时候的语文考试，阅读理解满分是家常便饭，而作文长期在40-50分之间晃荡，很难突破50分。但我呢却仍旧不死心，坚持写，哪怕写的再烂也无所谓，反正不能更烂了。 迁移到新的Blog的原因是，前几天我开始把以前的一些笔记整理成文档的时候，想发到一些内容平台。于是我使用了简书，但刚开始一些简单的文章可以在简书处理（简书支持markdown格式的文档，因此比如涉及到代码的部分可以正常显示），但后来写一篇关于蒙特卡洛模拟的文章发现，要正常的显示公式实在太繁琐。首先，我要写好公式然后去除掉空格，再批量在公式前后加上前缀和后缀，这样就可以生成图片链接，然后在Markdown文档中用图片方式显示处理，大家可以看看这个效果： 想到以后要写大量的文章，这些公式处理起来太麻烦了，所以就想能不能找到直接支持mathjax的平台，找了一圈太失望，没有啊。所有我就想干脆自己搭建一个。至少这个平台要支持markdown、mathjax和代码高亮。 HEXO是个不错的东西于是，我找到了Hexo这个博客系统，基于node.js非常轻量化，支持markdown格式的文档，并且支持mathjax。这样我可以在markdown中直接使用LaTeX写公式，不用再做多余的工作。另外，我是一个极简主义者，不喜欢一个页面这样那样的东西太多，这玩意简直太适合我。 花了20分钟读文档，再花了30分钟安装和配置，然后花了10分钟把文档迁移过来，总过耗费了一小时就搞定。以后还可以不断折腾，自己修改theme，这样个性化就十足了。 嗯，还有好一点，这个hexo + next的站点在手机上也有很好的阅读体验，真的很赞。 写文章的历程十年前，我们用QQ空间记录日志，后来校内网开始流行，那时候花了大半的时间整天研究CSS，想着把校内做的很漂亮很酷炫。可是没什么用，倒是有室友经常和人互动，最终居然在校内网找到了女朋友。 那时候还经常写日志，用现在的话来说就是无病呻吟。写的不好，还假装文青，现在回过头看那些文章鸡皮疙瘩一身。后来微信公众号出来，写了一段时间，但也是出于格式支持大部分时间写一些叙事的文章，而且花了很多时间在排版上。发一个文章基本上要耗费两个小时，效率太低而且干货太少。这几年常耕不辍的学习，也学到了不少东西，但很难在微信公众号分享，毕竟微信支持文本，可心灵鸡汤太多。 以后，会写很多偏学术技巧的文章，所以要大量的用到不少功能，这个博客应该能在未来一段时间满足我的需求。]]></content>
    </entry>

    
  
  
</search>

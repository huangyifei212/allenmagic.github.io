<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Egg&#39;s Blog</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>一个爱思考爱学习的傻子</description>
    <pubDate>Mon, 19 Nov 2018 10:47:29 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>人生如梦幻泡影</title>
      <link>http://yoursite.com/2018-11-19-%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A2%A6%E5%B9%BB%E6%B3%A1%E5%BD%B1/</link>
      <guid>http://yoursite.com/2018-11-19-%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A2%A6%E5%B9%BB%E6%B3%A1%E5%BD%B1/</guid>
      <pubDate>Mon, 19 Nov 2018 10:32:02 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;最近&quot;&gt;&lt;a href=&quot;#最近&quot; class=&quot;headerlink&quot; title=&quot;最近&quot;&gt;&lt;/a&gt;最近&lt;/h1&gt;&lt;p&gt;最近状态一直不好，归结起来是受工作的影响。职业生涯快十年了，从来没有因为工作导致焦虑，甚至过去几年我从没有一首歌能够反复听一天。现在发生了，确实因为工作充满焦虑。在这份工作里自己的路已经迷失了，无从踏步前行，也不知道前路如何。&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h1><p>最近状态一直不好，归结起来是受工作的影响。职业生涯快十年了，从来没有因为工作导致焦虑，甚至过去几年我从没有一首歌能够反复听一天。现在发生了，确实因为工作充满焦虑。在这份工作里自己的路已经迷失了，无从踏步前行，也不知道前路如何。<br><a id="more"></a></p><p>大部分时候是疲惫的，我也不知道工作中该做什么，彷徨而焦虑。像是在暗无天日的空间里喘着粗气，负重前行，背的却是什么都不知道的重物。</p><h1 id="如果前路迷雾如何办"><a href="#如果前路迷雾如何办" class="headerlink" title="如果前路迷雾如何办"></a>如果前路迷雾如何办</h1><p>这个世界本来就没什么有趣的东西，除了让人叹为观止的逻辑和暗藏在背后的物理必然，其余的都是多此一举。世间万物皆有其不一样的，我能接受的就是按照自己想的去做，去前行就行了罢？</p><p>这个世界自以为聪明的人比比皆是，我自己恐怕也没逃脱，如此说来。大家既然都一样，何必照顾他人的脸面，既然不开心那么我拍拍屁股走人即可，大可活得丧一点。不用看他人的眼镜里自己是徐徐生辉的还是满目憎恨。世间不值得啊。</p><h1 id="去尝试下不可预知的未来"><a href="#去尝试下不可预知的未来" class="headerlink" title="去尝试下不可预知的未来"></a>去尝试下不可预知的未来</h1><p>我决定了去尝试一下不知道的未来的任何可能，无所畏惧。</p><h1 id="未来如何，又何必提前烦恼"><a href="#未来如何，又何必提前烦恼" class="headerlink" title="未来如何，又何必提前烦恼"></a>未来如何，又何必提前烦恼</h1>]]></content:encoded>
      
      <comments>http://yoursite.com/2018-11-19-%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A2%A6%E5%B9%BB%E6%B3%A1%E5%BD%B1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>过去和希望</title>
      <link>http://yoursite.com/2018-06-16-%E8%BF%87%E5%8E%BB%E5%92%8C%E5%B8%8C%E6%9C%9B/</link>
      <guid>http://yoursite.com/2018-06-16-%E8%BF%87%E5%8E%BB%E5%92%8C%E5%B8%8C%E6%9C%9B/</guid>
      <pubDate>Fri, 15 Jun 2018 16:00:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;过去半年&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
父亲去世已经半年了。
我也很久没写文章了，过去的半年其实一直过得不开心，只是慢慢的变得好一些。时间是冲刷一切的最佳方式，混合了其它方式：努力的工作、更多的会见朋友、看更多的书、甚至还看着无关痛痒的电视剧。
&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">过去半年</h2><div class="outline-text-2" id="text-1"><p>父亲去世已经半年了。我也很久没写文章了，过去的半年其实一直过得不开心，只是慢慢的变得好一些。时间是冲刷一切的最佳方式，混合了其它方式：努力的工作、更多的会见朋友、看更多的书、甚至还看着无关痛痒的电视剧。</p><a id="more"></a><p>怀念是真的很奢侈的事情，他的照片和视频就在我手机里，可是我几乎不怎么看，因为心会痛。情况是慢慢变好了，不再像最初时候那么伤痛，让时间来冲刷一切吧。</p></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">最近懒了</h2><div class="outline-text-2" id="text-2"><p>最近人懒了，大部分时候不想动脑筋，不想思考，也不想做事。但生活要继续啊，必须努力工作，赚钱养自己。自己又不是富二代，可以肆意的追求理想，无所顾忌的享受生活。我们就是要成为被生活轮着蹂躏的人而已。</p><p>懒得表现不只是说五体不勤，还有不再思考，不再动脑筋。过去吧，我这人特喜欢追求和别人不一样的东西，所以我花了大量时间学习，以及思考一些非常规的知识、技能以及理论。有时候还沾沾自喜，觉得自己不走大部分人的路，有自己的个性和想法。</p><p>所以，很勤劳的学习，但是最近懒了不愿意再费力气了。</p><p>很多事情在开始有不好的苗头，就要狠下心来掐灭这种苗头，不能形成势头否则就不再好控制了。懒病就是其中之一，前两天我打电话给我的健身的客户经理，让她帮忙查下我的健身卡还有多长时间，她说我的卡停了快一年半了&#x2026;我暗自乍舌，我竟然有这么久没去健身了。</p><p>可我是怎么瘦下来了呢？</p><p>说起来，最近这段时间睡觉是越来越晚了，过去几年养成的规律的作息时间，在这小半年几乎被抛弃了，这也是懒的表现，不自律了。自己对自己的要求降低了，觉得将就也可以了。这是生活上的。</p><p>过去每个月会阅读一些技术上的书籍，或者强化升级一下已掌握的技能。可是今天，我用Emacs写文档，居然不知道如何插入时间。前几天想用UML画图，居然忘了一些命令。工作中，遇到了问题现在找不到解决的入口，说好的工作如吃饭喝水，似乎并不是这样了。也说明，工作和学习懒了。</p><p>所幸的是，大脑还在正常的运转，还在不断的自我调节。让我可以反思到我目前遇到了问题，需要我自己去解决。</p></div></div><div id="outline-container-sec-3" class="outline-2"><h2 id="sec-3">追求不一样需要代价的</h2><div class="outline-text-2" id="text-3"><p>过去多年，我一直在生活工作中，希望自己做的和别人不一样。所以，用了好多办法，学习稀奇古怪的东西，掌握乱七八糟的技能。</p><p>花了大量的时间，学了很多自己觉得有用的东西，但是和其他人的不一样的时候，我们就面临着协同工作时，信息共享的方式不一样。举个例子，基本上不可能在大路上划船一样，当然你说下暴雨的深圳或者上海，那我只能说，没有绝对的壁垒，当情况发生巨变，万事皆可以连接。</p><p>无论是工作还是生活中，我们其实更接近于大众。因为这样的沟通成本会降低到比较低的地步，很多时候我们追求的是更优秀，确实可能我们做的更好了，但和其他人之间的连接就低效了，或者甚至是失效的。</p><p>我过去几年，为了追求工作质量和高效率，开始频繁使用效率更高的工具和工作方式。例如我写文档，用LaTeX、数据分析用R或者Python、画图用UML语言。是的，这些在我这里被用的轻车熟路，我甚至可以开会的时候用Markdown记录会议的要点和结论，然后会议后用几分钟修改下，直接用高效工具输出高质量的文档、图片，方案以及结果。</p><p>甚至，我精简了使用的工具，越来越简单，也越来越高效。所以，上班的时候大量的重复性劳动被我几乎精简到不怎么浪费的地步，可以由大量的时间去阅读，思考和论证。</p><p>但协同性太差了，如果工作只是由我一个人完成，效率会很高。但涉及到多人协作的时候，我就需要用着大家通用的东西。当然，不是我自恋，即便是用这些我仍然能够超越大部分人。但这时候的痛苦就来了，总觉得自己在浪费时间。我不应该把时间花在这上面，我应该更多的时间去扩大自己的视野，去建立更大的格局。</p><p>思考是需要有成果的，所以很多时候我就在想为什么别人能做成这样？为什么要这样做？不想浪费过多的时间在繁文缛节上。</p><p>但这样同样要付出巨大的代价，如何平衡才是最重要的。</p><p>仪式感很重要，但不能追求的过分。就像我为了一份文档更好看，花了一两个小时去做workflow，是的做完了更好看了，可是80%的自动化被降低为40%的自动化，我也不知道这样是否划算。</p></div></div><div id="outline-container-sec-4" class="outline-2"><h2 id="sec-4">学会和自己的妥协</h2><div class="outline-text-2" id="text-4"><p>有个朋友说我爱讲大道理，我有时候确实会不自知的这么做。可惜的是，大道理懂得人不少，可是真的按照道理做的人却不多了。在我看来，所谓己所不欲勿施于人，那么要求别人做的事情，自己最好也能够做到。</p><p>不过，我确实醒悟到了，没必要强求。就像我不喜欢被别人强求一样，一切都按照合理的方式运行就可以了。所以，要学会的就是和自己的妥协，不要太累。</p><p>就这样吧，也不知道写什么。这种文章还不如写一篇技术性的文章来的容易。</p><p>伤脑！</p></div></div><div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;"><a href="https://github.com/allenmagic" target="_blank" rel="external">Edit Me at Github</a> - <a href="https://allenmagic.github.io/" target="_blank" rel="external">Org Source</a> - Last Updated 2018-06-16 六 17:19.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.3.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)</div>]]></content:encoded>
      
      <comments>http://yoursite.com/2018-06-16-%E8%BF%87%E5%8E%BB%E5%92%8C%E5%B8%8C%E6%9C%9B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>如果不能忘记</title>
      <link>http://yoursite.com/2018-03-23-%E5%A6%82%E6%9E%9C%E4%B8%8D%E8%83%BD%E5%BF%98%E8%AE%B0/</link>
      <guid>http://yoursite.com/2018-03-23-%E5%A6%82%E6%9E%9C%E4%B8%8D%E8%83%BD%E5%BF%98%E8%AE%B0/</guid>
      <pubDate>Fri, 23 Mar 2018 13:43:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;生命无常&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
父亲去世快百天了，从我上次回去照顾他最后一段时间到这次清明回去给他扫墓，时间过得真快。过去的三个多月，我有时候用着我不曾使用的方法和手段让我尽量淡化悲伤，但仍然不免怀念他。
&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">生命无常</h2><div class="outline-text-2" id="text-1"><p>父亲去世快百天了，从我上次回去照顾他最后一段时间到这次清明回去给他扫墓，时间过得真快。过去的三个多月，我有时候用着我不曾使用的方法和手段让我尽量淡化悲伤，但仍然不免怀念他。</p><a id="more"></a><p>从安葬他到我这次回去扫墓前，一直算是匆忙。都不曾在他的面前说说话，沟通下感情。这次回去正好有时间，一个人能够好好的在他的墓前说说话，也是忏悔也是勉励自己。</p></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">过去已经回不去了</h2><div class="outline-text-2" id="text-2"><p>我的记忆力在抑郁症之后退化了很多，大部分时候并不记得很多东西。平时工作和生活也会靠一些工具来增强我的记忆力。所以，我很伤心已经记不得小时候大部分和父亲的互动，哪怕是一些糗事能够知道也是其他人诉说的。</p><p>小时候我挺笨的，父亲教我学拼音，我半天学不会。他的耐心并不好，所以看我学不会就体罚我，但似乎我不记恨他。大概是我从小就没这种记仇的思维方式。他曾经做过我的班主任，但也不是很耐心，在班里不过个把月我就转到别的班级了。</p><p>其它的记忆其实挺少，我小时候还和他发生过冲突，在饭桌上怒目相向，现在想起来还是有趣。他绝大部分时间都不管我，放任我自由的成长，却没想到我一直把他作为反面的例子去成长自己。</p></div></div><div id="outline-container-sec-3" class="outline-2"><h2 id="sec-3">回忆他的过去</h2><div class="outline-text-2" id="text-3"><p>我们家是农民出身，父亲就是农民教师。好在爷爷奶奶在过去艰苦的时候供养他们读书，所以他最终能够在文化大革命的那些年完成至高中学业，在当地也算是知识分子，正因为如此也能从事了教育工作。</p><p>但父亲本身的缺陷也很明显，就是性格。后来我反思也正因为是这种性格，才导致了后来他的结局。他一生固执且偏执，而且不够开阔，很多时候都希望能够自己左右大局。最后在成都陪他的那段时间，因为他不配合治疗我发了脾气。只是没想到，他没能挺过去，我当时抱着最大的乐观，希望能够有最好的结果，但终究无力。</p><p>为此，我还是有点后悔，当时那么对他，或许我能够更耐心点，会觉得好受点。</p><p>其实，过去也没有什么好回忆，因为在我看来他这一生肯定是有争议的一生。</p></div></div><div id="outline-container-sec-4" class="outline-2"><h2 id="sec-4">反面和正面</h2><div class="outline-text-2" id="text-4"><p>正因为他的性格和习惯，我很小的时候就发现了。所以，我这一辈子用他做反面了。不吸烟，不随意发脾气，学会聆听等等。</p><p>但正如我写的悼词，他的基本素质真的很光辉。他善良、有爱心、孝顺、正直，而这所有的东西也被我看到了。他用他的言行为我树立了绝佳的榜样。</p><p>有好有坏，有血有肉有灵魂，这就是他，也值得我怀念一生了。</p></div></div><div id="outline-container-sec-5" class="outline-2"><h2 id="sec-5">改变是好的现象</h2><div class="outline-text-2" id="text-5"><p>清明的时候，我在他的墓前想了很多，说了很多。</p><p>过去，他很少干涉我，大部分时候关心的是我的身体，或者家里有大事需要做决策，征求我的意见。对于我的工作、生活、感情等问题他几乎不问。</p><p>不问并不代表他不关心啊。</p><p>他的追悼会，他的好朋友，也是在他重病期间帮助他找医生医院的发小吧。告诉我，父亲和他聊天一直担心我的家庭问题，其实内心期望我能尽快成家，他对我的工作觉得挺不错，而且他知道我的品性，也很放心。但父亲说，他看到他同龄的同学朋友都当爷爷了，自己却看不到儿女成家，子孙满堂还是内心失望的。</p><p>特别是他也大概知道自己时日无多，更是内心伤感了。尽管如此，他却不当面和我说，估计我也是让他失望了。</p><p>过去的我，其实挺自我。自己的事情自己知，其实也较少考虑他们的感受，现在也是有点不安。</p><p>在父亲墓前，我无法承诺什么。因为，我一直觉得这些事情是个人的事情，无论如何也是我自己的宿命，我一直不希望被人左右，也不希望被人干涉，对于我来说我知道自己的目的。我能承诺的是，就是一定会过得很好，有自己满意的结果。</p><p>无论什么样，倘若有一天我成家有儿女了，当他们能明白的时候，带着他们到父亲的墓前拜祭，把我写的碑文解释给他们听，告诉他们爷爷的人品和一生。</p><p>当初立碑，亲朋好友说碑文是文言文看不懂，他们懂不懂没关系，我们的子孙后代懂就行了。</p></div></div><div id="outline-container-sec-6" class="outline-2"><h2 id="sec-6">父亲的财产</h2><div class="outline-text-2" id="text-6"><p>他的意志和精神算是留给我最大的财富，因为那是我的父亲，世间的独一无二。</p><p>过去我和他的沟通不算多，但现在想起来，他也时刻影响着我。</p><p>在最初的时候，他怕他的病拖累我们家的经济，告诉我看病花15万就行了，不能再多。</p><p>但父亲你可曾知道，你的健康和生命无价，怎么可以用钱来衡量！</p></div></div><div id="outline-container-sec-7" class="outline-2"><h2 id="sec-7">永在</h2><div class="outline-text-2" id="text-7"><p>不能忘记，也不要忘记，也不该忘记。</p><p>所以，我想念你。</p></div></div><div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;"><a href="https://github.com/allenmagic" target="_blank" rel="external">Edit Me at Github</a> - <a href="https://allenmagic.github.io/" target="_blank" rel="external">Org Source</a> - Last Updated 2018-04-14 六 21:23.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.3.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)</div>]]></content:encoded>
      
      <comments>http://yoursite.com/2018-03-23-%E5%A6%82%E6%9E%9C%E4%B8%8D%E8%83%BD%E5%BF%98%E8%AE%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>2017年终大总结</title>
      <link>http://yoursite.com/2017-12-17-2017%E5%B9%B4%E7%BB%88%E5%A4%A7%E6%80%BB%E7%BB%93/</link>
      <guid>http://yoursite.com/2017-12-17-2017%E5%B9%B4%E7%BB%88%E5%A4%A7%E6%80%BB%E7%BB%93/</guid>
      <pubDate>Sun, 17 Dec 2017 00:12:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;又是一年了&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
一转眼，2017年又快过去了。按照往年的习惯，一般都会在元旦假期写一篇年终总结，过去有时会发在微信公众号，有时会发在博客，有时写在笔记软件里只给自己看。
&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">又是一年了</h2><div class="outline-text-2" id="text-1"><p>一转眼，2017年又快过去了。按照往年的习惯，一般都会在元旦假期写一篇年终总结，过去有时会发在微信公众号，有时会发在博客，有时写在笔记软件里只给自己看。</p><a id="more"></a><p>今年打算提前一点时间写完，也是不希望最后半个月有什么不好的事情吧。回忆一下过去一年的种种，也给自己定一些目标，虽然这些目标一般都不能全部完成。</p></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">健康</h2><div class="outline-text-2" id="text-2"><p>今年家里最重要的事情就是父亲的病，也算是不小的一个变故，大半年的主要精力都在这件事情上了。</p><p>父亲是个老烟民，所以也算肺癌的高风险人群。过去几年，作为儿女也会提醒他去体检，可能也是我们长期不在父母身边只是提醒而没有足够的重视，所以在过去几年他就只体检过一次，那时候还没什么问题，可是多年后我们疏于预防，终究还是碰到了。</p><p>父亲最初只是发烧，而且抗生素无明显效果，那时候他却去了山东跟随堂叔打工，后来我们安排人把他从山东送回来了家里，那段时间我甚至准备去山东带他回家了。回到家后检查，医生说可疑肺癌。我们又赶紧安排他去上级医院检查，得知确切结果当晚就定了第二天的机票回家了。</p><p>其实，为了他治疗的事情也一度曲折。因为考虑他的性格，在初期我决定了隐瞒他真实情况，所以在刚开始他是在不知情的情况下进行的化疗。但后来考虑更好的治疗环境和方式，我还是决定告诉他然后去了成都治疗。</p><p>值得高兴的事是，他的治疗还是有效果，医生反馈的结果都是偏好的。尽管我已经无法知道他的后续生存会如何，对于我们做儿女的尽一切能力保证他的生命延续和生活的更高质量。</p><p>这件事对我的影响很大，在我得知父亲的病情后特别内疚，因为我们对父母的关心没有做到最好，这也给我一个警醒对亲近的人的关注最重要的就是身体健康，这也将会成为我的一个准则。</p><p>这里我感谢我妈妈的工作，她立即停止了她的工作去照顾父亲。而且生病的父亲脾气并不好（尽管没生病父亲的脾气也很古怪），所以很多时候她都是很淡定的和父亲相处并支持他。我并不能长时间在家照顾父亲，在刚开始的几个月安排住院治疗时频繁回家，但后来稳定了我就没怎么回家了。有时候母亲也很焦躁，毕竟父亲是个难相处的人，大部分时候我只能作为润滑剂从中调节。</p><p>我很庆幸我们家能在困难面前团结一致，为了共同的目标而努力，每个人或许有累或者焦虑的时候，但我们的心和精神在一起，这对我们解决问题给了很大的帮助。</p></div></div><div id="outline-container-sec-3" class="outline-2"><h2 id="sec-3">工作</h2><div class="outline-text-2" id="text-3"><p>工作其实没什么，简而言之就是不怎么开心。</p><p>过去一年的团队变化给我带来的影响其实挺大，只是我一直以沉默应对，所以是用自己的能力做好自己的工作。后来加入到上海的项目中，发现整个工作的情况发生了一些我自己都觉得很无奈的事情。</p><p>虽然我不敢说自己的产品经理经验足够丰富，但过去多年的实际工作早已经形成了自己的产品观和方法论。这次却被冲击的支离破碎，我不能理解一个人的工作方法和逻辑如此混乱却试图用这种方法影响整个团队。</p><p>后来又有一些事情颠覆了我的观念，突然觉得原来这个团队早就变得很无法描述，过去的佛系工作方法居然能够让我舒适地工作了不短的时间，逃离了这种无奈的尴尬。</p><p>至于以后的打算，目前正在规划中也就不便多说。</p></div></div><div id="outline-container-sec-4" class="outline-2"><h2 id="sec-4">情绪</h2><div class="outline-text-2" id="text-4"><p>今年的压力很大，家庭和工作是两大需要解决的问题。很难得是在这个情况下，我坚持了把抑郁症用药基本停下来了。</p><p>年初我咨询了医生，医生并没有建议立即停药，但从去年下半年开始我已经开始逐渐减少日常的用药了。所以从今年初，我开始着手准备大幅度减少用药甚至阶段性停药。从一开始的用药量调成三分之一，到后来一周一次甚至一个月两次，并没有带来什么影响。</p><p>并不是我情绪会始终保持一个平稳的状态，在11月份的一段时间我的焦虑不安和低沉给我的身体和情绪带了不好的情况，我一度甚至开始恢复了药物的支持。所幸我更多的采用了不一样的方法来调节自己的情绪，很快就能恢复过来了。</p><p>从2012年开始被抑郁症困扰，不算严重的情绪问题逐渐发展成了无法控制的心理问题，最终靠药物治疗来解决问题。而带来的身体问题更加难以解决，2013年从康宁医院出院时体重达到了190斤，而作为对比我2012年末的时候体重才140多斤。</p><p>所以，其实我一度很缺乏自信，因为无法面对这样的自己。</p></div></div><div id="outline-container-sec-5" class="outline-2"><h2 id="sec-5">体重</h2><div class="outline-text-2" id="text-5"><p>这是一个值得说的问题，今年我的一个重要任务就是减肥。因为体重的增加带来的身体问题就是脂肪肝，幸好血脂并不高也没有典型的高血压问题。但肥胖一定会带来健康的问题，而且肥胖实在是对个人形象的影响太大。</p><p>去年做完阑尾手术，也发现困扰自己的肠胃问题得到一定的解决，而且体重有了一定的下降，所以这给了我一些信心，于是把减肥作为2018年的重点目标之一。</p><p>其实减肥的方式对我来说很简单，一是将过去的日均饮水量增加了一倍，几乎平均每天2000cc；二是仍然坚持素食，并逐渐增多了青菜的摄入量，减少米饭摄入量；三是适当的运动，保证能量的消耗超过能量的摄入量。</p><p>值得高兴的是体重终于从接近190斤减到了167斤，大肚腩已经明显没了，整个人的体型也恢复到了一定程度。</p><p>这也算完成了一个大的目标了。</p></div></div><div id="outline-container-sec-6" class="outline-2"><h2 id="sec-6">学习</h2><div class="outline-text-2" id="text-6"><p>今年在知识上的进步比较小，主要是时间的问题。因为频繁出差和加班，所以剩余的空闲时间比较少，有时候抽空读点书也是和技能没什么关系。今年读的哲学和历史书籍倒是多了一点。</p><p>这一年学习得到的越发零散，无法构成一个系统的知识结构，或许只能等以后慢慢的补充了。</p><p>其实，达克效应在我身上体现的愈发明显了，随着知道的越多越发现自己知道的越少，因为这个世界的未知真的太多，以前无知所以觉得世界很单薄，现在来看真是值得怜悯自己。</p><p>我也深信自己其实没有更多的权利甚至知识去判断事情的真伪性，所以尽管或许我能证伪但我没有动力去做了，保持他人自我判断的权利吧。</p><p>哦，有个值得高兴的事情就是自从我加入R邮件组已经四年了，今年终于开始可以在邮件讨论里回答其他人的问题了，也开始将过去几年学习的Python应用到工作实践中。</p><p>更值得我高兴的事情是，我总结了过去几年的产品经理工作经验，明确了我的产品观和产品方法论，终于有了工作使用的思想武器了。</p></div></div><div id="outline-container-sec-7" class="outline-2"><h2 id="sec-7">新年目标</h2><div class="outline-text-2" id="text-7"><p>2018年的目标很简单：</p><ol class="org-ol"><li>持续的对父亲的病情关注并努力的保证他的生存质量</li><li>在工作上有大的突破，进入产品管理的方向</li><li>继续减轻体重，争取完全消除脂肪肝</li><li>继续不断地学习，努力构建完整知识体系</li><li>其余的重要的事情</li></ol><p>嗯，努力加油！</p></div></div><div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;"><a href="https://github.com/allenmagic" target="_blank" rel="external">Edit Me at Github</a> - <a href="https://allenmagic.github.io/" target="_blank" rel="external">Org Source</a> - Last Updated 2017-12-17 日 10:45.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.3.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)</div>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-12-17-2017%E5%B9%B4%E7%BB%88%E5%A4%A7%E6%80%BB%E7%BB%93/#disqus_thread</comments>
    </item>
    
    <item>
      <title>高贵的灵魂始终自由</title>
      <link>http://yoursite.com/2017-11-05-%E9%AB%98%E8%B4%B5%E7%9A%84%E7%81%B5%E9%AD%82%E5%A7%8B%E7%BB%88%E8%87%AA%E7%94%B1/</link>
      <guid>http://yoursite.com/2017-11-05-%E9%AB%98%E8%B4%B5%E7%9A%84%E7%81%B5%E9%AD%82%E5%A7%8B%E7%BB%88%E8%87%AA%E7%94%B1/</guid>
      <pubDate>Sun, 05 Nov 2017 08:48:10 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;题记&quot;&gt;&lt;a href=&quot;#题记&quot; class=&quot;headerlink&quot; title=&quot;题记&quot;&gt;&lt;/a&gt;题记&lt;/h1&gt;&lt;p&gt;其实这是一篇游记，但我用了一个飘忽的主题，别被标题给惊吓住了。只是，这篇游记附带了自我剖析以及无意识自发苏醒的一系列眼花缭乱的操作，主要目的只是&lt;code&gt;认识自我&lt;/code&gt;和&lt;code&gt;唤醒自我&lt;/code&gt;。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h1><p>其实这是一篇游记，但我用了一个飘忽的主题，别被标题给惊吓住了。只是，这篇游记附带了自我剖析以及无意识自发苏醒的一系列眼花缭乱的操作，主要目的只是<code>认识自我</code>和<code>唤醒自我</code>。</p><a id="more"></a><p>这篇文章有点长，如果你想阅读，可以拿杯温开水提前上完厕所，这样你能一气呵成读完。但是如果你说，你用手机看而且随时都手机在身，我很欣赏你。当然，如果你能坚持阅读完，以后能够偶遇到我，你一定要让我请你吃饭表达我的感激。</p><h1 id="猝不及防的低沉"><a href="#猝不及防的低沉" class="headerlink" title="猝不及防的低沉"></a>猝不及防的低沉</h1><p>真的没有丝毫的防备，就开始不对劲了，身体和情绪双双紧绷而且不能放松。在过去的7个月里，我随时随地保持着紧张，因为我总想着我会面对着我预想不到的情形，高度的紧张感能让我快速的反应。去过那段时间我已经适应了这样的节奏，然而在我现在想放松的时候却居然出问题了。</p><p>前段时间很多事有了一定程度的好转，总算能够喘口气，我都觉得后面能放松一下了。可是长时间的紧张敢，导致我在过去差不多20天时间内，努力想放松结果却比原来更紧张。过去7个多月我没有11点半之前睡过觉，这段时间我开始努力恢复到10点半之前入睡，结果在床上折腾两小时，快凌晨一点才睡着。工作的时候身体完全不能放松，情绪也开始烦躁。是的，这种情况五年前历历在目。我过去一年已经很少用抗抑郁的药，而过去二十天每天都用…</p><p>我不愿告诉家人，因为在这个以及未来一段时间，我是唯一支撑家里的人，我不想他们担心。</p><p>我也不知道能和谁聊聊，而且我其实不喜欢传播负面情绪给朋友，所以自己一个人很压抑。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>完全没有准备，就来了一场出走。</p><p>周二晚上我发了一个朋友圈。非常要好的朋友雪莉姐看到了，打电话问我的情况，我仿佛抓到了救命稻草，狂说一番。自从她恋爱更后来结婚，我就很少打扰她，这次她愿意倾听真的非常感谢她啊。</p><p>挂完电话想到自己应该做点什么，让自己重新回到正轨，干脆出去走走吧。然后订了周六早上的火车票和周六晚上的酒店，结果一激动把返程的车票订反了，于是干脆退掉返程票不买了。</p><p>周五一个朋友生日，我本来想约她一起吃饭庆祝她生日，周四早上没约到…，然后周四下午在做牙齿的根管治疗后，就临时决定退了周六的车票，改成周五晚上的车票，打电话把酒店改到周五晚上…</p><p>周五早上，又在淘宝上租了一辆摩托车。是的，在周六晚上的酒店和返程的车票（其实没有了），还有具体游玩的景点路线没搞定的情况下，我就这样出发了。</p><p>过去八年，我出门旅游（除了集体游）都会提前规划和提前做攻略，这次真的是没怎么准备，因为我想走到哪就在哪玩一会。</p><h1 id="出行"><a href="#出行" class="headerlink" title="出行"></a>出行</h1><p>周五下班前，突然来了好多事，搞得我一阵手忙脚乱，晚了15分钟下班不说，一边走出办公室还一边打着工作电话，也不知道是不是个好兆头。坐地铁去北站到地铁站就已经快七点了，而高铁是七点二十出发。但是作为一个宠辱不惊，临危不乱的真男人。我依然是保持着固有的步行节奏直接去进站口希望用身份证进站，发现人工窗口排队的人太多了，考虑了下然后镇（yi）定（lu）自（xiao）若（pao）的走到取票窗口取票后走自助通道。</p><p>进了候车室车还没开始检票，我就找地方买瓶水，就在候车室走了个大S形，然后才走到检票口，这时候检票口已经是最后一拨人了，看到这我洋洋自得，着急有屁用啊。</p><p>上车前，二伯父在群里发了一个问题，[1,3,5,7,9,11,13,15]里求任取三个数加起来得三十，这道题以我二十年的智商分秒就解出来了，事实证明我现在的智商不及二十年前。我一上车就拿出电脑，准备写个python脚本计算，结果老是有问题。然后旁边一哥们很有兴趣的看着我，他说他以前对编程也有兴趣并且学过，他问我是什么语言，我一顿解释，当然他没学过python。他也跟着我研究，然后他一边百度一边和我热烈的讨论解决方法。</p><p>最终下车前（我先坐到广州南转车），我们还是没解决…</p><p>说实话这时候并不能显示我的蠢，因为我在广州南候车的时候又仔细看了下题目，突然发现这些数都是奇数，三个奇数相加怎么能得到一个偶数呢？？？？我突然有种自我放弃的感觉，想祈求上苍用雷劫让回到二十年前永远不再长大，才是我正确的归途，因为再这样下去我的愚蠢会越来越让我对自己失去信心的。</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/yuchun01.png" alt="这用来证明我的愚蠢（我去掉了群名称）"></p><p>在广州南去桂林的动车上，我订了返程的车票，本来我想坐周天晚上的普快回深圳（到深圳周一早上10点），但是据说领导周一周二到深圳来监督我们工作，还是干脆周天下午回深圳，毕竟我早已经没假期了。</p><p>突然发现我忘了加那位兄弟的微信了。颇为遗憾，虽然只有三十分钟的交流，但那种热烈而充满兴趣的讨论很少见，因为两个都不是很懂的傻子（因为都没发现这个问题根本没解）彼此帮助对方再难出现了吧。</p><p>经过广州南转车去桂林，在车上很无聊也睡不着。就这样听着音乐坐完了两个多小时的车程，到达桂林快十二点了，准备打的去预定的酒店，在车站才发现可以直接包车去阳朔，但是太晚我也不想折腾而且定的酒店是不能取消那种，于是打的去酒店，到了酒店各种折腾凌晨两点才睡着。</p><h1 id="玩的一天"><a href="#玩的一天" class="headerlink" title="玩的一天"></a>玩的一天</h1><p>早上醒的其实比较早，大概七点半就醒了（长期的生物钟），然后不想起床又继续赖了一个小时。退完房就快九点了。这个时候我还在思考是坐船还是坐车去阳朔，想想为了快点到目的地，还是去坐汽车吧。</p><p>到了车站简单吃了个早饭，然后就准备出发，上车的时候有几个歪果游客，不敢确定他们是否坐对了车，然后就拿着票问我，扫了一眼车票然后就说Yes，结果他们连Thanks都没回复我，搞得我想说一句No thanks都不行（画外音：难道不是you are weclome吗？）。我一路在想他们的到底是伊比利亚人还是斯拉夫人呢（其实这两个人种差很远啦），反正不是日耳曼或者凯尔特人。</p><p>坐我旁边的小伙子来自北京，刚刚作为志愿者去贵州参加完活动后独自来到阳朔旅游，比我大了一岁。聊了一会，他走过很多地方，挺有趣的一个人。</p><p>去阳朔之前，我打电话给租车的老板，把本来租的燃油踏板换成了电动车，因为考虑到其实路途并不远，电动车就足够了。到了阳朔，老板把车直接送到车站，是一个米国旗团的小龟王（也可以称为小绵羊）。于是，这一天它就是我的坐骑啦，它长这样的。</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/motuo.png" alt="我的坐骑"></p><p>其实玩的很简单，就是骑着车到处跑，遇到景点就骑进去看看景点的介绍，有兴趣的就买票游览，不感兴趣就继续前进。大概浏览了几个景点，因为记性不好现在就差不多忘了，唯一记得就是十里画廊还可以，大榕树一般。</p><p>整个过程没有坐船，因为没觉得坐船多有趣。游览了几个景点，然后骑着车就往更远的地方跑，沿着一条路边骑边停，一路上吃吃喝喝，感觉很惬意。</p><p>中间骑车的时候看到那矗立的一座座小山很想拍照，于是我单手骑车单手拍照，发现拍的照片都是模糊的，而且有次差点手机掉了。于是我干脆不拍了，就骑着车看风景也觉得不错。</p><p>一路上非常多的摩托车，而且几乎都是小绵羊，有两个女生一辆车的，也有女生骑男生坐的，最多的是男生骑女生坐，少部分两个男生。我见了一个比较怪异的组合是，一个男生骑车，后面坐了一个大胖子…，可怜那辆小绵羊了。</p><p>差不多玩到六点过，我把车骑到西街还车，顺便在西街游览了一会儿。找了地方休息了下，顺便在微信上订了酒店。反正不是很远，就走路过去了，到了酒店收到惊喜，本来订了一个130元的普通大床房，酒店给升级成了套房，虽然只是一个晚上，但也觉得很开心啊。</p><p>因为过去一段时间很忙，所以身体并不是很舒服，很多筋骨比较僵硬。在美团搜索到一个养生堂，评价很高于是想去试试按摩，话说上次按摩应该还是2015年国庆出去玩，平时我都不好这口，既然出来玩自然要放松。不过发现比较远，还要折回西街，这时候就后悔把车还了。幸好酒店旁边有个租车的，租了个自行车就骑过去了。</p><p>到了养生堂，买了张团券，收银小姐扫码的时候还特别说明，他们是正规的按摩，我很诚恳的说我是来按摩放松下身体的。这年月啊，看来色情擦边球相关的事业已经发展的很迅速了啊。不得不说这家店的技师技术很不错，而且从侧面反映了按摩真是体力活。我让帮忙重点按下后颈部和双肩，她也忒使劲了吧，按的我痛死了。不过，按完确实全身觉得轻松了不少。</p><p>骑车返回酒店差不多九点半，在酒店房间整理下今天的记录就睡觉了。</p><p>整个骑行有若干小遗憾，到了路上发现怎么别人的小龟王都是新的，就我的有点破破的，骑起来还有响声，后来才知道他们的确是新车，但比我的租金贵了十多元，勉强心理平衡了。还有就是换了电动车的速度不咋样，虽然老板说他们的最高车速能上40KM/S，但估计他是在体重70KG下测得。以我的体重以及巨大横截面积带来的风阻，死活在32-33KM/S上不去，没有速度哪来激情，看来下次再来的话还是得租燃油踏板车。</p><p>骑行时差点还把包给丢了，路过一家玻璃屋时，停下来喝水发呆。走的时候忘了背包，我都把车骑出去快20米了，突然发现怎么轻松了这么多，然后才醒悟忘记拿包了，哈哈。就是这家：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/rest.png" alt="差点丢掉行李的地方"></p><h1 id="返回深圳"><a href="#返回深圳" class="headerlink" title="返回深圳"></a>返回深圳</h1><p>前一天晚上差不多十点就睡了，不知道是因为按摩让身体放松了还是有点累，很快就睡着了，不再像过去几天翻来覆去睡不着，果然出来游玩放松身心很有帮助啊，本来早上定的八点的闹钟，我醒来一看七点五十，简直perfect。</p><p>收拾好背包，下去吃了个简便的早饭，就直接退房准备回深圳啦。</p><p>说起回深圳订票，充分发挥了我这次随心所欲，不需准备的风格。昨天晚上我计划从阳朔坐汽车到桂林，然后去桂林西站坐动车先回广州南，再从广州南坐高铁到福田，而且订好了桂林西-广州南-福田的车票，所以计划是这样的：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/road1.png" alt="计划回家路线图"></p><p>结果在按摩的时候，我随便看了看12306，看到了阳朔到桂林西有火车，其实也看到了阳朔到深圳有高铁，但是在早上9点过，我并不确定能起得来，而且只剩下商务座觉得有点小贵，所以放弃了。我毅然决定买阳朔到桂林西的动车，这样可以无缝连接而且时间间隔相当的好。不得不说，传统的思维这样想是没错的，但是怎么能用传统思维去考虑阳朔的情况。事实也证明了没有准备是多么的天真。</p><p>订完票我正在按摩，我就问技师怎么去高铁站，她告诉我要去专门的汽车站去买票坐车去，然后要坐一个小时才会到。我目瞪口呆的问，难道高铁站不在阳朔县城附近，得到的回答是挺远。我突然明白了，阳朔县城附近都是自然景观的景点，为了保护自然环境和旅游资源，肯定不会把大型的车站和高铁线路放在县城附近的，于是我想了想把动车票退了，还是坐汽车算了。</p><p>我又算了笔经济账，觉得动车其实也划算啊。动车票价20元，而且24分钟就到桂林西了。我坐汽车从阳朔到桂林27元，然后要一个半小时，然后打车去桂林西要30分钟，差不多40多元的费用，所以：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/road2.png" alt="时间成本"></p><p>看这个图果断选第一个方案啊，于是我又傻傻的重新定了一张从阳朔到桂林西的动车票，哈哈哈哈。</p><p>这是昨晚的准备，现在说说早上的实际发生的行为，再次证明不用大脑思考问题，或者我们已经习惯了某个行为方式，在一个陌生的环境里会带来很大的问题。</p><p>早上，我去路口坐公交车准备去汽车站转公交去高铁站，旁边一位大叔问我要不要坐他的摩托去，我已经等了好一会了还没等到车，所以不想继续等了。我问大叔可以微信支付吗，大叔说不会微信支付（大叔大概50多岁），然后我问大叔要多少钱，大叔说八元（其实路程不长）。我翻遍全身就找出来四元人民币和一百元的泰铢，我从深圳出发就带了十三元和一百泰铢（这个卵用没有），然后昨天又花了几元。大叔很无语的看着我说，行吧我把你送过去。于是我觉得遇到好人了（虽然他也是要高价），于是欢快的坐上摩托车去<code>汽车站</code>。</p><p>到了<code>汽车站</code>，我问大叔是不是这里坐车去高铁站。大叔说不是，要到高铁专线的汽车站坐车。好吧，我依然用常规思维理解了他们本地人口中说的汽车站，大叔说我送你去吧，我简直觉得他已经是大大的好人了，毕竟我只付了他四元钱。我还问大叔汽车站应该可以微信支付买票吧，大叔应该可以吧，我就很放心了。</p><p>到了汽车站，结果麻蛋说不能微信支付买票，简直无情啊。然后大叔又带我去旁边的邮储去取现，这里插播一句，我以后不会用邮储的服务，挂着银联的ATM机居然不能识别我的银行卡，还不如村镇银行。大叔又带我去旁边的村镇银行，我取了点现金，大叔发挥雷锋精神带我抄小路去车站，结果到了车站那趟车已经出发了，而下趟车十点半才出发，妥妥的赶不上火车啊，而且这个时候我都只支付了大叔四元钱。</p><p>没办法，只能在车站附近找个包车去车站，我身上没有零钱，找包车师傅换零钱他也没有，我干脆就让包车师傅付了大叔十元钱，自己又从钥匙包里找了三元硬币，都给了大叔。于是支付大叔的钱是4+10+3=17元，其实这钱已经超过实际价格了，但我觉得大叔真的是不错的好人，在我只有4元钱的时候并没有不理我，反而还热情的搭载我，毕竟在取现前我最多只能支付四元。我想了想，给他留个纪念，于是把一百元泰铢也给他了，告诉他可以留着纪念，也可以去银行换成人民币，哈哈。那么早上的总结如下：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/road_ga.png" alt="尴尬的坐车之行"></p><p>你们以为这就算了吗？显然不是，后面的我都没想到。</p><p>我上了包车师傅的私家车（100元，含支付给大叔的10元，另外我查过滴滴的价格大概是82元，所以价格基本没多少高价），刚开始我和师傅聊的画风还不错，比如说桂林的山水特点、人情风俗、饮食习惯以及车站为什么这么远（师傅的回答和我思考的一致）。</p><p>大概出了城，师傅的话题就变了，稍微回忆下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">师傅：一个人来旅游啊？</div><div class="line">我：是啊</div><div class="line">师傅：嗯，这里好，玩了几天啊？</div><div class="line">我：昨天上午到的阳朔</div><div class="line">师傅：哦，有没有去西街玩啊？</div><div class="line">我：玩了啊，下午还车的时候去逛了下西街，我觉得商业步行街都一个样，玩了一会就回去了。</div><div class="line">师傅：西街美女多哦</div><div class="line">我：没注意呢（真没注意），玩了一天累，去XXX按摩了下就回酒店睡觉了。</div><div class="line">师傅：哦，那家是正规的养生堂，有没有找美女玩啊？</div><div class="line">我：没遇到啊</div><div class="line">师傅：出来玩，找个美女玩啊，放松下。你又是一个人，怕什么？</div><div class="line">我：（尴尬的笑）这个不是怕什么，太累了。</div><div class="line">师傅：下次你一个人来，或者和朋友（只限男士）一起来玩就找我，我帮你们找美女玩。</div><div class="line">（然后师傅热情的发名片给我，我这么具有高贵自由灵魂的人当然是坚决的接过来看看啊）</div><div class="line">我：哟，师傅还是导游哦</div><div class="line">师傅：是啊，淡季就跑跑车，我们这妹子很多哦。</div><div class="line">我：是吧，忙季就当导游，不错啊。</div><div class="line">师傅：是啊，我们提供很多旅游服务啊，妹子很多。</div><div class="line">我：果然哪里旅游发达，色情产业也一定程度发达啊。</div><div class="line">师傅：就是，出来玩就是要放松，我们找美女提供一条龙服务，价格还公道。</div><div class="line">我：怎么公道法？</div><div class="line">师傅：你说，广东吧，随便找个美女至少得600元吧。</div><div class="line">我：这个价格还真不知道</div><div class="line">师傅：我们这400元服务质量就很好啦，比广东质量高服务好</div><div class="line">我：地域经济差异问题</div><div class="line">师傅：嗯，是的。下次来打我电话，绝对服务好。</div><div class="line">我：我还是怕。</div><div class="line">师傅：怕什么，你一个人出来玩，就是要玩的开心，反正你老婆不知道。</div><div class="line">我：（要是有老婆我还一个人出来玩么）其实我随便转转，吃吃喝喝也很开心。</div></pre></td></tr></table></figure></p><p>没想到，做个私家车居然碰上拉皮条的了，太搞笑了。我这么有高贵灵魂，一切自由出发的人，有着坚定的道德观念和正直的德行的人，下次再去阳朔玩的时候必定是带着喜欢的妹纸去的好吧，哼哼。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>其实，这次出来并不单纯是旅游，毕竟是时间短。大概想的是换个环境，思考几个我需要解决的问题，只有在轻松的环境下考虑这几个问题，才能做出比较正确的决定。</p><p>过去几年，特别是抑郁症之后，我把自己的欲望降到了一个低点（况且我原本就是一个低欲望的人），都快接近清心寡欲了。在工作和生活上几乎没什么追求，一直希望能够平淡。但是今年发生的事情，让我突然醒悟到如果过于追求平淡似乎并不是件合适的事，因此我想思考的就是，是否要改变，而如果改变是否会给我现在坚持的道德和观念带来冲击。</p><p>过去几年舒适平淡的生活，已经把过去的野心磨灭的差不多了，这不太妥当。</p><p>我想其实答案已经有了。</p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p>这次说走就走的行动需要感谢以下机构：</p><p><strong>感谢微信提供车票和酒店的预定服务<br>感谢淘宝提供购买租车服务的平台<br>感谢微信支付和支付宝全程提供无现金支付服务<br>感谢12306提供的火车票预定服务<br>感谢以下机构提供了整个旅程的资金支持：汇添富基金（相当给力）、易方达基金（也很给力）、国投瑞银基金（中规中矩）、博时基金（纯粹酱油），希望他们继续努力，为我下次旅行继续提供支持。</strong></p><p>感谢各位的阅读，祝你们安好！</p><p>本文由Evernote提供全程的笔记功能，导出为markdown格式在MWeb上修改编辑（D2815阳朔-广州南），最后编辑于2017-11-05 16:17。在G6071广州南-福田的车上推送。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-11-05-%E9%AB%98%E8%B4%B5%E7%9A%84%E7%81%B5%E9%AD%82%E5%A7%8B%E7%BB%88%E8%87%AA%E7%94%B1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>读书和买书的变迁</title>
      <link>http://yoursite.com/2017-10-30-%E8%AF%BB%E4%B9%A6%E5%92%8C%E4%B9%B0%E4%B9%A6%E7%9A%84%E5%8F%98%E8%BF%81/</link>
      <guid>http://yoursite.com/2017-10-30-%E8%AF%BB%E4%B9%A6%E5%92%8C%E4%B9%B0%E4%B9%A6%E7%9A%84%E5%8F%98%E8%BF%81/</guid>
      <pubDate>Mon, 30 Oct 2017 06:13:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;目的&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
我已经不记得我的第一本书是什么时候买的了，但我还记得是什么书，在哪买的。从我开始读书起，已经快三十年了，社会的进步和我的成长，无论是买书还是读书，均有了很大的变化，以此文纪念这些年读书的经历。
&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">目的</h2><div class="outline-text-2" id="text-1"><p>我已经不记得我的第一本书是什么时候买的了，但我还记得是什么书，在哪买的。从我开始读书起，已经快三十年了，社会的进步和我的成长，无论是买书还是读书，均有了很大的变化，以此文纪念这些年读书的经历。</p><a id="more"></a></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">读书算是爱好吗？</h2><div class="outline-text-2" id="text-2"><p>我一直怀疑读书是否算是一个爱好，在当今如果不多读点书，似乎是很难的。无论是工作、交际还是生活，书籍是人们快速和系统获取知识的最有效的方式。</p><p>现在自媒体的泛滥，让人们获取资讯的方式变得更简单，但我一直不承认这些传递的东西是一种知识，很多东西需要系统的知识体系来不断的渗透。</p><p>我一直喜欢读书，并且坚持了数十年，而且随着年龄的增长，读书的范围也日渐拓宽，很多做人做事的态、方法和理念都是从书本中学习到，并不断总结形成了自己的的观点。</p><p>其实，很多人在离开学校后，就不再读书，或者单纯的只是为了工作才会去学习，这还是被逼迫的。</p><p>书籍不断的塑造我们的知识结构，不断的让我们的精神净化，如果我们不更新我们的知识和思想，我们就会被遗弃。</p><p>我认为，读书在现在情况下，还真成了爱好，而不是大家的共识。</p></div></div><div id="outline-container-sec-3" class="outline-2"><h2 id="sec-3">读书的变迁</h2><div class="outline-text-2" id="text-3"><p>我周岁的时候，在老家的习俗下，有个抓周的习俗活动。据我妈说，我先抓了吃的（难道证明我是个吃货？可是我并不是啊），然后抓了书本。</p><p>我妈说：这孩子以后就是个读书的料，实际上他们并不认为这种抓周靠谱，所以早早在老家修房子，以为我会在农村扎根，成为一个农民，娶妻生子&#x2026;，好了，扯远了。</p><p>我觉得真的能预测一个人的行为，自从我学会认字读书，基本上空余的时间差不多都是捧着书本读书。</p><p>幸好我父亲是个老师，家里的藏书在农村家庭里算是顶尖的存在了，而且后来他继续大学的专修，很多厚部头的历史书籍，我小学到初中，基本上读了很多历史的书。</p><p>除了历史，很多哲学的书也会读，不过年少的时候思想并不成熟，所以当时很多都读不懂，现在回过头来再读，倒是所获良多。</p><p>四大名著、金庸也是那时候读的，很搞笑的是，读初中的时候每次考试，我早早做完试卷，就在桌肚子底下垫本金庸小说，读的不亦乐乎。</p><p>后来高中学习倒是很紧张，也没时间看些闲书，大概只有在寒暑假的时候读些稀奇古怪的书。</p><p>我高中有个室友，读钢铁是怎样炼成的，读了一个学年。</p></div></div><div id="outline-container-sec-4" class="outline-2"><h2 id="sec-4">买书的变迁</h2><div class="outline-text-2" id="text-4"><p>最早的时候是在新华书店买书。</p><p>我第一本自己的书，实在镇上的新华书店买的一本怎么学习写作文的书。</p><p>然后在初中毕业之前，就没有再买过书了，一般都是换着书读，或者借书读。</p><p>高中的时候，有段时间流行贝塔斯曼的邮寄活页，上面介绍了很多书籍，然后我们很多人就会选自己喜欢的，然后凑钱去邮局用汇款单寄款，然后贝塔斯曼书友会把书寄过来，这个我们用的倒是很多。</p><p>再后来，卓越网（现在的亚马逊的前身）也开始学习贝塔斯曼寄活页，采用了同样的方式，搞个书友会。</p><p>嗯，新华书店也是非常重要的买书渠道，但是那时候穷学生没什么钱，新华书店又不打折，我大部分时候就是过去读书，买书是件奢侈的事。</p><p>那时候，县城差不多半年会搞一次展销会，很多盗版书在展销会上出售，那个时候我们会去淘书，很多各种奇怪的书都有。当然书籍的质量很差，不过大家乐此不疲。还是我有个室友，为了买书，连续吃了大半个月的泡面，让我十分钦佩。</p><p>大学的时候买书的行为基本上就没有了，因为存放是个不容易的事，不过图书馆真的很不错。我后来都不知道自己借过多少次的书了，就凭借这些书，我学会了很多专业之外的东西。</p></div></div><div id="outline-container-sec-5" class="outline-2"><h2 id="sec-5">工作以后</h2><div class="outline-text-2" id="text-5"><p>刚工作，那时候在Morningstar工作，公司允许每年报销1000元的书籍费用，特别高兴。所以那时候买书很积极，但也因为如此，买书就不仔细，买了很多垃圾的书。</p><p>现在那些书还在我的书架里吃灰。</p><p>尽管后来离开了MS，我也每年基本上保持买一定量的书来阅读，慢慢的书越来越多，很难简单的收藏。就开始买书架，越来越多，也开始把对自己没有什么作用的书开始送出去，分享给需要的人。</p><p>就在今天，买了一千多的书，打完折差不多就四百，算起来比较划算了。</p><p>可惜的是，花了好多时间挑选书，而且好几本收藏了很久的书，居然在这个打折的季节缺货，哎，太可惜&#x2026;</p></div></div><div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;"><a href="https://github.com/allenmagic" target="_blank" rel="external">Edit Me at Github</a> - <a href="https://allenmagic.github.io/" target="_blank" rel="external">Org Source</a> - Last Updated 2017-10-30 一 22:22.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.3.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)</div>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-10-30-%E8%AF%BB%E4%B9%A6%E5%92%8C%E4%B9%B0%E4%B9%A6%E7%9A%84%E5%8F%98%E8%BF%81/#disqus_thread</comments>
    </item>
    
    <item>
      <title>过去和未来</title>
      <link>http://yoursite.com/2017-10-29-%E8%BF%87%E5%8E%BB%E5%92%8C%E6%9C%AA%E6%9D%A5/</link>
      <guid>http://yoursite.com/2017-10-29-%E8%BF%87%E5%8E%BB%E5%92%8C%E6%9C%AA%E6%9D%A5/</guid>
      <pubDate>Sun, 29 Oct 2017 13:10:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;写篇文章真难&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
晚上在家想写篇博客文章，憋了半天没写出来，本来想约几个好友吹水聊天找找感觉，但大家都有自己的事情忙，所以干脆登录死了快一年的公众号（居然还有十几个关注，真的是不离不弃啊，太感谢了），爬下来一篇无病呻吟的老文章，权当完成任务。
&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">写篇文章真难</h2><div class="outline-text-2" id="text-1"><p>晚上在家想写篇博客文章，憋了半天没写出来，本来想约几个好友吹水聊天找找感觉，但大家都有自己的事情忙，所以干脆登录死了快一年的公众号（居然还有十几个关注，真的是不离不弃啊，太感谢了），爬下来一篇无病呻吟的老文章，权当完成任务。</p><a id="more"></a></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">过去和未来</h2><div class="outline-text-2" id="text-2"><p>晚上脑子抽了下自创了一个句子：绕不过的是过去，看不穿的是未来。</p><p>想想我，活了三十年，很多事情想的并不清楚，也不明白。就这样糊里糊涂的过去了，一不小心还得了个抑郁症，然后以为自己大彻大悟，其实就放狗屁，没放下的东西还多着呢。</p><p>之前，我很多时候还是会和人妥协，说的好听叫为人和善，说的不好听就是没原则。我只是懒得计较，大部分时间花在争执上是没有必要的。</p><p>我过去怎么样，我已经没有办法去改变了，或许曾经操蛋过，也或许曾经傻逼过，但又如何，我不可能再回去变得英明睿智了，所以终究还是操蛋的过去。</p><p>未来怎么样，我还是能左右的。 我还是从本源上相信我自己是个聪明的人，能够判断出事情的是非，判断一个人的优劣，或许还能做一两件出彩的事，免得更以后回过来看，认为自己确实是个傻逼。</p></div></div><div id="outline-container-sec-3" class="outline-2"><h2 id="sec-3">坚持原则好不好?</h2><div class="outline-text-2" id="text-3"><p>第二个问题比较虚。 </p><p>我给自己定了很多原则，而且似乎特别死忠的维护这些原则，觉得背叛了原则就和我就和自己有了莫大的仇怨。哪怕是对自己很重要的人也这么要求，显得不近情理。</p><p>是对还是错呢？</p><p>我也不知道，反正我有时候想抽自己两嘴巴，想问自己，你干什么不好，非得想做个君子圣人，以为能彰显自己多么正确，实际上就是设置陷阱让自己奋不顾身的跳，并且跳之前还高呼：真理万岁。</p><p>所以，有时候两个字形容自己就是傻逼。</p><p>说起来，过多的限制框架并不能造就一个正确的人，可能多了很多束缚，而成就者往往并不拘泥小节，大体原则上遵守就行了。</p><p>看来，有必要对一些不合适宜的原则说再见了。</p></div></div><div id="outline-container-sec-4" class="outline-2"><h2 id="sec-4">很多事情真的想不到</h2><div class="outline-text-2" id="text-4"><p>我这几年有明显进步的是情绪控制力。</p><p>想想啊，我的情绪控制能力一直很不错，几乎不会生气发火，也不会和人争执，几乎不会有剧烈的情绪波动（有过一次那么失态），也不会随意的不开心。唯一就是2012年那次抑郁症爆发的那次，完全没能控制住自己。</p><p>想想当年，每当不开心就请朋友吃饭，现在没这个习惯了，哈哈。</p><p>我记得曾经有个人说过，如果你交朋友，要注意他是否会为一些小事情绪失控，我不仅从行为上避免了，而且从心理上避免了。</p><p>我花了更多的时间发展我各种乱七八糟的兴趣，这些东西足以排解掉我的伐开心了。以前要是有人惹我生气，我会偷偷的不高兴，现在啊，惹我生气的机会都很少了，即使对方说的我不开心，我也会指出来，然后妈蛋过两小时我就忘了。</p><p>看来，记性不好真的有好处啊。 </p></div></div><div id="outline-container-sec-5" class="outline-2"><h2 id="sec-5">好人不一定有好报</h2><div class="outline-text-2" id="text-5"><p>我现在开始相信了，好人不一定有好报。</p><p>但是，这有什么关系呢，我还是想做一个好人。</p><p>这是本性，我一直认为，善良是一个人的本性，无论是再绝望的环境，善良的人对待这个世界的心态仍然是善良的，并不一定是期盼有好的回报。</p><p>可社会的事实就是，在不断挤压善良的人。</p><p>我妈从小教导我，要做一个善良的人，我也一直坚守这个信念。</p></div></div><div id="outline-container-sec-6" class="outline-2"><h2 id="sec-6">放弃就是罪过</h2><div class="outline-text-2" id="text-6"><p>我不相信坚持就是胜利 。</p><p>但我相信，不坚持就没有机会看到明天。</p><p>这个世界啊，就是这样的。</p></div></div><div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;"><a href="https://github.com/allenmagic" target="_blank" rel="external">Edit Me at Github</a> - <a href="https://allenmagic.github.io/" target="_blank" rel="external">Org Source</a> - Last Updated 2017-10-29 日 21:19.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.3.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)</div>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-10-29-%E8%BF%87%E5%8E%BB%E5%92%8C%E6%9C%AA%E6%9D%A5/#disqus_thread</comments>
    </item>
    
    <item>
      <title>《Python金融大数据分析》读书笔记-1</title>
      <link>http://yoursite.com/2017-10-26-%E3%80%8APython%E9%87%91%E8%9E%8D%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-1/</link>
      <guid>http://yoursite.com/2017-10-26-%E3%80%8APython%E9%87%91%E8%9E%8D%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-1/</guid>
      <pubDate>Thu, 26 Oct 2017 15:00:00 GMT</pubDate>
      <description>
      
        &lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;写在前面&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
近期会逐渐的把一些读书笔记整理成文档，一是想把一些东西分享出来，另外就是用写作来调整下状态，欢迎大家拍砖，另外由于笔记是用org格式文档转过来的，可能排版会不是很好看，请原谅！
&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="outline-container-sec-1" class="outline-2"><h2 id="sec-1">写在前面</h2><div class="outline-text-2" id="text-1"><p>近期会逐渐的把一些读书笔记整理成文档，一是想把一些东西分享出来，另外就是用写作来调整下状态，欢迎大家拍砖，另外由于笔记是用org格式文档转过来的，可能排版会不是很好看，请原谅！</p><a id="more"></a></div></div><div id="outline-container-sec-2" class="outline-2"><h2 id="sec-2">第四章-数据类型和结构</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-sec-2-1" class="outline-3"><h3 id="sec-2-1">基本数据类型</h3><div class="outline-text-3" id="text-2-1"><p>基本数据类型包括整数、浮点数、字符串。因为Python是动态类型的语言，因此在程序运行时可以判断数据的类型，而不需要在使用前实现声明数据类型。</p><p>可以用type函数来返回变量的数据类型：</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="number">10</span></span><br><span class="line">type(a)</span><br></pre></td></tr></table></figure></div><p>返回的结果是int类型的数据：</p><blockquote><p>&lt;type 'int'&gt;</p></blockquote><p>按照我们的理解，整数和数学意义上的整数一致，并且整数类型是Python标准和内建的数据类型。Python有个特点就是可以处理任意大的整数。浮点数一般用来表示小数或者分数，</p><p>对于浮点数，Python提供了*decimal*模块可以提供任意精度的浮点数，并提供了使用这些数值时处理精度问题的多个选项。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> decimal</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line">d=Decimal(<span class="number">1</span>) / Decimal(<span class="number">10</span>)</span><br></pre></td></tr></table></figure></div><p>处理完自然数和浮点数，我们来看看文本，Python表示文本的基本数据类型是字符串(string)，并且字符串对象有一些内建方法。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t=<span class="string">'this is a test string object'</span></span><br><span class="line">t.capitalize()</span><br><span class="line">t.split()</span><br></pre></td></tr></table></figure></div><p>我们会发现Python会返回如下结果：</p><blockquote><p>This is a test string object['this','is','a','test','string','object']</p></blockquote><p>处理字符串对象或者文本时，有个强大的工具就是正则表达式，在Python中的模块为re模块。具体可以参阅相关的数据。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">series = <span class="string">"""</span><br><span class="line">'01/18/2014 13:00:00',100,'1st';</span><br><span class="line">'01/18/2014 13:30:00',110,'2nd';</span><br><span class="line">'01/18/2014 14:00:00',120,'3rd'</span><br><span class="line">"""</span></span><br><span class="line">dt = re.compile(<span class="string">"'[0-9/:\s]+'"</span>) <span class="comment">#datetime</span></span><br><span class="line"></span><br><span class="line">result = dt.findall(series)</span><br><span class="line"></span><br><span class="line">result</span><br><span class="line">Out[<span class="number">6</span>]: [<span class="string">"'01/18/2014 13:00:00'"</span>, <span class="string">"'01/18/2014 13:30:00'"</span>, <span class="string">"'01/18/2014 14:00:00'"</span>]</span><br></pre></td></tr></table></figure></div></div></div><div id="outline-container-sec-2-2" class="outline-3"><h3 id="sec-2-2">基本数据结构</h3><div class="outline-text-3" id="text-2-2"><p>Python的基本数据类型有/元组/、/列表/、/字典/、/集合/。</p></div><div id="outline-container-sec-2-2-1" class="outline-4"><h4 id="sec-2-2-1">元组</h4><div class="outline-text-4" id="text-2-2-1"><p>元组(tuple)是一种高级数据结构，由多个数据构成的数据集合，其中的数据可以是任何一种数据，并且并不要求元组内的数据基本的类型是一致。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">t</span><br><span class="line">Out[<span class="number">8</span>]: (<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">type(t)</span><br><span class="line">Out[<span class="number">9</span>]: tuple</span><br></pre></td></tr></table></figure></div><p>在Python中，几乎所有的数据类型结构，都有內建索引，可以自由的引用对应的元素（包括单个元素和多个元素），*这里需要注意的是Python的索引从零开始*。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">t</span><br><span class="line">Out[<span class="number">8</span>]: (<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>))</span><br><span class="line"></span><br><span class="line">type(t)</span><br><span class="line">Out[<span class="number">9</span>]: tuple</span><br><span class="line"></span><br><span class="line">t[<span class="number">2</span>]</span><br><span class="line">Out[<span class="number">10</span>]: <span class="string">'date'</span></span><br><span class="line"></span><br><span class="line">t[<span class="number">3</span>]</span><br><span class="line">Out[<span class="number">11</span>]: (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>)</span><br></pre></td></tr></table></figure></div><p>元组还有其它的方法可以了解，需要注意的是元组一旦定义，它们是很不容易更改的，所以如果需要更灵活的数据结构，引出了列表。</p></div></div><div id="outline-container-sec-2-2-2" class="outline-4"><h4 id="sec-2-2-2">列表</h4><div class="outline-text-4" id="text-2-2-2"><p>列表(list)相对元组，更加灵活也更强大。而且，列表是金融数据使用的最基本的数据结构。创建方法和元组类似，但是使用[]符号。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>)]</span><br><span class="line"></span><br><span class="line">l</span><br><span class="line">Out[<span class="number">14</span>]: [<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>)]</span><br><span class="line"></span><br><span class="line">l[<span class="number">3</span>]</span><br><span class="line">Out[<span class="number">15</span>]: (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">l1 = list(t)</span><br><span class="line"></span><br><span class="line">l1</span><br><span class="line">Out[<span class="number">17</span>]: [<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>)]</span><br><span class="line"></span><br><span class="line">type(l1)</span><br><span class="line">Out[<span class="number">18</span>]: list</span><br></pre></td></tr></table></figure></div><p>我们看到，可以使用[]赋值列表，也可以使用list函数来创建列表，并且列表和元组一样可以方便的索引。除了以上的方法，列表还可以通过不同方法来扩大或缩小（增加或者删除列表的元素）。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">l.extend(time.localtime())  <span class="comment"># 把时间的每个数据作为元素增加至l列表</span></span><br><span class="line"></span><br><span class="line">l</span><br><span class="line">Out[<span class="number">24</span>]: [<span class="number">1</span>, <span class="number">2.5</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>), <span class="number">2017</span>, <span class="number">10</span>, <span class="number">26</span>, <span class="number">21</span>, <span class="number">48</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">299</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">l.remove(<span class="number">2.5</span>)  <span class="comment"># 移除值为2.5的元素</span></span><br><span class="line"></span><br><span class="line">l</span><br><span class="line">Out[<span class="number">26</span>]: [<span class="number">1</span>, <span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>), <span class="number">2017</span>, <span class="number">10</span>, <span class="number">26</span>, <span class="number">21</span>, <span class="number">48</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">299</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">l.pop(<span class="number">0</span>)  <span class="comment"># 移除索引为0的元素</span></span><br><span class="line">Out[<span class="number">27</span>]: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">l</span><br><span class="line">Out[<span class="number">28</span>]: [<span class="string">'date'</span>, (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>), <span class="number">2017</span>, <span class="number">10</span>, <span class="number">26</span>, <span class="number">21</span>, <span class="number">48</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">299</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure></div><p>以上就是列表的简单介绍，列表还有其它的方法，可以参考相关的书记和手册，这里就不再赘述了。</p></div></div><div id="outline-container-sec-2-2-3" class="outline-4"><h4 id="sec-2-2-3">字典</h4><div class="outline-text-4" id="text-2-2-3"><p>字典(dict)对象就是按照键码（可能是字符串对象）读取的数据字典，也是一种可变序列（上面所说的元组是不可变序列，列表是可变序列），是按照key:value的方式进行存储数据，需要说明的是列表是有序的而且可以排序，但字典对象是无序且不可排序的，字典可以用{}定义。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d = {</span><br><span class="line">     <span class="string">'name'</span> : <span class="string">"Allen Zheng"</span>,</span><br><span class="line">     <span class="string">'age'</span> : <span class="number">31</span>,</span><br><span class="line">     <span class="string">'sex'</span> : <span class="string">"male"</span>,</span><br><span class="line">     <span class="string">'Country'</span> : <span class="string">"China"</span>,</span><br><span class="line">     <span class="string">'Title'</span> : <span class="string">"Senior Product Manager"</span></span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> type(d)</span><br><span class="line">Out[<span class="number">30</span>]: dict</span><br></pre></td></tr></table></figure></div><p>同样，字典对象也內建了一些方法，比如索引等等：</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n [<span class="number">31</span>]: d.keys()</span><br><span class="line">Out[<span class="number">31</span>]: dict_keys([<span class="string">'name'</span>, <span class="string">'age'</span>, <span class="string">'sex'</span>, <span class="string">'Country'</span>, <span class="string">'Title'</span>])</span><br><span class="line"></span><br><span class="line">d.values()</span><br><span class="line">Out[<span class="number">32</span>]: dict_values([<span class="string">'Allen Zheng'</span>, <span class="number">31</span>, <span class="string">'male'</span>, <span class="string">'China'</span>, <span class="string">'Senior Product Manager'</span>])</span><br><span class="line"></span><br><span class="line">print(d[<span class="string">'age'</span>], d[<span class="string">'Title'</span>])</span><br><span class="line"><span class="number">31</span> Senior Product Manager</span><br></pre></td></tr></table></figure></div><p>字典支持for遍历的循环，事实上元组和列表也支持for遍历循环：</p><div class="org-src-container"><figure class="highlight"><table><tr><td class="code"><pre><span class="line">for value in d.values():</span><br><span class="line">    print(type(value))</span><br><span class="line"></span><br><span class="line">&amp;lt;class 'str'&amp;gt;</span><br><span class="line">&amp;lt;class 'int'&amp;gt;</span><br><span class="line">&amp;lt;class 'str'&amp;gt;</span><br><span class="line">&amp;lt;class 'str'&amp;gt;</span><br><span class="line">&amp;lt;class 'str'&amp;gt;</span><br><span class="line"></span><br><span class="line">for key in d.keys():</span><br><span class="line">    print(key)</span><br><span class="line"></span><br><span class="line">name</span><br><span class="line">age</span><br><span class="line">sex</span><br><span class="line">Country</span><br><span class="line">Title</span><br><span class="line"></span><br><span class="line">for (key, value) in d.items():</span><br><span class="line">    print(key,value)</span><br><span class="line"></span><br><span class="line">name Allen Zheng</span><br><span class="line">age 31</span><br><span class="line">sex male</span><br><span class="line">Country China</span><br><span class="line">Title Senior Product Manager</span><br></pre></td></tr></table></figure></div><p>更多字典的方法和介绍可以参考相关的书籍或者文档。</p></div></div><div id="outline-container-sec-2-2-4" class="outline-4"><h4 id="sec-2-2-4">集合</h4><div class="outline-text-4" id="text-2-2-4"><p>集合是Python中使用较少的一种数据结构，集合是其它对象的*无序*集合，每个元素只包含一次。</p><div class="org-src-container"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t = (<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'f'</span>,<span class="string">'d'</span>,<span class="string">'a'</span>,<span class="string">'m'</span>,<span class="string">'b'</span>)</span><br><span class="line"></span><br><span class="line">T = set(t)</span><br><span class="line"></span><br><span class="line">T</span><br><span class="line">Out[<span class="number">44</span>]: {<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'f'</span>, <span class="string">'m'</span>}</span><br><span class="line"></span><br><span class="line">l = [<span class="number">1</span>,<span class="number">5</span>,<span class="string">'a'</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="string">'b'</span>,<span class="string">'a'</span>]</span><br><span class="line"></span><br><span class="line">L = set(l)</span><br><span class="line"></span><br><span class="line">L</span><br><span class="line">Out[<span class="number">47</span>]: {<span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="string">'a'</span>, <span class="string">'b'</span>}</span><br></pre></td></tr></table></figure></div><p>使用集合对象，可以实现数学上的集合论相关的运算，比如生成并集、交集和差集等。另外，集合有个用处就是去除列表的重复元素。</p></div></div></div><div id="outline-container-sec-2-3" class="outline-3"><h3 id="sec-2-3">后续</h3><div class="outline-text-3" id="text-2-3"><p>下一篇笔记会介绍NumPy的数据结构，NumPy是用于金融数据分析的基石，会花更多的篇幅来说明。另外，最近由于厌倦了工作中的时间管理、项目管理、文档管理和任务管理用不同的软件工具，实在是烦躁。于是重新拿起了荒废许久Emacs，把遗弃已久的org-mod重新拾起来做日常管理。研究了两天，逐渐上手就深深迷恋爱不释手。这里就放个截图给大家看看。</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/emacs-org-mode.png" alt="emacs-org-mode.png">有空可以介绍一下Emacs和org-mode，简直是写作和日常管理的神器。</p></div></div></div><div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;"><a href="https://github.com/allenmagic" target="_blank" rel="external">Edit Me at Github</a> - <a href="https://allenmagic.github.io/" target="_blank" rel="external">Org Source</a> - Last Updated 2017-10-26 四 23:44.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.3.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)</div>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-10-26-%E3%80%8APython%E9%87%91%E8%9E%8D%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>生命的精彩来自内心的丰富</title>
      <link>http://yoursite.com/2017-10-25-%E7%94%9F%E5%91%BD%E7%9A%84%E7%B2%BE%E5%BD%A9%E6%9D%A5%E8%87%AA%E5%86%85%E5%BF%83%E7%9A%84%E4%B8%B0%E5%AF%8C/</link>
      <guid>http://yoursite.com/2017-10-25-%E7%94%9F%E5%91%BD%E7%9A%84%E7%B2%BE%E5%BD%A9%E6%9D%A5%E8%87%AA%E5%86%85%E5%BF%83%E7%9A%84%E4%B8%B0%E5%AF%8C/</guid>
      <pubDate>Wed, 25 Oct 2017 11:24:16 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;导言&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;最近的心情有点低沉，也不知道向谁诉说，总觉得憋在心里不太妥当。干脆还是写写文章，记录一下自己的心情，这样以后也可以回头看看，体会过去的自己。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><blockquote><p>最近的心情有点低沉，也不知道向谁诉说，总觉得憋在心里不太妥当。干脆还是写写文章，记录一下自己的心情，这样以后也可以回头看看，体会过去的自己。</p></blockquote><a id="more"></a><h2 id="什么样的路"><a href="#什么样的路" class="headerlink" title="什么样的路"></a>什么样的路</h2><p>我一直认为自己是个幸运的人，虽然我没有亲见过比我糟糕许多的人，但我可以能想象到整个社会很多人的境遇是我平生可能不曾见过的。也就是说其实我还是处在很好的环境和情况下了。</p><p>这几年，我的孤独感越来越浓烈，很多时候有很多事情，很多思考不知道告诉谁。给父母讲，他们不一定理解，甚至很多时候我说什么他们都不明白。对朋友其实也有保留，因为大部分时候我觉得自己和其他人有很多不一样的思想和人生观念，所以真的能聊得来的朋友就很少了。而且，我这人也挺奇怪，有个很好的朋友自从恋爱了，我就尽量少打扰她了，她结婚了就更不好意思像过去那样随意地找她聊天了。</p><p>那天看到一篇文章，大概讲的是孤独是上天对一个人的赏赐，让一个人真正的了解自己的内心，学会和自己相处。过去很多年，我绝大部分时间都是和自己相处，学会了了解自己的优势和劣势。</p><h2 id="最近一年"><a href="#最近一年" class="headerlink" title="最近一年"></a>最近一年</h2><p>今年家里最大的一件事就是父亲病了，当然父亲病了肯定有他自己的因素，但我的疏忽也是主要的原因。过去几年，他作为老烟民实际上有着患肺癌的高风险因素，过去我提醒他体检，但很多时候只是提醒，却没有强制性的要求，导致不能及时发现，等到发现的时候病情已经很严重了。</p><p>亲人患病对家庭来说是很沉重的，并不是因为经济的问题，而是身体和心理的痛苦。刚刚得知父亲的病，我们商量了达成一致，先瞒着他不让他知道，免得他的心理负担过重。我其实也不知道这样对不对，但确实隐瞒对治疗造成了很多不便。因为很多检查和治疗都想着不让他知道，但难免有蛛丝马迹会不对。</p><p>过了一段时间，治疗效果很不如人意，我们决定还是告诉他，并给他安排了更好的医院进行治疗。为此那段时间，我往返深圳成都数次，去联络医院和医生。然后把他转到成都的医院，同时尽量的用心理辅导来排解他的低落，我能明显感受到他的害怕和担忧。这个时候，作为家里的支柱，应该起到更大的作用，我每天打电话聊天尽量的让他感觉不到害怕。而且父亲也担心严重的病会花费巨额的医疗费，我也尽量的让他不要担心。</p><p>有的时候，家庭有问题才能发现这个家庭是否团结，凝聚力如何。我们家在父亲病了，体现了强大的团结。每个人都尽自己最大的努力来解决问题，母亲在医院护理父亲半年，在一个很小的床上就睡了大半年，姐姐也回家做饭照顾。我也在假期或者平时往返深圳成都数次，家庭体现出了强大的凝聚力，用了各种方式和各种渠道去帮助父亲，所以无论从治疗还是生活，我们都在努力做到最好，父亲也慢慢的解开心结，治疗效果也很好，这就是对我们最大的回馈。</p><h2 id="每个人都会面临问题"><a href="#每个人都会面临问题" class="headerlink" title="每个人都会面临问题"></a>每个人都会面临问题</h2><p>无论作为个体还是集体的一份子，我们都会面对自己的问题和亲人、朋友的问题，这些会给我们带来很大的困扰。坦白讲，今年大部分时候的情绪并不好，要花大部分时间照顾家人，为父亲的病奔走，找医院、检查、和医生商量治疗方案、学习相关的知识、以及各种打听化疗后的护理等等，所以大部分时间都是繁忙的。而且，工作也开始忙碌，并且遇到各种问题，最突出的就是和领导的工作理念不同。</p><p>显然，遇到这些事情，大部分人都不会高兴得起来。这几年我倒是学会了如何处理自己的情绪，或许我觉得很辛苦，也很艰难，情绪难免低落，但这些都不能带给身边的人，更不能带个关心自己的人。</p><p>这时候我能做的就是，该做什么事就做什么事，保持平稳的心态。</p><h2 id="人生可以很精彩"><a href="#人生可以很精彩" class="headerlink" title="人生可以很精彩"></a>人生可以很精彩</h2><p>正如邓丽君所唱的歌：路纵崎岖亦不怕受磨炼，我们要活得精彩就得让自己的内心更丰富。</p><p>五年前，我受抑郁症困扰和感情的失败，在心情最为沮丧的时候选择了辞职，以为休息一段时间可以让自己平复并走出阴影。然而，一段时间的松懈并没有让我真的恢复。那时候很颓废，内心干涸，无所事事，每天除了玩游戏上网看电视，其它的事情都不做了。要知道，过去近三十年我的兴趣爱好广泛，音乐、书法、读书、体育、厨艺和手工活都是我的爱好，那时候都没兴趣了。自己把自己的内心抛弃，不再继续任何有意义的尝试，所以活得很丧气。</p><p>现在想来，自己还是不够沉稳，遇到了无法处理的事情就不愿意面对，或者没有尽最大的努力去改变自己，让自己回到正轨。</p><p>这几年，过去的兴趣也没有找回来多少，但总有新的事情能够吸引我…，这样挺好。</p><h2 id="孤独是上天给的最大赏赐"><a href="#孤独是上天给的最大赏赐" class="headerlink" title="孤独是上天给的最大赏赐"></a>孤独是上天给的最大赏赐</h2><p>每个人都会有孤独的时候，这个是上天给的最大的赏赐，我们如何处理孤独是人生中必须经过的。</p><p>孤独只能相处，不能解决。这么多年我已经习惯了它，很多时候它的产生来自于和家人、朋友的观念上的差异，或者对待某件事情的看法。因为会在那么一刹那间，觉得这个世界了解我的人怎么这么少，而我恰好有个习惯就是不愿意解释，说起来还是我的一个观点：我们不应该改变任何人的观念和思想，因为他是一个独立的人，我应该尊重他的思想和观念。</p><p>所以，更加孤独的时候就是，双方有了冲突，我不愿解释，而对方却努力想让你接受他的观点，这个时候我就很压抑。不过大部分时候我都无所谓，特别是如果这个试图改变我的人对我来说没那么重要，几乎是无影响的。但是如何对方是我认为很重要的人，我就会很忧郁，因为这种冲突很难解决，结果大部分时候我就妥协了。</p><p>所以，环境的孤独是无关痛痒的，然而心理上的孤独是挺难忍受的，但我想到我喜欢的人，我关心的人开心，似乎这也没什么大不了的，因为他们开心了我就开心了…</p><p><strong>所有的事情都是在你经历时才会觉得，它们真的很有意思</strong></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-10-25-%E7%94%9F%E5%91%BD%E7%9A%84%E7%B2%BE%E5%BD%A9%E6%9D%A5%E8%87%AA%E5%86%85%E5%BF%83%E7%9A%84%E4%B8%B0%E5%AF%8C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>基于TuShare和ECharts的金融数据可视化</title>
      <link>http://yoursite.com/2017-10-19-%E5%9F%BA%E4%BA%8Etushare%E5%92%8CECharts%E7%9A%84%E9%87%91%E8%9E%8D%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
      <guid>http://yoursite.com/2017-10-19-%E5%9F%BA%E4%BA%8Etushare%E5%92%8CECharts%E7%9A%84%E9%87%91%E8%9E%8D%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</guid>
      <pubDate>Thu, 19 Oct 2017 06:00:32 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;导言&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;之前写过一篇文章，介绍用python从网易财经抓取数据并使用matplotlib和R画出K线图。上述方法尤其适用的场景，有时候在交互式绘图方面显得力不从心，今天介绍以下基于ECharts进行交互绘图，并且我们将数据的获取方式进行更新，使用TuShare这个开源的财经数据接口获取需要的数据。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><blockquote><p>之前写过一篇文章，介绍用python从网易财经抓取数据并使用matplotlib和R画出K线图。上述方法尤其适用的场景，有时候在交互式绘图方面显得力不从心，今天介绍以下基于ECharts进行交互绘图，并且我们将数据的获取方式进行更新，使用TuShare这个开源的财经数据接口获取需要的数据。</p></blockquote><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>首先介绍下TuShare和ECharts两个有用的工具。</p><h3 id="TuShare"><a href="#TuShare" class="headerlink" title="TuShare"></a>TuShare</h3><p>TuShare<a href="http://www.waditu.cn/" target="_blank" rel="external">点击这里访问</a>是一个由个人开发和维护的开源财经数据接口包，其中的数据包括股票的历史行情、实时行情数据、分类数据、财务数据和基本面的数据等，数据均是从第三方取到获取并包装，使用python对数据进行清洗和处理，最终的数据格式为Pandas中支持的data.frame格式的数据。</p><p>如TuShare本身介绍所述，该数据接口适用于量化投资分析师（Quant)、对金融市场进行大数据分析的企业和个人、金融公司以及学习利用python进行数据分析的人（包括学生）。所以如果你对金融分析感兴趣，而又不想付费使用商业的数据接口，Tushare是一个非常不错的选择，如果你觉得这个接口很好用，并且愿意适当支持作者，你也可以在Tushare的主页进行捐助.</p><h3 id="ECharts"><a href="#ECharts" class="headerlink" title="ECharts"></a>ECharts</h3><p>ECharts是一个纯粹的JavaScript库，由百度开发和维护的一个<a href="http://echarts.baidu.com/index.html" target="_blank" rel="external">开源项目</a>。这个百度的产品确实很赞，你可以在官网查看实例，并且可以修改实例来体验产品，可以发现基本上主流的图形都可以支持，而且由于文档有中文版，适合对英语阅读有困难的朋友。</p><p>另外，hexo其实是支持echarts模块的，其插件为<a href="https://github.com/quentin-chen/hexo-tag-echarts3" target="_blank" rel="external">hexo-tag-echarts3</a>，并且你可以参考<a href="http://kchen.cc/2016/11/05/echarts-in-hexo/" target="_blank" rel="external">使用方法</a>，对于此本文就不再展开说明了。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装TuShare"><a href="#安装TuShare" class="headerlink" title="安装TuShare"></a>安装TuShare</h3><p>TuShare的安装很简单，可以在网站查看其的系统依赖，一般Python是最新版的都支持（包括Python2和Python3）。另外，因为tushare的数据格式为data.frame，因此要求python安装了Pandas库。使用命令安装如下：</p><p>以Mac OS为准，Linux和Windows参考网站的提示方法</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">pip install tushare   # Python2安装</div><div class="line">pip3 install tushare  # Python3安装</div><div class="line"></div><div class="line"># 如果安装报错，一般是没有安装Pandas，可以如下安装：</div><div class="line">pip install pandas     # Python2安装</div><div class="line">pip3 install pandas    # Python3安装</div></pre></td></tr></table></figure><p>安装完就可以使用TuShare了。</p><h3 id="安装ECharts"><a href="#安装ECharts" class="headerlink" title="安装ECharts"></a>安装ECharts</h3><p>实际上ECharts可以下载到本地，并可以和你的web或者app程序打包应用，我们这次使用的ECharts不是使用本地调用代码，而是使用Python的一个模块，其中动态导入js脚本实现绘图。因此本次不用安装ECharts。</p><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><p>在Python的Ipython中，有个display的模块，可以实现HTML效果的展示，更出彩的是Ipython Notebook中自带JS模块可以动态导入js脚本并执行。可以先看看示例（本文的示例均是使用Ipython)：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">from</span> Ipython.display <span class="keyword">import</span> HTML</div><div class="line"></div><div class="line">HTML(<span class="string">'这是&lt;font color=\'read\'&gt;HTML代码&lt;/font&gt;测试代码'</span>)</div></pre></td></tr></table></figure><h3 id="ECharts的基本用法"><a href="#ECharts的基本用法" class="headerlink" title="ECharts的基本用法"></a>ECharts的基本用法</h3><p>ECharts是个纯粹的JS图形库，所以其语言本质是Javascript语言。根据官网的示例，我们构建以下一个图形：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><div class="line">option = &#123;</div><div class="line">    <span class="attr">title</span> : &#123;</div><div class="line">        <span class="attr">text</span>: <span class="string">'各金融资产比重'</span>,</div><div class="line">        <span class="attr">subtext</span>: <span class="string">'纯属虚构'</span>,</div><div class="line">        <span class="attr">x</span>:<span class="string">'center'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">tooltip</span> : &#123;</div><div class="line">        <span class="attr">trigger</span>: <span class="string">'item'</span>,</div><div class="line">        <span class="attr">formatter</span>: <span class="string">"&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">legend</span>: &#123;</div><div class="line">        <span class="attr">orient</span>: <span class="string">'vertical'</span>,</div><div class="line">        <span class="attr">left</span>: <span class="string">'left'</span>,</div><div class="line">        <span class="attr">data</span>: [<span class="string">'股票'</span>,<span class="string">'债券'</span>,<span class="string">'基金'</span>,<span class="string">'金融衍生品'</span>,<span class="string">'现金及等价物'</span>]</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">series</span> : [</div><div class="line">        &#123;</div><div class="line">            <span class="attr">name</span>: <span class="string">'金融资产'</span>,</div><div class="line">            <span class="attr">type</span>: <span class="string">'pie'</span>,</div><div class="line">            <span class="attr">radius</span> : <span class="string">'55%'</span>,</div><div class="line">            <span class="attr">center</span>: [<span class="string">'50%'</span>, <span class="string">'60%'</span>],</div><div class="line">            <span class="attr">data</span>:[</div><div class="line">                &#123;<span class="attr">value</span>:<span class="number">335</span>, <span class="attr">name</span>:<span class="string">'债券'</span>&#125;,</div><div class="line">                &#123;<span class="attr">value</span>:<span class="number">310</span>, <span class="attr">name</span>:<span class="string">'基金'</span>&#125;,</div><div class="line">                &#123;<span class="attr">value</span>:<span class="number">234</span>, <span class="attr">name</span>:<span class="string">'现金及等价物'</span>&#125;,</div><div class="line">                &#123;<span class="attr">value</span>:<span class="number">135</span>, <span class="attr">name</span>:<span class="string">'金融衍生品'</span>&#125;,</div><div class="line">                &#123;<span class="attr">value</span>:<span class="number">1548</span>, <span class="attr">name</span>:<span class="string">'股票'</span>&#125;</div><div class="line">            ],</div><div class="line">            <span class="attr">itemStyle</span>: &#123;</div><div class="line">                <span class="attr">emphasis</span>: &#123;</div><div class="line">                    <span class="attr">shadowBlur</span>: <span class="number">10</span>,</div><div class="line">                    <span class="attr">shadowOffsetX</span>: <span class="number">0</span>,</div><div class="line">                    <span class="attr">shadowColor</span>: <span class="string">'rgba(0, 0, 0, 0.5)'</span></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>对应的图形就如下所示，并且图形可以交互显示:</p><div id="echarts5057" style="width: 110%;height: 420px;margin: 0 auto"></div><script src="http://echarts.baidu.com/dist/echarts.common.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts5057'));        // 指定图表的配置项和数据        var option = option = {    title : {        text: '各金融资产比重',        subtext: '纯属虚构',        x:'center'    },    tooltip : {        trigger: 'item',        formatter: "{a} <br/>{b} : {c} ({d}%)"    },    legend: {        orient: 'vertical',        left: 'left',        data: ['股票','债券','基金','金融衍生品','现金及等价物']    },    series : [        {            name: '金融资产',            type: 'pie',            radius : '55%',            center: ['50%', '60%'],            data: [                {value:335, name:'债券'},                {value:310, name:'基金'},                {value:234, name:'现金及等价物'},                {value:135, name:'金融衍生品'},                {value:1548, name:'股票'}            ],            itemStyle: {                emphasis: {                    shadowBlur: 10,                    shadowOffsetX: 0,                    shadowColor: 'rgba(0, 0, 0, 0.5)'                }            }        }    ]};        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script><p>所以我们看到，ECharts基于javascript绘制图形，定义好图形的参数和数据，用浏览器渲染就能得到所需要的图形，我们本文就使用了TuShare获取数据，并对数据进行清洗和处理。</p><h3 id="TuShare的基本用法"><a href="#TuShare的基本用法" class="headerlink" title="TuShare的基本用法"></a>TuShare的基本用法</h3><p>安装TuShare后可以直接使用，tushare有各种接口返回不同的数据，非常容易操作，例如：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> tushare <span class="keyword">as</span> ts</div><div class="line"></div><div class="line">price_by_day = ts.get_k_data(code=<span class="string">'600000'</span>, ktype=<span class="string">'D'</span>, autype=<span class="string">'None'</span>, start=<span class="string">'2017-01-01'</span>, end=<span class="string">'2017-10-19'</span>)</div><div class="line">price_by_day[<span class="number">0</span>:<span class="number">10</span>]</div><div class="line"></div><div class="line"><span class="comment"># 运行结果如下：</span></div><div class="line">Out[<span class="number">5</span>]:</div><div class="line">         date   open  close   high    low    volume    code</div><div class="line"><span class="number">0</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-03</span>  <span class="number">16.21</span>  <span class="number">16.30</span>  <span class="number">16.44</span>  <span class="number">16.17</span>  <span class="number">162371.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">1</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-04</span>  <span class="number">16.29</span>  <span class="number">16.33</span>  <span class="number">16.35</span>  <span class="number">16.18</span>  <span class="number">296587.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">2</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-05</span>  <span class="number">16.30</span>  <span class="number">16.30</span>  <span class="number">16.38</span>  <span class="number">16.24</span>  <span class="number">264376.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">3</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-06</span>  <span class="number">16.30</span>  <span class="number">16.18</span>  <span class="number">16.30</span>  <span class="number">16.13</span>  <span class="number">171955.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">4</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-09</span>  <span class="number">16.24</span>  <span class="number">16.20</span>  <span class="number">16.29</span>  <span class="number">16.13</span>  <span class="number">149087.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">5</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-10</span>  <span class="number">16.18</span>  <span class="number">16.19</span>  <span class="number">16.24</span>  <span class="number">16.14</span>   <span class="number">79967.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">6</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-11</span>  <span class="number">16.24</span>  <span class="number">16.16</span>  <span class="number">16.24</span>  <span class="number">16.15</span>   <span class="number">91933.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">7</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-12</span>  <span class="number">16.18</span>  <span class="number">16.12</span>  <span class="number">16.20</span>  <span class="number">16.11</span>   <span class="number">82961.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">8</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-13</span>  <span class="number">16.10</span>  <span class="number">16.27</span>  <span class="number">16.29</span>  <span class="number">16.10</span>  <span class="number">190341.0</span>  <span class="number">600000</span></div><div class="line"><span class="number">9</span>  <span class="number">2017</span><span class="number">-01</span><span class="number">-16</span>  <span class="number">16.23</span>  <span class="number">16.56</span>  <span class="number">16.60</span>  <span class="number">16.10</span>  <span class="number">533047.0</span>  <span class="number">600000</span></div></pre></td></tr></table></figure><p>示例中，我们使用了ts中的get_k_data方法，获取了股票代码为600000（浦发银行）的历史日数据，同样我们还可以使用其它接口获取其它的数据，甚至包括分时数据。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="股票的日K线图"><a href="#股票的日K线图" class="headerlink" title="股票的日K线图"></a>股票的日K线图</h3><p>根据以上我们的想法，首先</p><p><strong>未完成，待续</strong></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-10-19-%E5%9F%BA%E4%BA%8Etushare%E5%92%8CECharts%E7%9A%84%E9%87%91%E8%9E%8D%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LaTeX字体设置技巧</title>
      <link>http://yoursite.com/2017-08-26-LaTeX%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE%E6%8A%80%E5%B7%A7/</link>
      <guid>http://yoursite.com/2017-08-26-LaTeX%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE%E6%8A%80%E5%B7%A7/</guid>
      <pubDate>Sat, 26 Aug 2017 02:56:24 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;导言&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;上次介绍了LaTeX中如何使用表格，本次介绍如何在LaTeX中使用字体，包括使用中文字体。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><blockquote><p>上次介绍了LaTeX中如何使用表格，本次介绍如何在LaTeX中使用字体，包括使用中文字体。</p></blockquote><a id="more"></a><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><p>在任何文档处理工具中，字体设置是必须的。Word中可以对整个文章使用默认的字体，也可以单独对某部分文字使用不同的字体，而且相对比较简单，只需要选择要设置的部分文字，选择使用的字体就可以了，但是如何个性化的字体比较碎散就需要大量的操作了。</p><p>LaTeX也一样，需要配置使用字体。一般如果不设置，会使用默认的字体：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document, if don&apos;t declare the font, </div><div class="line">LaTeX will use default font which is Computer Modern Roamn created by Donald Knuth. </div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>那么输出的效果如下图：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/default-font.png" alt="默认字体输出"></p><p>可以看到，LaTeX使用了其自带的默认字体Computer Modern Roamn（CMR），这个字体是由Donald Knuth<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>创建的。</p><p>另外，默认的设置下是不支持中文字体的：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document. \\</div><div class="line">这是一个测试文档</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>原因在于LaTeX的默认字体CMR并不支持中文。</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/no-chinese.png" alt="默认不支持中文"></p><h2 id="支持中文"><a href="#支持中文" class="headerlink" title="支持中文"></a>支持中文</h2><p>LaTeX中要支持中文，可以使用CJK环境。但本文不介绍这种方式，xetex（xelatex）支持UTF8编码，所以解决了中文支持的问题。一般我们使用fontspec来调用字体。</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec&#125;</div><div class="line">\setmainfont&#123;Comic Sans MS&#125;  % 设置字体为Comic Sans MS</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document. \\</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>编译后的文档如下图：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/font1.png" alt="调用了新的字体"></p><p>但是Comic Sans MS也并不支持中文，所以如果输入中文，还是会出现乱码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec&#125;</div><div class="line">\setmainfont&#123;Comic Sans MS&#125;   % 设置字体为Comic Sans MS</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document, we use Comic Sans MS font. \\</div><div class="line">这是一个测试字体的文档。</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>所示，编译结果的文档如下，中文部分出现了乱码：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/noc1.png" alt="调用字体不支持中文"></p><p>我们设置新的字体，字体能够支持中文：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec&#125;</div><div class="line">\setmainfont&#123;MicrosoftYaHei&#125;   % 使用微软雅黑字体</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document, we use MicrosoftYaHei font. \\</div><div class="line">这是一个测试字体的文档，使用微软雅黑字体。</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>编译结果如图，已经能显示中文了：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/zh-cn.png" alt="显示中文"></p><h2 id="更多设置"><a href="#更多设置" class="headerlink" title="更多设置"></a>更多设置</h2><p>如果只是设置了字体还是不足的，有些配置能让字体显示等更方便，比如连字方式、断行方式等：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec,xunicode, xltxtra&#125;</div><div class="line">\setmainfont&#123;MicrosoftYaHei&#125;   % 使用微软雅黑字体</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document, we use MicrosoftYaHei font. \\</div><div class="line">这是一个测试字体的文档，使用微软雅黑字体，如果不设置断行方式等，那么当输入的文档内容超过一行时，</div><div class="line">不能自动的进行断句，英文断句不用设置，默认了断句方式。</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>编译的结果如下，可以看到中文不能智能断行，导致文本内容超出了页面：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/duanju.png" alt="中文不能自动断句"></p><p>所以，可以配置断行的方式，可以由LaTeX自动的对句子断行：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec,xunicode, xltxtra&#125;</div><div class="line">\setmainfont&#123;MicrosoftYaHei&#125;   % 使用微软雅黑字体</div><div class="line"></div><div class="line">%-----------------------------------------------------------------</div><div class="line">% 设置文本字体和断句方式</div><div class="line">\XeTeXlinebreaklocale &quot;zh&quot;</div><div class="line">\XeTeXlinebreakskip = 0pt plus 1pt </div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document, we use MicrosoftYaHei font. \\</div><div class="line">这是一个测试字体的文档，使用微软雅黑字体，如果不设置断行方式等，那么当输入的文档内容超过一行时，</div><div class="line">不能自动的进行断句，英文断句不用设置，默认了断句方式。</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>编译后结果如下，中文能够自动的断行了：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/auto-break.png" alt="中文自动断行"></p><h2 id="中英文字体分别设置"><a href="#中英文字体分别设置" class="headerlink" title="中英文字体分别设置"></a>中英文字体分别设置</h2><p>如果设置了默认字体，所有的文本会使用同一个字体，如上面的一些图片，英文和中文使用了同一个微软雅黑字体。事实上，LaTeX可以让中英文分别使用不同的字体。方式是用<code>fontspec</code>和<code>xeCJK</code>分别设置<code>main</code>字体，来使用不同字体：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec,xunicode, xltxtra&#125;</div><div class="line">\usepackage&#123;xeCJK&#125;  % 设置中文字体</div><div class="line">%-----------------------------------------------------------------</div><div class="line">% 定义字体</div><div class="line">\defaultfontfeatures&#123;Mapping=tex-text&#125;</div><div class="line">\setCJKmainfont&#123;圆体-简&#125;  % 中文的字体为圆体</div><div class="line">\setmainfont&#123;Comic Sans MS&#125;  % 英文字体使用Comic Sans MS</div><div class="line"></div><div class="line">%-----------------------------------------------------------------</div><div class="line">% 设置文本字体和断句方式</div><div class="line">\XeTeXlinebreaklocale &quot;zh&quot;</div><div class="line">\XeTeXlinebreakskip = 0pt plus 1pt </div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document, we use Comic Sans MS font for English. \\</div><div class="line">这是一个测试字体的文档，中文使用圆体字体。</div><div class="line"></div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>编译后的结果如图所以，我们看到中英文使用不同字体：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/hunpai.png" alt="中英文使用不同字体"></p><p><code>main</code>字体是重要使用的字体，还有另外两个字体设置：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\setCJKsansfont&#123;MicrosoftYaHei&#125;</div><div class="line">\setCJKmonofont&#123;KaiTi&#125;</div><div class="line">\setsansfont&#123;Cochin&#125;</div><div class="line">\setmonofont&#123;Courier New&#125;</div></pre></td></tr></table></figure><p>分别是<code>sansfont</code>和<code>monofont</code>字体。</p><p>一般而言，<code>fontspec</code>字体设置有很多选项，可以参考其文档。</p><p><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>Donald Knuth是TeX的发明者，LaTeX其实就是基于TeX一系列宏包命令</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-08-26-LaTeX%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE%E6%8A%80%E5%B7%A7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LaTeX中的表格处理方式和技巧1</title>
      <link>http://yoursite.com/2017-08-03-LaTeX%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E5%92%8C%E6%8A%80%E5%B7%A71/</link>
      <guid>http://yoursite.com/2017-08-03-LaTeX%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E5%92%8C%E6%8A%80%E5%B7%A71/</guid>
      <pubDate>Thu, 03 Aug 2017 13:02:01 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;导言&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;有段时间没有写笔记了，今天整理了一篇关于LaTeX写文档的内容，这是一个很少有人用的排版软件，我经常用来写报告、书籍和文档。今天介绍的是关于在LaTeX中使用表格。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><blockquote><p>有段时间没有写笔记了，今天整理了一篇关于LaTeX写文档的内容，这是一个很少有人用的排版软件，我经常用来写报告、书籍和文档。今天介绍的是关于在LaTeX中使用表格。</p></blockquote><a id="more"></a><h2 id="基本处理"><a href="#基本处理" class="headerlink" title="基本处理"></a>基本处理</h2><p>在使用LaTeX写文档时，不可避免会使用到表格。我们在使用word时，会有内置基本的表格工具，或者直接在Excel等表格工具中进行编辑处理后粘贴过来。但是LaTeX不是这样，LaTeX需要使用宏包才能做出表格，而且LaTeX有很多不同的宏包完成表格的绘制工作。</p><p>标准LaTeX提供<code>array</code>和<code>tabular</code>两个制表环境，它们的的完整格式如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\begin&#123;array&#125;[表格位置]&#123;列样式&#125;</div><div class="line">列表内容</div><div class="line">\end&#123;array&#125;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\begin&#123;tabular&#125;[表格位置]&#123;列样式&#125;</div><div class="line">列表内容</div><div class="line">\end&#123;tabular&#125;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\begin&#123;tabular*&#125;&#123;表格总宽度&#125;[表格位置]&#123;列样式&#125;</div><div class="line">列表内容</div><div class="line">\end&#123;tabular*&#125;</div></pre></td></tr></table></figure><p>一般array使用于数组矩阵的排版，并且只能在数学环境中使用，如在equation中使用。绝大多数的情况下我们使用的是tabular环境来绘制表格。可以参考如下的案例：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;doc&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">\begin&#123;tabular&#125;&#123;lcc&#125;</div><div class="line">    \toprule  %------------------------------</div><div class="line">    功能          &amp;WEB         &amp;APP         \\</div><div class="line">    \midrule  %------------------------------</div><div class="line">    注册          &amp;$\surd$     &amp;$\surd$     \\</div><div class="line">    登录          &amp;$\surd$     &amp;$\surd$     \\</div><div class="line">    推送          &amp;$\times$    &amp;$\surd$     \\</div><div class="line">    \bottomrule</div><div class="line">\end&#123;tabular&#125;</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure></p><p>那么得到的表格如图所示：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/table1.png" alt="示例表格1"></p><h2 id="线框"><a href="#线框" class="headerlink" title="线框"></a>线框</h2><p>我们在Excel表格中经常会有单元格的线条，可以在上面的示例中有{列样式}的选项，我们一般用<code>|</code>来表示竖线框，<code>\hline</code>表示横线框，示例如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;doc&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">\begin&#123;tabular&#125;&#123;|l|c|c|&#125;</div><div class="line">\hline</div><div class="line">功能          &amp;WEB         &amp;APP         \\ \hline</div><div class="line">注册          &amp;$\surd$     &amp;$\surd$     \\ \hline</div><div class="line">登录          &amp;$\surd$     &amp;$\surd$     \\ \hline</div><div class="line">推送          &amp;$\times$    &amp;$\surd$     \\ \hline</div><div class="line">\end&#123;tabular&#125;</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>得出的表格如图所示：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/table2.png" alt="示例表格2"></p><p>其中，在选项中的<code>lc</code>表示该列的内容的位置，有三个参数：<code>l</code>、<code>c</code>、<code>r</code>，分别是左对齐、居中对齐和右对齐</p><h2 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h2><p>一般而言，表格的位置是浮动的，即是会根据文本内容确定，比如以上两个例子其实表格在文本的靠左位置，因此如果需要定义表格的位置。表格的位置为可选的选项:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;doc&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">\begin&#123;table&#125;[!htbp]</div><div class="line">\centering</div><div class="line">\begin&#123;tabular&#125;&#123;|l|c|c|&#125;</div><div class="line">    \hline</div><div class="line">    功能          &amp;WEB         &amp;APP         \\ \hline</div><div class="line">    注册          &amp;$\surd$     &amp;$\surd$     \\ \hline</div><div class="line">    登录          &amp;$\surd$     &amp;$\surd$     \\ \hline</div><div class="line">    推送          &amp;$\times$    &amp;$\surd$     \\ \hline</div><div class="line">\end&#123;tabular&#125;</div><div class="line">\end&#123;table&#125;</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p><code>\centering</code>表示将表格居中放置，!htbp表示对位置的一种处理：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">!表示无视美学规则，按下面的要求放置；</div><div class="line">然后h t b p分别代表4中放置方式，优先级依次递减</div><div class="line">h=here 放置在代码中这个图片出现的位置，也就是你想让它出现的位置；</div><div class="line">t = top 放在该页顶端；</div><div class="line">b = bottom 放在该页底部；</div><div class="line">p = page 另起一页单独放。</div></pre></td></tr></table></figure><h2 id="表格长度"><a href="#表格长度" class="headerlink" title="表格长度"></a>表格长度</h2><p>在以上表格中，我们发现表格的长度和列的内容长度一致，所以会导致有时候表格长度过短，一般来说需要自定义表格长度的时候我们使用<code>tabular*</code>环境：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;doc&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">\begin&#123;table&#125;[!p]</div><div class="line">\centering</div><div class="line">\begin&#123;tabular*&#125;&#123;0.75\textwidth&#125;&#123;lcc&#125;</div><div class="line">    \toprule</div><div class="line">    功能          &amp;WEB         &amp;APP         \\ </div><div class="line">    \midrule</div><div class="line">    注册          &amp;$\surd$     &amp;$\surd$     \\ </div><div class="line">    登录          &amp;$\surd$     &amp;$\surd$     \\ </div><div class="line">    推送          &amp;$\times$    &amp;$\surd$     \\ </div><div class="line">    \bottomrule</div><div class="line">\end&#123;tabular*&#125;</div><div class="line">\end&#123;table&#125;</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>其中<code>{0.75\textwidth}</code>表示表格总长度，<code>\textwidth</code>表示的是这个文档的文本长度，所以这里表示整个文本长度的四分之三。当然你也可以用cm或者pt等单位表示长度，然后绘制的表格如下图所示：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/table3.png" alt="示例表格3"></p><p>但是有个特别不好的情况，最后一列的宽度太大，占据了剩余的文本长度，我们需要调整每列的长度，代码如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">%!TEX program = xelatex</div><div class="line">\documentclass[12pt,a4paper]&#123;article&#125;</div><div class="line">\usepackage&#123;doc&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">\begin&#123;table&#125;[!p]</div><div class="line">\centering</div><div class="line">\begin&#123;tabular*&#125;&#123;0.75\textwidth&#125;&#123;@&#123;\extracolsep&#123;\fill&#125;&#125;lcc&#125;</div><div class="line">    \toprule</div><div class="line">    功能          &amp;WEB         &amp;APP         \\ </div><div class="line">    \midrule</div><div class="line">    注册          &amp;$\surd$     &amp;$\surd$     \\ </div><div class="line">    登录          &amp;$\surd$     &amp;$\surd$     \\ </div><div class="line">    推送          &amp;$\times$    &amp;$\surd$     \\ </div><div class="line">    \bottomrule</div><div class="line">\end&#123;tabular*&#125;</div><div class="line">\end&#123;table&#125;</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>这样，表格就好看点了。</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/table4.png" alt="示例表格4"></p><p>在前一段代码中，我们增加了<code>{@{\extracolsep{\fill}}</code>，表示了把每列的剩余长度均匀的填充，将整个表格更合理的安排列宽。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>好了，今天就介绍到这里。下一篇我们继续讨论，跨页表格以及合并行、和并列、对角线、表内注释等内容。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-08-03-LaTeX%E4%B8%AD%E7%9A%84%E8%A1%A8%E6%A0%BC%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F%E5%92%8C%E6%8A%80%E5%B7%A71/#disqus_thread</comments>
    </item>
    
    <item>
      <title>今日扯淡</title>
      <link>http://yoursite.com/2017-06-09-%E4%BB%8A%E6%97%A5%E6%89%AF%E6%B7%A1/</link>
      <guid>http://yoursite.com/2017-06-09-%E4%BB%8A%E6%97%A5%E6%89%AF%E6%B7%A1/</guid>
      <pubDate>Fri, 09 Jun 2017 13:12:27 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前传&quot;&gt;&lt;a href=&quot;#前传&quot; class=&quot;headerlink&quot; title=&quot;前传&quot;&gt;&lt;/a&gt;前传&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;最近一直在写曹操的一篇文章，想写的诙谐幽默点所以在使吃奶的劲，奈何技能已经多年不用，所以进度较慢，大家需要静静等待一段时间。想想好久没吐槽了，昨天怼了一个大学同学，也正好吐吐槽。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="前传"><a href="#前传" class="headerlink" title="前传"></a>前传</h2><blockquote><p>最近一直在写曹操的一篇文章，想写的诙谐幽默点所以在使吃奶的劲，奈何技能已经多年不用，所以进度较慢，大家需要静静等待一段时间。想想好久没吐槽了，昨天怼了一个大学同学，也正好吐吐槽。</p></blockquote><a id="more"></a><h2 id="关于怼人"><a href="#关于怼人" class="headerlink" title="关于怼人"></a>关于怼人</h2><p>其实我是一个好人，我已经快二十年没骂过人了，也没说过除了<code>靠、艹、擦、我去</code>之外的脏话了，当然我不否认前面几个字确实有点脏。</p><p>包括今天，我骂人了但我仍然克制住了不说脏话。鲁迅先生说：不在沉默中爆发，就在沉默中灭亡。</p><p>确实，我忍他挺久了。</p><p>我发的朋友圈，他的评论永远是矫情或者装逼，可能是调侃吧，但我过去就算了。</p><p>如果一次两次，我可以视为一种调侃，但一直如此，那就是他嘴贱了。</p><p>而我平生最讨厌的人中就有嘴贱的人。</p><p>而且，我和他的关系并没有好到我可以视他的嘴贱为好基友般的调戏，哦不，调侃。</p><p>不光如此，我也一直对他的为人并不感冒。</p><p>我觉得我骂得还算轻的了，要是拿我当年写作文的风范，我可以用通篇不带脏话的骂得他怀疑人生。</p><p>更搞笑的是他居然还认为他这种嘴贱是理所应当。</p><p>我就不用说当年我用知识帮他忙，然后他反过来在我秀的书架时候评论我装逼了。</p><p>嘿嘿，我就秀了怎么样，咬我？</p><p>反正现在狂犬病疫苗也不贵。</p><p>我这个人其实挺记仇的…</p><p>还有个同学，读硕士的时候写论文然后要我帮忙找数据、建模型、写代码，然后这个同学也在他的评论下跟了句：<code>装的可以</code>。</p><p>嗯，我是个本科生，而且那时毕业快5年了吧…</p><p>所以啊，人的心态啊，奇怪！</p><p>你看，我的好基友和我说话都没正常过，我都觉得挺好，嗯我就是看人下菜的…</p><h2 id="音乐欣赏"><a href="#音乐欣赏" class="headerlink" title="音乐欣赏"></a>音乐欣赏</h2><p>好了，负面情绪发泄了，在写这篇文章的同时录了首歌，来大家请侮辱我吧。男低音版的漂洋过海来看你。</p><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer1"),narrow: false,autoplay: false,showlrc: 0,music: {title: "漂洋过海来看你",author: "allenmagic",url: "http://op0byyd4a.bkt.clouddn.com/%E9%A3%98%E6%B4%8B%E8%BF%87%E6%B5%B7%E6%9D%A5%E7%9C%8B%E4%BD%A0.mp3",pic: "http://7viihf.com1.z0.glb.clouddn.com/face.jpg",}});</script><p>哎，还是站起来好好唱歌了，果然一心不能二用，有好多地方没处理好，连气息都已经控制不住了，失败啊。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>以前吧，我还是个好孩子，看见不顺眼的人我还可以放过，哪怕对我也是那样，我也忍着。</p><p>幸亏抑郁症啊（我特么感谢的居然是一个病），让我明白了，忍那么多干嘛，我又不喜欢你，你也带不来给我生理上和心理上的欢愉，才懒得管你。</p><p>不怼你我怼谁，正好我最近烦着呢。</p><p>我还必须怼了你再拉黑你。</p><p>哦，关于我评论他朋友圈？我没那闲工夫…</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-06-09-%E4%BB%8A%E6%97%A5%E6%89%AF%E6%B7%A1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>说说魏武帝</title>
      <link>http://yoursite.com/2017-06-04-%E8%AF%B4%E8%AF%B4%E9%AD%8F%E6%AD%A6%E5%B8%9D/</link>
      <guid>http://yoursite.com/2017-06-04-%E8%AF%B4%E8%AF%B4%E9%AD%8F%E6%AD%A6%E5%B8%9D/</guid>
      <pubDate>Sun, 04 Jun 2017 09:48:01 GMT</pubDate>
      <description>
      
        
        
          &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;
&amp;#x2014;
title: 说说魏武帝
date: 2017-06-04 17:48:01
tags: [三国, 历史, 曹操, 闲话]
categories: 闲
        
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>&#x2014;title: 说说魏武帝date: 2017-06-04 17:48:01tags: [三国, 历史, 曹操, 闲话]categories: 闲话扯淡&#x2014;</p><p>## 序> 最近推荐父亲看看新三国或者重读《三国演义》，但他寄情于iPad上的斗地主而无视了我的推荐。然后我又兴趣盎然地把新三国再看了一遍，记得早年读史书三国就喜欢曹操，于是就想写篇关于其的文章，今天可以算是实现了。</p><p><!&#x2013; more &#x2013;></p><p>> 历史这个东西，太严肃其实没多少人愿意读，很多年前的事情很多人很多事，读完了很快就忘记了，反而常人异常热心关注一些奇闻怪谈的野史，不然像《鱼羊野史》这类的书籍怎么能如此火呢。所以写相关的文章显然不能太严肃，我词文不佳只能将就写的有趣，如果读起来觉得无聊，默默的骂我两句，我无所谓反正我听不到！</p><p>## 为什么写曹操？</p><p>中国历史，大奸臣的模子都是模式化的，比如骄横跋扈、欺上瞒下、残暴无仁。历史上看曹操在大部分眼里都是被视为奸臣（至少在大耳朵眼里就是国贼，与操势不两立。公瑾也说曹操名为汉相，实为汉贼），比如说曹操无视天子，干预天子的婚姻巴拉巴拉，反正就是一个字`你坏`。正如一千个读者有一千个哈姆雷特一样，作为历史爱好者每个人对曹操有不同的解读，在我看来曹操就是偶像啊，真的没见过历史上有这么有才华的君主（咳咳，君主级别的王霸）。</p><p>曹操的头衔不少，比如政治家、军事家、诗人、书法家（是不是和本朝太祖一样，只是太祖多了革命者和伟大的共产主义导师称号吧）。而且他在这几个领域都做到了绝顶的程度。比如政治家，作为曹魏政权的奠基人为结束末汉分离的局面做出了巨大贡献（尽管最后给司马家做了嫁衣，但操的工作是伟大的）。军事家则是打了一场历史著名的官渡之战，典型的以弱胜强，而且曹操北征匈奴和乌恒，内战内强外战外强的主啊，比之杨广征高句丽未成搭上大隋朝强多了，至于后来隔壁司马家的晋朝反被匈奴而灭，给老祖司马懿脸上啪啪作响啊。</p><p>湿人的话，操不仅文学湿，其本人也湿（据野史透露曹操专爱人妻）。曹操的诗篇很是大气，至少`东临碣石，以观沧海`和`对酒当歌，人生几何`这种词句两千年以来能写出来的也是屈指可数吧，以至于太祖评价：往事越千年，魏武挥鞭，东临碣石有遗篇。其书法也是豪气万丈，配上其职业军人、职业政客以及职业小三的王霸之气简直炯炯生辉。</p><p>说了这么多，为什么写曹操呢，因为那句`天下英雄，唯使君操耳`。</p><p>## 年少轻狂时</p><p>这里说说大汉朝的一些政治问题，其实早在三分天下之前，大汉朝的权力就被三分了，分别是宦官、外戚和士族。大汉朝的做官不是考出来的，而是官僚家族互相吹捧推荐上去的，所以你就会发现四百年前做官的怎么四百年后你家怎么还做官，就是典型的老子英雄儿好汉。地方政权被士族把控，皇帝想要控制国家也就只能依赖最亲近的人就是宦官和外戚了，但宦官和外戚太不争气了，整天为了权力打的你来我去的，乱的一塌糊涂。所以后来有了党锢之祸以及黄巾之乱，就在这个时候魏武帝只点了几个技能点，没兵器没小兵就单独的走出生命之泉开始推塔的辉煌人生了。</p><p>曹操也不算没背景，其父曹嵩是大宦官曹腾的养子，按理说曹操就是典型的宦三代（这个说法不正确，宦官怎么都只能有一代的啊），应该属于宦官集团。但曹操毕竟是曹操，生逢乱世不走寻常路，反而和士族的袁绍等厮混。曹嵩其人吧，放在当朝的前几年绝对是官场老手，他就靠送钱送出来一个太尉，大概就相当于现在的首席军委副主席了（又是杜撰的官衔）。当然，在这种家庭环境下，曹操也在不到20岁就进入仕途，不久就担任了首都公安局北城分局的局长了，20岁的正处级啊。</p><p>和曹嵩的为官之道不一样，少年曹操可是正气凛然，严格执法。在任期间就直接把宦官的亲戚给办了，就是这样我从人群中来，我到人群中去，我是宦官之后我就专找宦官麻烦。这下不得了，当朝敢于和权势熏天的利益集团作斗争的人可很少，这种人才要重用，所以被调过去做顿丘的县令，正式成为了地方要员。</p><p>后来，曹操因为牵连，丢掉了正处级的职位和待遇，被正式革除出公务员集团，回到老家谯县读书，准备二次报考。</p><p>不几年，宦官内部发生了变动，曹操重新被征召，委任为议郞也就是现在的智库工作人员，奈何毕竟年少轻狂，又不懂得变通，固然论文数量不少，但SCI不愿意录入啊，而且几乎无人引用，偶尔吧被CSCI收录两篇。</p><p>## </p><div style="font-size: 14px;padding: 5px;line-height: 20px;border: 1px solid;"><a href="https://github.com/allenmagic" target="_blank" rel="external">Edit Me at Github</a> - <a href="https://allenmagic.github.io/" target="_blank" rel="external">Org Source</a> - Last Updated 2017-06-09 Fri 22:11.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.3.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)</div>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-06-04-%E8%AF%B4%E8%AF%B4%E9%AD%8F%E6%AD%A6%E5%B8%9D/#disqus_thread</comments>
    </item>
    
    <item>
      <title>数据分析系列-R-数据</title>
      <link>http://yoursite.com/2017-05-27-%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97-R-%E6%95%B0%E6%8D%AE/</link>
      <guid>http://yoursite.com/2017-05-27-%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97-R-%E6%95%B0%E6%8D%AE/</guid>
      <pubDate>Sat, 27 May 2017 00:26:25 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;上次做了R的介绍和安装&lt;a href=&quot;http://eggs.pw/2017/04/19/%E5%AD%A6%E4%B9%A0R%E7%B3%BB%E5%88%97-1-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/&quot;&gt;点击这里直达&lt;/a&gt;，主要介绍了在各个不同的系统中怎么安装R软件，还基础的介绍了怎么使用R，今天探讨下R的数据相关的知识。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>上次做了R的介绍和安装<a href="http://eggs.pw/2017/04/19/%E5%AD%A6%E4%B9%A0R%E7%B3%BB%E5%88%97-1-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/" target="_blank" rel="external">点击这里直达</a>，主要介绍了在各个不同的系统中怎么安装R软件，还基础的介绍了怎么使用R，今天探讨下R的数据相关的知识。</p><a id="more"></a><h3 id="R的对象"><a href="#R的对象" class="headerlink" title="R的对象"></a>R的对象</h3><p>R中的所有对象都建立在一组基本的内嵌对象之上的，<strong>对象的类</strong>决定了其在R中的存储方式，同时R的对象也都属于某个类，而R提供了一组面向对象编程的机制。_这段话我也没懂!_</p><h4 id="R的基本对象类型"><a href="#R的基本对象类型" class="headerlink" title="R的基本对象类型"></a>R的基本对象类型</h4><p>R有如下的基本对象类型：</p><ul><li>基本向量</li><li>复合对象</li><li>特殊对象</li><li>R语言（即R代码）</li><li>函数</li><li>内置对象</li><li>字节码对象</li></ul><p>以下简单介绍以下R的常用的对象。</p><h4 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h4><p>向量是R中最基本的对象，也是最常用的存储数据的对象。特别的，向量中的元素都会被转成同样的数据类型，也就是说向量的元素都是同种类的数据。R有多种创建向量的方法，其中最常见的是c函数：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; v &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">&gt; v</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></div></pre></td></tr></table></figure></p><p>另外，我们可以使用操作符<code>:</code>生成向量:<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; <span class="number">1</span>:<span class="number">10</span></div><div class="line"> [<span class="number">1</span>]  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></div></pre></td></tr></table></figure></p><p>另外一个更加灵活的是seq函数方式：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; seq(from=<span class="number">1</span>, to=<span class="number">10</span>, by=<span class="number">2</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></div></pre></td></tr></table></figure></p><p>其中by参数理解为步长，表示生成从1到10步长为2的向量。<code>seq</code>还有其它很多种用法来生成序列，可以使用<code>help(&#39;seq&#39;)</code>来查看帮助文档。</p><h5 id="逻辑向量"><a href="#逻辑向量" class="headerlink" title="逻辑向量"></a>逻辑向量</h5><p>这里特别说明下逻辑向量，R是允许操作逻辑向量的。其中逻辑向量的元素可以被赋予的值有<code>TRUE</code>,<code>FALSE</code>和<code>NA</code>,我们可以试试下面的语句:<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; v</div><div class="line">[<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></div><div class="line">&gt; m &lt;- v &gt; <span class="number">2.5</span></div><div class="line">&gt; m</div><div class="line">[<span class="number">1</span>] <span class="literal">FALSE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span>  <span class="literal">TRUE</span></div><div class="line">&gt; class(m)</div><div class="line">[<span class="number">1</span>] <span class="string">"logical"</span></div></pre></td></tr></table></figure></p><p>其中v是第一个代码创建的向量。而m就是我们通过逻辑运算符$\lt、\leq、\gt、\geq$来判断生成的一个向量。</p><h4 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h4><p>矩阵也是R中常用的对象类型，矩阵可以看成多个带有下标类型的的元素集合，和数学中的矩阵类似，一般我们可以把其中某个元素表示为$a_{ij}$，更通用的可视化的矩阵如下:<br>$$<br>\begin{equation}<br>A_{i \times j} =<br> \begin{bmatrix}<br>   a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{16} \\<br>   a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{26} \\<br>   \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>   a_{i1} &amp; a_{i2} &amp; a_{i3} &amp; \cdots &amp; a_{ij}<br>\end{bmatrix}<br>\end{equation}<br>$$</p><p>在R中生成矩阵的函数为<code>matrix</code>:<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; m &lt;- matrix(c(<span class="number">1</span>:<span class="number">12</span>),c(<span class="number">3</span>,<span class="number">4</span>))</div><div class="line">&gt; m</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">4</span>    <span class="number">7</span>   <span class="number">10</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">2</span>    <span class="number">5</span>    <span class="number">8</span>   <span class="number">11</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">3</span>    <span class="number">6</span>    <span class="number">9</span>   <span class="number">12</span></div></pre></td></tr></table></figure></p><p>可以看到我们用<code>matrix</code>函数将向量<code>c(1:12)</code>构建成了一个$3 \times 4$的矩阵，并且矩阵的填充是按照列填充的，如果我们想按照行填充命令如下：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; m &lt;- matrix(c(<span class="number">1</span>:<span class="number">12</span>),c(<span class="number">3</span>,<span class="number">4</span>),byrow = <span class="literal">TRUE</span>)</div><div class="line">&gt; m</div><div class="line">     [,<span class="number">1</span>] [,<span class="number">2</span>] [,<span class="number">3</span>] [,<span class="number">4</span>]</div><div class="line">[<span class="number">1</span>,]    <span class="number">1</span>    <span class="number">2</span>    <span class="number">3</span>    <span class="number">4</span></div><div class="line">[<span class="number">2</span>,]    <span class="number">5</span>    <span class="number">6</span>    <span class="number">7</span>    <span class="number">8</span></div><div class="line">[<span class="number">3</span>,]    <span class="number">9</span>   <span class="number">10</span>   <span class="number">11</span>   <span class="number">12</span></div></pre></td></tr></table></figure></p><p>我们这里会看到矩阵m的长度是等于$i \times j$的：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; t &lt;- matrix(c(<span class="number">1</span>:<span class="number">1500</span>),c(<span class="number">30</span>,<span class="number">50</span>))</div><div class="line">&gt; length(t)</div><div class="line">[<span class="number">1</span>] <span class="number">1500</span></div></pre></td></tr></table></figure></p><p>所以创建矩阵时要注意矩阵的长度，否则会产生错误。</p><h4 id="因子"><a href="#因子" class="headerlink" title="因子"></a>因子</h4><p>因子为处理分类数据提供了一种非常有效的方法，因子是一个对<code>等长的的其它向量</code>进行分组的向量对象。R同时提供了有序和无序因子。我们先看一个例子：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; t &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>)</div><div class="line">&gt; factor(t)</div><div class="line"> [<span class="number">1</span>] <span class="number">1</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">5</span> <span class="number">2</span> <span class="number">4</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span></div><div class="line">Levels: <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></div></pre></td></tr></table></figure></p><p>首先因子是一个向量，其次因子有个不同的参数就是<code>Levels</code>，这个实际上是向量t中所有的元素去重（unique）后的值，举一个因子的使用：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 假设有若干省的人的提供样本体重数据</span></div><div class="line"><span class="comment"># state表示包含数据的省份</span></div><div class="line">state &lt;- c(<span class="string">"上海"</span>, <span class="string">"山西"</span>, <span class="string">"浙江"</span>, <span class="string">"四川"</span>, <span class="string">"四川"</span>, </div><div class="line">           <span class="string">"广东"</span>, <span class="string">"湖南"</span>, <span class="string">"湖南"</span>, <span class="string">"浙江"</span>, <span class="string">"河南"</span>, </div><div class="line">           <span class="string">"四川"</span>, <span class="string">"河南"</span>, <span class="string">"浙江"</span>, <span class="string">"浙江"</span>, <span class="string">"山西"</span>, </div><div class="line">           <span class="string">"上海"</span>, <span class="string">"山西"</span>, <span class="string">"广东"</span>, <span class="string">"湖南"</span>, <span class="string">"河南"</span>,</div><div class="line">           <span class="string">"浙江"</span>, <span class="string">"四川"</span>, <span class="string">"四川"</span>, <span class="string">"湖南"</span>, <span class="string">"山西"</span>, </div><div class="line">           <span class="string">"江苏"</span>, <span class="string">"四川"</span>, <span class="string">"河南"</span>, <span class="string">"河南"</span>, <span class="string">"江苏"</span>)</div><div class="line"></div><div class="line"><span class="comment"># weight表示对应的省的样本体重数据不含小数</span></div><div class="line">weight &lt;- c(<span class="number">60</span>, <span class="number">49</span>, <span class="number">40</span>, <span class="number">61</span>, <span class="number">64</span>, </div><div class="line">             <span class="number">60</span>, <span class="number">59</span>, <span class="number">54</span>, <span class="number">62</span>, <span class="number">69</span>, </div><div class="line">             <span class="number">70</span>, <span class="number">42</span>, <span class="number">56</span>, <span class="number">61</span>, <span class="number">61</span>, </div><div class="line">             <span class="number">61</span>, <span class="number">58</span>, <span class="number">51</span>, <span class="number">48</span>, <span class="number">65</span>, </div><div class="line">             <span class="number">49</span>, <span class="number">49</span>, <span class="number">41</span>, <span class="number">48</span>, <span class="number">52</span>, </div><div class="line">             <span class="number">46</span>, <span class="number">59</span>, <span class="number">46</span>, <span class="number">58</span>, <span class="number">43</span>)</div><div class="line"></div><div class="line"><span class="comment"># 获取省份的样本的因子水平</span></div><div class="line">fs &lt;- factor(state)</div><div class="line"></div><div class="line"><span class="comment"># 计算每个省份样本的平均体重</span></div><div class="line">average_weight &lt;- tapply(weight, fs, mean)</div></pre></td></tr></table></figure></p><p>计算的结果如下：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; average_weight</div><div class="line">    广东     河南     湖南     江苏     山西     上海     四川     浙江 </div><div class="line"><span class="number">55.50000</span> <span class="number">56.00000</span> <span class="number">52.25000</span> <span class="number">44.50000</span> <span class="number">55.00000</span> <span class="number">60.50000</span> <span class="number">57.33333</span> <span class="number">53.60000</span></div></pre></td></tr></table></figure></p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>列表是一种泛化的向量（没错它又是向量的变种），但它和向量不同就是列表不要求元素都是同一类型，列表也是有序集合构成的对象，它包含的对象我们又可以成为分量:<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">Lst &lt;- list(name=<span class="string">"阿三"</span>, wife=<span class="string">"查无此人"</span>, </div><div class="line">            no.children=<span class="number">3</span>, child.ages=c(<span class="number">4</span>,<span class="number">7</span>,<span class="number">9</span>))</div><div class="line"></div><div class="line"><span class="comment"># 没搞懂老婆都查无此人了怎么还有孩子？手动大笑</span></div></pre></td></tr></table></figure></p><p>其中，列表的分量是可以包含不同的模式或者类型，如一个列表可以包括数值向量、逻辑向量、矩阵、复向量、函数、······，简直是来者不拒。而且分量会被编号，所以可以通过编号来访问分量：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 比如想访问阿三可以这样</span></div><div class="line">&gt; Lst[[<span class="number">1</span>]]</div><div class="line">[<span class="number">1</span>] <span class="string">"阿三"</span></div><div class="line"></div><div class="line"><span class="comment"># 也可以这样</span></div><div class="line">&gt; Lst$name</div><div class="line">[<span class="number">1</span>] <span class="string">"阿三"</span></div><div class="line"></div><div class="line"><span class="comment"># 如果想知道阿三第二个孩子的年龄我们可以这样</span></div><div class="line">&gt; Lst[[<span class="number">4</span>]][<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="number">7</span></div><div class="line"></div><div class="line"><span class="comment"># 还可以这样</span></div><div class="line">&gt; Lst$child.ages[<span class="number">2</span>]</div><div class="line">[<span class="number">1</span>] <span class="number">7</span></div><div class="line"></div><div class="line"><span class="comment"># 再来一个彩蛋:定义一个函数，输入阿三的第几个孩子返回一段话</span></div><div class="line">f &lt;- <span class="keyword">function</span>(i)  paste(<span class="string">"我有个朋友叫"</span>,Lst$name,<span class="string">",他的老婆"</span>,Lst$wife,<span class="string">",但是他居然有"</span>,Lst$no.children,<span class="string">"个孩子,而且第"</span>,i,<span class="string">"个孩子"</span>,<span class="keyword">if</span> (Lst$child.ages[i] &gt;= <span class="number">15</span>) <span class="string">"不仅可以读书还可以喝酒了"</span> <span class="keyword">else</span> <span class="keyword">if</span>(Lst$child.ages[i] &lt; <span class="number">15</span> &amp;&amp; Lst$child.ages[i] &gt;= <span class="number">6</span>) <span class="string">"正在苦逼的读书吧"</span> <span class="keyword">else</span> <span class="string">"或许能在幼儿园找个女朋友?"</span> </div><div class="line">                        ,sep=<span class="string">""</span>)</div><div class="line"></div><div class="line"><span class="comment"># 运行结果</span></div><div class="line">&gt; f(<span class="number">1</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"我有个朋友叫阿三,他的老婆查无此人,但是他居然有3个孩子,而且第1个孩子或许能在幼儿园找个女朋友?"</span></div><div class="line">&gt; f(<span class="number">2</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"我有个朋友叫阿三,他的老婆查无此人,但是他居然有3个孩子,而且第2个孩子正在苦逼的读书吧"</span></div><div class="line">&gt; f(<span class="number">3</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"我有个朋友叫阿三,他的老婆查无此人,但是他居然有3个孩子,而且第3个孩子不仅可以读书还可以喝酒了"</span></div><div class="line"></div><div class="line"><span class="comment"># 我到底在玩什么啊！！！！！</span></div></pre></td></tr></table></figure></p><h4 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h4><p>数据框也是R常用的数据对象，数据框是和矩阵类似的一种结构，在数据框中，不同的列是可以为不同的对象。一般可以使用<code>data.frame</code>函数来创建数据框对象：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="comment"># 我们沿用因子中的数据即省份的体重样本数据来构建数据框</span></div><div class="line">&gt; weight_by_state &lt;- data.frame(<span class="string">'省份'</span>=state,<span class="string">'体重'</span>=weight)</div></pre></td></tr></table></figure></p><p>如果有符合数据框限制的列表可以直接使用<code>as.data.frame()</code>函数转换为数据框，从外部环境读取数据使用<code>read.table()</code>和<code>read.csv</code>均可以创建数据框。</p><p>一般数据框有如下的限制条件：</p><ul><li>分量必须是向量（数值、字符、逻辑），因子，数值矩阵，列表或其它数据框</li><li>矩阵，列表和数据框为新的数据框提供了尽可能多的变量，因为它们各自拥有列，元素或者变量</li><li>数值向量，逻辑值，因子保持原有格式，而字符向量会被强制转换成因子</li><li>在数据框中以变量形式出现的向量结构必须长度一致，矩阵结构必须有一样的行数</li></ul><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>最后一个介绍的是数组（其余的类型用的较少就不再介绍），数组是数组可以看作是带有多个下标类型相同的元素集合:<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; z &lt;- <span class="number">1</span>:<span class="number">1500</span></div><div class="line">&gt; dim(z) &lt;- c(<span class="number">3</span>,<span class="number">5</span>,<span class="number">100</span>)</div></pre></td></tr></table></figure></p><p>通过对dim属性的赋值（赋值的是维度向量），这样就将向量z成为了一个$3 \times 5 \times 100$的数组。所以z的1500个元素，元素的下标可以从1一直标记到对应元素的值。</p><p>除了<code>dim()</code>函数创建数组，更通用的可以使用<code>array()</code>函数创建数组：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; s &lt;- array(<span class="number">1</span>:<span class="number">1500</span>,c(<span class="number">3</span>,<span class="number">5</span>,<span class="number">100</span>))</div><div class="line">&gt; class(s)</div><div class="line">[<span class="number">1</span>] <span class="string">"array"</span></div></pre></td></tr></table></figure></p><h3 id="对象的模式和属性"><a href="#对象的模式和属性" class="headerlink" title="对象的模式和属性"></a>对象的模式和属性</h3><p>对象的模式<code>mode</code>是指是该对象基本要素的类型，这是专门用来描述一个对 象<code>特征</code>的术语。另外还有一个所有对象都有的特征是长度<code>length</code>，如果你想知道一个对象更详细的特征可以使用<code>attributes</code>函数来获取：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; attributes(s)</div><div class="line">$dim</div><div class="line">[<span class="number">1</span>]   <span class="number">3</span>   <span class="number">5</span> <span class="number">100</span></div></pre></td></tr></table></figure></p><p>我们把模式和长度称为对象的内在属性。而且对象的模式和长度属性是可以改变的。</p><p>今天在坐火车，就写到这里吧，后面会有继续的内容。<strong>结束</strong></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-05-27-%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97-R-%E6%95%B0%E6%8D%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用hexo+github搭建静态blog</title>
      <link>http://yoursite.com/2017-05-25-%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81blog/</link>
      <guid>http://yoursite.com/2017-05-25-%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81blog/</guid>
      <pubDate>Thu, 25 May 2017 11:40:05 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;过去几年，我曾经用多种方式写作。自从大学毕业，基本不再使用人人网（过去的时候叫校内网），后来新浪云发布，在网上找到了一个基于python的博客系统，随便改了改就发到新浪云上了，还给专门搞了一个一级域名(www.zyx1986.pw，现在已经不能用了）。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>过去几年，我曾经用多种方式写作。自从大学毕业，基本不再使用人人网（过去的时候叫校内网），后来新浪云发布，在网上找到了一个基于python的博客系统，随便改了改就发到新浪云上了，还给专门搞了一个一级域名(www.zyx1986.pw，现在已经不能用了）。</p><a id="more"></a><p>再后来，微信公众号开始流行，我也赶了个时髦开了公众号。微信公众号对文本、图片支持的还可以，但对于代码、公式的支持几乎没有，所以在微信公众号的文章大部分是随笔或者鸡汤，没什么营养。</p><p>最近开始整理之前的学习笔记，刚开始在简书上发文，刚写了两篇还可以，毕竟简书支持Markdown格式的文章，对代码高亮的支持也不错，但我想写的文章如果有数学公式就尴尬了，很繁琐而且效果不好，所以就想自己搭建一个blog。</p><p>搜索了下，hexo+github成了我的选择。</p><h3 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么"></a>Hexo是什么</h3><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>是基于node.js的轻量化的博客框架，安装和使用都非常简单，很快就可以上手。并且Hexo支持自定义主题和Markdown格式的文件，极速渲染页面，非常适合经常写文档的朋友。</p><p>Hexo有很多插件支持更多更丰富的功能，因此能够支持丰富的文档特性，比如代码高亮、公式等，因此也很适合撰写科技和技术文章。</p><h3 id="为什么是Hexo"><a href="#为什么是Hexo" class="headerlink" title="为什么是Hexo"></a>为什么是Hexo</h3><p>Hexo最大的优点就是遵循了KISS<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>原则，其具有以下特点</p><ol><li>基于node.js安装简单</li><li>支持Markdown格式为源文件</li><li>支持MathJax渲染LaTeX的公式（大爱这一点）</li><li>支持代码高亮</li><li>配置简单可以定制主题</li><li>生成的是静态页面可以利用    GitHub的Pages功能    </li></ol><p>以上就足够了。</p><h3 id="声明及准备"><a href="#声明及准备" class="headerlink" title="声明及准备"></a>声明及准备</h3><blockquote><p>本文的安装是基于MacOS</p></blockquote><p>安装准备：</p><blockquote><ol><li>github账号</li><li>homebrew</li><li>node.js</li><li>npm</li><li>hexo</li></ol></blockquote><p>由于node.js自带npm，所以只需要安装node.js即可。</p><h3 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h3><h4 id="获取github"><a href="#获取github" class="headerlink" title="获取github"></a>获取github</h4><p>因为是基于GitHub搭建静态blog站点，所以需要先获取GitHub的账号和建立相应的repository。如果你没有GitHub的账号，点击<a href="https://github.com/join?source=header-home" target="_blank" rel="external">这里</a>注册。</p><p>注册完获取到账号后，你可以创建一个repository：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/github_new_repo.png" alt="创建新的repository"></p><p>创建的repo的名称为：<code>yourid.github.io</code></p><h4 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h4><p>因为Hexo是基于node.js，所以要先安装node.js。在这里提供两种方式安装：</p><h5 id="通过Homebrew安装"><a href="#通过Homebrew安装" class="headerlink" title="通过Homebrew安装"></a>通过Homebrew安装</h5><p>强烈建议Mac用户安装<a href="https://brew.sh/index_zh-cn.html" target="_blank" rel="external">Homebrew</a>，通过Homebrew来管理Mac的软件，Homebrew在安装和删除软件上特别方便。</p><ol><li><p>首先安装Homebrew，在终端输入:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure></li><li><p>安装完Homebrew，可以安装node.js：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">brew install node.js</div></pre></td></tr></table></figure></li><li><p>安装完成后查看：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">node -v</div><div class="line">npm -v</div></pre></td></tr></table></figure></li></ol><p>以上就完成了node.js和npm的安装。</p><h5 id="离线方式安装"><a href="#离线方式安装" class="headerlink" title="离线方式安装"></a>离线方式安装</h5><p>除Homebrew安装外，可以离线下载安装包安装，点击<a href="https://nodejs.org/en/" target="_blank" rel="external">这里</a>在官网下载pkg安装包后，一路点击安装。</p><h4 id="休息下听首歌"><a href="#休息下听首歌" class="headerlink" title="休息下听首歌"></a>休息下听首歌</h4><p>听听我录得歌，不自动播放了，各位请欣赏，哈哈！</p><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: false,showlrc: 0,music: {title: "一生爱你千百回",author: "allenmagic",url: "http://op0byyd4a.bkt.clouddn.com/%E4%B8%80%E7%94%9F%E7%88%B1%E4%BD%A0%E5%8D%83%E7%99%BE%E5%9B%9E.mp3",pic: "http://7viihf.com1.z0.glb.clouddn.com/face.jpg",}});</script><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><p>安装hexo的命令很简单，在终端输入:<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure></p><p>安装完成后可以输入命令查看：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo -v</div></pre></td></tr></table></figure></p><h4 id="建立本地站点"><a href="#建立本地站点" class="headerlink" title="建立本地站点"></a>建立本地站点</h4><p>安装完hexo后，需要在本地建立站点并初始化站点:<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">mkdir blog</div><div class="line">cd blog</div><div class="line">hexo init</div></pre></td></tr></table></figure></p><p>这样一个本地站点就完全建立了，你也可以用一个命令完成以上操作:<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo init blog</div></pre></td></tr></table></figure></p><p>安装完成后的目录结构为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">├── _config.yml</div><div class="line">├── node_modules</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── source</div><div class="line">└── themes</div><div class="line"></div><div class="line">4 directories, 2 files</div></pre></td></tr></table></figure></p><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>在blog目录内依次运行以下命令:<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g</div><div class="line">hexo s</div></pre></td></tr></table></figure></p><p>如果正常则会显示：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p><p>按住CMD键同时点击<code>http://localhost:4000/</code>就可以在浏览器访问本地站点啦.</p><p><em>完结</em></p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">Keep it simple, stupid!</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-05-25-%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81blog/#disqus_thread</comments>
    </item>
    
    <item>
      <title>一个关于风险评测计算的问题</title>
      <link>http://yoursite.com/2017-05-23-%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E9%A3%8E%E9%99%A9%E8%AF%84%E6%B5%8B%E8%AE%A1%E7%AE%97%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <guid>http://yoursite.com/2017-05-23-%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E9%A3%8E%E9%99%A9%E8%AF%84%E6%B5%8B%E8%AE%A1%E7%AE%97%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Tue, 23 May 2017 01:14:33 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;近几天，在做一个工作相关的内容，就是对企业投资者进行风险评测。我设计了若干个问题，并根据投资者的选项用于评分，但需要提前计算多少种选项的可能性，并计算分数的分布。并根据分数确定相应的分数区间对应的风险等级。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>近几天，在做一个工作相关的内容，就是对企业投资者进行风险评测。我设计了若干个问题，并根据投资者的选项用于评分，但需要提前计算多少种选项的可能性，并计算分数的分布。并根据分数确定相应的分数区间对应的风险等级。</p><a id="more"></a><p>这听上去是个简单的问题，但实际上计算起来颇为复杂，想了不少办法才实现。这里也记录下来，并写成分享的文章可以让大家看一下，说不定可以借鉴。</p><p>本次计算主要是使用Python和R。</p><p>由于代码比较简单，就不用同步到Github，所有代码在文章里都能获取到。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>其实这次的问题很简单:</p><ol><li>有6个风险评测的问题</li><li>每个问题有A、B、C三个选项</li><li>每个问题的分值比重不一样</li><li>每个选项的分数不一样</li><li>需要根据投资者的选择答案计算其最终得分</li><li>根据其得分给出风险等级</li></ol><p>但我们要根据所有可能的选择结果确定分数范围，并根据分数范围确定其对应的风险等级。所以问题的计算逻辑就如下了：</p><ol><li>获取所有的选择答案的组合结果</li><li>根据组合计算每一个结果的分数</li><li>根据所有分数确定分数区间和风险等级的对应关系</li><li>计算投资者的分数</li><li>确定投资者的风险等级</li></ol><h3 id="获取所有组合"><a href="#获取所有组合" class="headerlink" title="获取所有组合"></a>获取所有组合</h3><p>我们假设有A、B、C三个选项，对应的分数分别为[25,50,75]:<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[A, B, C] = [25, 50, 75]</div></pre></td></tr></table></figure></p><p>总共有6道题，每道题有三个选项，所以答案的组合总共有$3^6=729$个，那么分数的可能性就有729个（实际上应该小于729，因为有不同答案但相同分数）。</p><p>我们不需要获取ABC的答案组合，只需要获得分数[25, 50, 75]的组合即可，所以我思考了不超过10s，就放弃了使用Excel，因为这么多年早忘了当初那丁点的VBA知识了，而这个要用Excel计算的话必须使用VBA，所以果断放弃。</p><p>那么再思考下要怎么计算，我们知道有6个答案，每个答案的分数是[25, 50, 75]中的一个，然后组成一个组合。所以其答案可能是:</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[A, A, B, B, C, A] = [25, 25, 50, 50, 75, 25]</div></pre></td></tr></table></figure><p>这样的组合总共有729个，所以要获取所有可能的结果，那么可以使用Python的itertools包中的product就是笛卡尔积来计算所有的可能组合：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> itertools</div><div class="line"></div><div class="line">s = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product([<span class="number">25</span>,<span class="number">50</span>,<span class="number">75</span>], repeat =<span class="number">6</span> ):</div><div class="line">s.extend([i])</div></pre></td></tr></table></figure><p>s就是所有的答案分数的组合可能，我们查看下组合的数量：<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">print(len(s))</div><div class="line"><span class="number">729</span></div><div class="line">[Finished <span class="keyword">in</span> <span class="number">0.1</span>s]</div></pre></td></tr></table></figure></p><h3 id="如何计算？"><a href="#如何计算？" class="headerlink" title="如何计算？"></a>如何计算？</h3><p>我们已经知道了，每个答案组合有对应的分数，以上面的组合为例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[A, A, B, B, C, A] = [25, 25, 50, 50, 75, 25]</div></pre></td></tr></table></figure><p>计算其分值为：250(随机的分数都能是这个值我服了)。</p><p>但我们不能这样简单的计算分值，因为每个问题的分值权重是不一样的，每个问题的重要程度是不一样的，我们预先定义每个问题权重为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[1, 2, 3, 4, 5, 6] = [20%, 20%, 20%, 20%, 10%, 10%]</div></pre></td></tr></table></figure><p>所以每个投资者的分数计算公式为：</p><p>$$Score = \sum_{i}^{n=6}score_i \times W_i$$</p><p>$score_{i}$即是答案的分值组合，$W_i$为每个答案分值的权重,重新计算的分数结果就是40分。</p><p>如果答案组合只有一两个，那么这样计算也就罢了，但我们有729个组合，不可能每个计算出来，至少我们的组合的获取就是要通过工具得出来。怎么计算所有729个组合分数呢，而且当选项扩展至4个甚至5个，问题扩展至数十个，那么答案组合就更多了，怎么办呢？</p><h3 id="复习下矩阵计算"><a href="#复习下矩阵计算" class="headerlink" title="复习下矩阵计算"></a>复习下矩阵计算</h3><p>在6个问题3个答案的情况有729个组合，每个组合是有6个分数组成，每个分数有对应的权重，我们想到这样一个公式，$A_{m \times n}$ $\times$ $B_{n \times k}$ = $C_{m \times k}$:</p><p>$$<br>\begin{equation}<br>\begin{bmatrix}<br>   1 &amp; 2 \\<br>   3 &amp; 4<br>\end{bmatrix}<br>\times<br>\begin{bmatrix}<br>   1 \\<br>   2<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>   5 \\<br>   11<br>\end{bmatrix}<br>\end{equation}<br>$$</p><p>这是线性代数中所学习的矩阵乘法，那么我们就可以认为，729个组合每个组合为6个分数，所以可以看成一个$729 \times 6$的矩阵$A_{729 \times 6}$，那么权重则是一个$6 \times 1$的矩阵$B_{6 \times 1}$，所有两个矩阵相乘则生成一个矩阵$C_{729 \times 1}$。</p><p>那么计算的整个公式就是：</p><p>$$<br>\begin{equation}<br>\begin{bmatrix}<br>   a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{16} \\<br>   a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{26} \\<br>   \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>   a_{i1} &amp; a_{i2} &amp; a_{i3} &amp; \cdots &amp; a_{ij}<br>\end{bmatrix}<br>\times<br>\begin{bmatrix}<br>b_{11} \\<br>b_{21} \\<br>\vdots \\<br>b_{61}<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>c_{11} \\<br>c_{21} \\<br>\vdots \\<br>c_{i1}<br>\end{bmatrix}<br>\end{equation}<br>$$<br>特别的，$(i, j) = (729, 6)$。</p><h3 id="Python计算逻辑和代码"><a href="#Python计算逻辑和代码" class="headerlink" title="Python计算逻辑和代码"></a>Python计算逻辑和代码</h3><p>我们考虑整个计算的顺序和逻辑如下：</p><ol><li>获取所有分数组合</li><li>将分数组合生成为矩阵</li><li>构建权重的矩阵</li><li>分别两个矩阵相乘</li><li>得到所有分数</li><li>用R做分数的图形分布</li><li>根据分布确定不同风险等级的分位数</li></ol><p>我们考虑每一个步骤的代码：</p><ol><li>获取所有分数组合</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> itertools</div><div class="line"></div><div class="line">s = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product([<span class="number">25</span>,<span class="number">50</span>,<span class="number">75</span>], repeat =<span class="number">6</span> ):</div><div class="line">s.extend([i])</div></pre></td></tr></table></figure><ol><li>将分数组合生成矩阵</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">sm = np.mat(s)</div></pre></td></tr></table></figure><ol><li>构建权重的矩阵</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">w = np.mat([<span class="number">0.2</span>,<span class="number">0.2</span>,<span class="number">0.2</span>,<span class="number">0.2</span>,<span class="number">0.1</span>,<span class="number">0.1</span>])</div></pre></td></tr></table></figure><ol><li>矩阵相乘</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">score = np.matrix.tolist(sm*w.T)  % w.T指将矩阵转置为列矩阵</div></pre></td></tr></table></figure><p>这段代码使用了np.matrix.tolist将计算后得到的矩阵直接转换为list列表，后面的第6步和第7步考虑在Python中调用R来实现。</p><h3 id="Python调用R分析数据"><a href="#Python调用R分析数据" class="headerlink" title="Python调用R分析数据"></a>Python调用R分析数据</h3><h4 id="数据的预处理"><a href="#数据的预处理" class="headerlink" title="数据的预处理"></a>数据的预处理</h4><p>首先，需要使用python生成csv文件以供R使用，当然也可以在R中使用rpy2包调用R来分析。</p><ol><li>使用python生成csv文件：</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">writer = csv.writer(file(<span class="string">"score.csv"</span>,<span class="string">'wb'</span>))</div><div class="line">writer.writerow([<span class="string">'Value'</span>])</div><div class="line"></div><div class="line"><span class="keyword">for</span> s <span class="keyword">in</span> score:</div><div class="line">writer.writerow(s)</div></pre></td></tr></table></figure><ol><li>在R中导入数据：</li></ol><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">rm(list = ls())</div><div class="line">setwd(<span class="string">"/Users/eggs/Library/Mobile Documents/com~apple~CloudDocs/文档/document"</span>)</div><div class="line">score &lt;- read.csv(<span class="string">"score.csv"</span>,header = <span class="literal">TRUE</span>)</div></pre></td></tr></table></figure><h4 id="怎样分析数据？"><a href="#怎样分析数据？" class="headerlink" title="怎样分析数据？"></a>怎样分析数据？</h4><p>其实分析的思路挺简单，总共有729个总体值，但实际上计算出来的Score值只有21个，所以我们要考虑每个Score值占总体组合的概率。一般我们考虑CDF（cumulative distribution function）就是累积分布函数：</p><p>$$<br>F(X) = F(x \leq X) =<br>\begin{cases}<br>\sum_{i=1}^{x \leq X}P_{x=i}， &amp; \text{x是离散的}  \\[3ex]<br>\int_{-\infty}^{X} f(x)\,dx， &amp; \text{x是连续的}<br>\end{cases}<br>$$</p><p>所以我们可以在R中画出Score的累积分布函数图。</p><h4 id="画累积分布函数图"><a href="#画累积分布函数图" class="headerlink" title="画累积分布函数图"></a>画累积分布函数图</h4><ol><li>画出累积分布图</li></ol><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">par(family=<span class="string">'MicrosoftYaHei'</span>)</div><div class="line">plot(ecdf(score$Value), do.points=<span class="literal">FALSE</span>, verticals=<span class="literal">TRUE</span>, main = <span class="string">'CDF of score'</span>, xlab = <span class="string">'score'</span>, ylab = <span class="string">'CDF'</span> )</div></pre></td></tr></table></figure><p>画出来的图如下：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/cdfofscore.png" alt="测试分数的累计分布图"></p><ol><li>用分位数工具取数</li></ol><p>我们假设取[20%, 80%]分位数的值：</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">y &lt;- quantile(score$Value,c(<span class="number">0.2</span>,<span class="number">0.8</span>))</div><div class="line"></div><div class="line"> <span class="number">20</span>%  <span class="number">80</span>% </div><div class="line"><span class="number">42.5</span> <span class="number">57.5</span></div></pre></td></tr></table></figure><p>那么，我们可以认为：</p><blockquote><p>分数在[0,25)之间的为谨慎型，当然这一类别是理论值，不会通过问卷计算出来<br>分数在[25,42.5]之间的为保守型，占20%比例<br>分数在(42.5,57.5]之间的为谨慎型，占60%比例<br>分数在(57.5,75]之间的为积极型，占20%比例</p></blockquote><h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>在这里简单的做了一个关于风险评测的计算介绍，由于最近比较忙，所以内容写的也不怎么严谨。简单说就是思路清奇，排版华丽（你知道我说的是反话）。而且最近也没写什么，所以只是恰好碰到问题就随便写了篇，姑且看着吧。</p><p>python代码如下：<br><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">__author__ = <span class="string">"Eggs"</span></div><div class="line"><span class="comment"># coding: utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> itertools</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"></div><div class="line">s = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product([<span class="number">25</span>,<span class="number">50</span>,<span class="number">75</span>], repeat = <span class="number">6</span> ):</div><div class="line">  s.extend([i])</div><div class="line"></div><div class="line">sm = np.mat(s)</div><div class="line">w = np.mat([<span class="number">0.2</span>,<span class="number">0.2</span>,<span class="number">0.2</span>,<span class="number">0.2</span>,<span class="number">0.1</span>,<span class="number">0.1</span>])</div><div class="line"></div><div class="line">score = np.matrix.tolist(sm*w.T)</div><div class="line"></div><div class="line">writer = csv.writer(file(<span class="string">"score.csv"</span>,<span class="string">'wb'</span>))</div><div class="line">writer.writerow([<span class="string">'Value'</span>])</div><div class="line"></div><div class="line"><span class="keyword">for</span> s <span class="keyword">in</span> score:</div><div class="line">  writer.writerow(s)</div></pre></td></tr></table></figure></p><p>R的代码如下：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">rm(list = ls())</div><div class="line">setwd(<span class="string">"/Users/eggs/Library/Mobile Documents/com~apple~CloudDocs/文档/document"</span>)</div><div class="line">score &lt;- read.csv(<span class="string">"score.csv"</span>,header = <span class="literal">TRUE</span>)</div><div class="line">a &lt;- unique(score$Value)</div><div class="line"></div><div class="line">par(family=<span class="string">'MicrosoftYaHei'</span>)</div><div class="line">plot(ecdf(score$Value), do.points=<span class="literal">FALSE</span>, verticals=<span class="literal">TRUE</span>, main = <span class="string">'CDF of score'</span>, xlab = <span class="string">'score'</span>, ylab = <span class="string">'CDF'</span> )</div><div class="line">y &lt;- quantile(score$Value,c(<span class="number">0.2</span>,<span class="number">0.8</span>))</div><div class="line"></div><div class="line">length(score$Value)</div><div class="line">length(a)</div><div class="line">y</div></pre></td></tr></table></figure></p><p>运行的结果如下：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; length(score$Value)</div><div class="line">[<span class="number">1</span>] <span class="number">729</span></div><div class="line">&gt; length(a)</div><div class="line">[<span class="number">1</span>] <span class="number">21</span></div><div class="line">&gt; y</div><div class="line"> <span class="number">20</span>%  <span class="number">80</span>% </div><div class="line"><span class="number">42.5</span> <span class="number">57.5</span></div></pre></td></tr></table></figure></p><p>一个测试：如果我们把题目答案扩展到4个，题目增加为10个，计算的结果如下：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; length(score$Value)</div><div class="line">[<span class="number">1</span>] <span class="number">1048576</span></div><div class="line">&gt; length(a)</div><div class="line">[<span class="number">1</span>] <span class="number">119</span></div><div class="line">&gt; y</div><div class="line"> <span class="number">20</span>%  <span class="number">80</span>% </div><div class="line"><span class="number">43.5</span> <span class="number">56.5</span></div></pre></td></tr></table></figure></p><p>可见总共的样本超过了100万，我们可以用图形观察如下：</p><p>CDF图形：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/uscore.png" alt="CDF"></p><p>概率密度图形：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/density.png" alt="Denstiy"></p><p>可见样本越多，图形越平滑，而且其分布越接近正态分布（极限中心定理）</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-05-23-%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E9%A3%8E%E9%99%A9%E8%AF%84%E6%B5%8B%E8%AE%A1%E7%AE%97%E7%9A%84%E9%97%AE%E9%A2%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>数据分析系列-R-初探-介绍和安装</title>
      <link>http://yoursite.com/2017-04-19-%E5%AD%A6%E4%B9%A0R%E7%B3%BB%E5%88%97-1-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/</link>
      <guid>http://yoursite.com/2017-04-19-%E5%AD%A6%E4%B9%A0R%E7%B3%BB%E5%88%97-1-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/</guid>
      <pubDate>Wed, 19 Apr 2017 05:19:19 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;导言&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;上次说要把以前的笔记整理成文档，首先想要完成的就是R相关的学习笔记。所以近期准备写数据分析系列的文章，先从R开始，后续再介绍Python或者Excel。本文介绍R相关的基本知识和安装。因为这些是比较基础的内容，我并没有相关的学习笔记，所以临时撰写了一篇。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h3><blockquote><p>上次说要把以前的笔记整理成文档，首先想要完成的就是R相关的学习笔记。所以近期准备写数据分析系列的文章，先从R开始，后续再介绍Python或者Excel。本文介绍R相关的基本知识和安装。因为这些是比较基础的内容，我并没有相关的学习笔记，所以临时撰写了一篇。</p></blockquote><a id="more"></a><h3 id="为什么是R"><a href="#为什么是R" class="headerlink" title="为什么是R"></a>为什么是R</h3><p>我的职业之路是从数据分析开始的，但我是从大学开始学习R的，虽然是断断续续的学习，至少也算入了门。后来在工作中也时不时的用到，R具有一系列的特点就决定了它是个优秀的软件（或者编程语言），所以我希望能够介绍一下它。</p><h3 id="R是什么"><a href="#R是什么" class="headerlink" title="R是什么"></a>R是什么</h3><p>R一般有两种解释：R编程语言和R程序。R语言是由奥克兰大学的Ross Ihaka和Robert Gentleman在20世纪90年代初开发。是一个<a href="https://www.gnu.org/" target="_blank" rel="external">GNU项目</a><sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>,所以R是一个自由开源软件。</p><p>R是一种数据分析工具，意味着你可以像使用Excel那样使用它。不过，它和Excel不同的是，Excel在数据可视的情况下进行处理。R会用不同的对象和数据类型包装原数据，然后操作对象，并不显得直观。但处理数据的效率和大数据的支持，远比Excel优秀。</p><p>R也是一种编程语言，支持面向对象和函数式编程，所以你可以使用R编写数据处理和分析的程序，将数据分析工作做的更轻松。</p><p>和R类似的软件有Matlab,SAS,S-plus,S,SPSS等等，但R是<strong>免费</strong>的…</p><h3 id="安装R"><a href="#安装R" class="headerlink" title="安装R"></a>安装R</h3><p>R是开源软件，你可以自由的获取到安装包，而且R是免费的，其官方网站为：</p><p><a href="https://www.r-project.org/" target="_blank" rel="external">R官方网站</a></p><p>其下载地址为：<br><a href="https://mirrors.tuna.tsinghua.edu.cn/CRAN/" target="_blank" rel="external">Mac版下载地址</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/CRAN/" target="_blank" rel="external">Windows版下载地址</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/CRAN/" target="_blank" rel="external">Linux下载地址</a></p><p>建议Linux用户使用包管理软件下载，Ubuntu和Debian用户在终端输入：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo apt-get install r-project</div></pre></td></tr></table></figure><p>Fedora和Redhat用户在终端输入：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo yum install r-project</div></pre></td></tr></table></figure></p><p>Arch Linux用户在终端输入：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">sudo pacman -S r-project</div></pre></td></tr></table></figure></p><h3 id="启动R"><a href="#启动R" class="headerlink" title="启动R"></a>启动R</h3><p>我们可以在命令行中运行R，比如在Linux或者Mac的终端中输入：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">R</div></pre></td></tr></table></figure></p><p>结果就如图所示：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/R_cli.png" alt="R运行图示"></p><h3 id="寻找合适的IDE"><a href="#寻找合适的IDE" class="headerlink" title="寻找合适的IDE"></a>寻找合适的IDE</h3><p>R安装后默认装了R console，你可以运行R console使用R，但这个IDE很简单，用起来并不会那么顺手。<br><img src="http://7viihf.com1.z0.glb.clouddn.com/Rconsole.png" alt="R console启动后界面"></p><p>所以我们需要找到适合自己的IDE或者其它环境，强烈建议用户使用<a href="https://www.rstudio.com/" target="_blank" rel="external">RStudio</a>,RStudio支持Windows、Mac和Linux系统，其下载地址如下：<br><a href="https://www.rstudio.com/products/rstudio/download/" target="_blank" rel="external">RStudio下载地址</a></p><p>Linux用户应该可以使用包管理软件安装，Windows用户还可以在R环境中使用如下命令安装：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">install.packages(&quot;installr&quot;)   # 下载安装installr包</div><div class="line">library(installr)              # 装在installr包</div><div class="line">install.RStudio()              # 下载并安装RStudio IDE</div></pre></td></tr></table></figure></p><p>RStudid的默认界面如下：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/RStudio.png" alt="RStudio启动界面"></p><p>如果你是Emacs<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>用户，你还可以使用Emac+ESS的环境来编辑R程序，另外Sublime Text也有集成的环境。</p><h3 id="初探R"><a href="#初探R" class="headerlink" title="初探R"></a>初探R</h3><blockquote><p>说明：本例所有代码在RStudio中编辑和运行</p></blockquote><p>R一般是通过命令或者程序脚本来操作数据对象，所以它的使用方法和Excel不同。这里简单介绍一下：</p><p><strong>计算数据长度</strong><br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; n &lt;- c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)       <span class="comment"># 创建一个向量并命名为n</span></div><div class="line">&gt; length(n)             <span class="comment"># 获取向量的长度</span></div><div class="line">[<span class="number">1</span>] <span class="number">4</span>                   <span class="comment"># 向量的长度为4</span></div></pre></td></tr></table></figure></p><p>这个方式和Excel有很大的不同，Excel需要在表格中输入数据，然后用公式求解。</p><p>我们又分别计算这个向量的平均值、中值以及标准差，R的代码如下：<br><figure class="highlight r"><table><tr><td class="code"><pre><div class="line">&gt; mean(n)               <span class="comment"># 计算向量n的均值</span></div><div class="line">&gt; [<span class="number">1</span>] <span class="number">2.5</span>               <span class="comment"># 计算结果为2.5</span></div><div class="line">&gt; median(n)             <span class="comment"># 计算向量n的中位值</span></div><div class="line">&gt; [<span class="number">1</span>] <span class="number">2.5</span>               <span class="comment"># 计算结果为2.5</span></div><div class="line">&gt; sd(n)                 <span class="comment"># 计算向量n的标准差</span></div><div class="line">&gt; [<span class="number">1</span>] <span class="number">1.290994</span>          <span class="comment"># 计算结果</span></div></pre></td></tr></table></figure></p><p>我们不需要关心n有多少数据，也不需要在R中一定要看到所有数据就能执行计算。</p><p>Excel的处理和运算则如图所示：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/excel.png" alt="Excel处理计算"></p><p>事实上，R支持的更多的数据对象类型，可以使得我们有很多默认的函数来计算需要的值，也可以自己创造函数来计算。</p><p>先说到这，后续更多</p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">GNU项目是由Richard Stmallman发起的自由开源软件项目，全名是GNU is Not Unix</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">Emacs也是GNU项目的成果，你可以在<a href="http://www.gnu.org/software/emacs/emacs.html" target="_blank" rel="external">GNU Emacs主页</a>查看更多信息。</span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-04-19-%E5%AD%A6%E4%B9%A0R%E7%B3%BB%E5%88%97-1-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85/#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用LaTeX写文档</title>
      <link>http://yoursite.com/2017-04-18-%E4%BD%BF%E7%94%A8LaTeX%E5%86%99%E6%96%87%E6%A1%A3/</link>
      <guid>http://yoursite.com/2017-04-18-%E4%BD%BF%E7%94%A8LaTeX%E5%86%99%E6%96%87%E6%A1%A3/</guid>
      <pubDate>Tue, 18 Apr 2017 06:04:20 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;导言&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;平时工作也一直在用LaTeX，也一直想写一篇入门的文档。最近也在写产品手册，正好也在使用LaTeX撰写，所以写一篇介绍基本用法的文章，以供大家了解。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h3><blockquote><p>平时工作也一直在用LaTeX，也一直想写一篇入门的文档。最近也在写产品手册，正好也在使用LaTeX撰写，所以写一篇介绍基本用法的文章，以供大家了解。</p></blockquote><a id="more"></a><h4 id="一、LaTeX简单介绍"><a href="#一、LaTeX简单介绍" class="headerlink" title="一、LaTeX简单介绍"></a>一、LaTeX简单介绍</h4><p>LaTeX是一个文档处理的宏包，只要你选择了对应的文档格式，设置好具体的页面排版方式，后续专注于写作内容即可。相比较Word这种所见即所得的文字处理软件，LaTeX的一个特点就是在撰写文档的时候，不知道具体的文档生成的样式（但你可以估计到生成的格式）。</p><p>标准的LaTeX文档是以.tex结尾的纯文档文本，所以其跨平台性特别好。一个写好的tex文档，在任何平台编译出来效果是完全一致的。而word、page文档等，在不同平台不同的软件下显示的结果是不一样的，所以其跨平台性很差。而且，纯文本文档有个好处就是文件小，并且通过一些管理工具非常容易管理。而且编辑tex的软件很多，不需要专有软件才能编辑。</p><p>LaTeX对数学公式的支持非常优秀，因此被广大的科技工作者、大学生用于撰写科技文章或者专业的论文，国外的学术杂志甚至只接受LaTeX的论文文档。</p><p>LaTeX是一系列宏包集合，因此一个标准的TeX文档应该是命令和文字的结合。</p><h4 id="二、安装和使用"><a href="#二、安装和使用" class="headerlink" title="二、安装和使用"></a>二、安装和使用</h4><p>LaTeX是一个排版系统，因此需要安装这个系统，其下载地址为：</p><ul><li><a href="http://www.tug.org/texlive" target="_blank" rel="external">Windows</a></li><li><a href="http://www.tug.org/mactex/" target="_blank" rel="external">MacOS</a></li><li><a href="">Linux</a></li></ul><p>建议Windows用户使用TeXLive，MacOS用户使用MacTeX（当然如果你是高级用户了可以尝试Basic版本的MacTeX，占用空间小）。Linux用户可以下载TeX的软件包，也可以用系统带的包管理器下载。（比如Debian和Ubuntu可以使用apt-get install，Fedora可以使用yum，Arch用户可以使用pacman等）</p><p>编辑文档的工具可以有很多种，最简单的是记事本（但肯定很难用）。一般Windows建议使用<a href="http://www.winedt.com/" target="_blank" rel="external">WinEdt</a>,Linux用户可以使用<a href="http://www.lyx.org/" target="_blank" rel="external">LyX</a>这一个可以预览的TeX编辑软件（几乎等同于所见即所得了），如果熟练了用户可以使用<a href="http://www.sublimetext.com/" target="_blank" rel="external">Sublime Text+LaTeXtools</a>以及<a href="https://www.gnu.org/software/emacs/" target="_blank" rel="external">GNU Emacs</a>。</p><h4 id="三、入门的简单文档"><a href="#三、入门的简单文档" class="headerlink" title="三、入门的简单文档"></a>三、入门的简单文档</h4><p><strong>1、TeX文档的基本框架</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\documentclass[a4paper,11pt]&#123;article&#125;  %声明文档类型为article</div><div class="line">\begin&#123;document&#125;   % 声明文档开始</div><div class="line">This is a test document for \LaTeX .   %文档内容</div><div class="line">\end&#123;document&#125;% 文档结束</div></pre></td></tr></table></figure><p>首先要声明文档的样式，LaTeX支持多种文档类型，一般常用的是book、article、report三种。不同的文档类型有不同的结构。”%”后面的内容是注释，不会在编译后生成的文档中显示。</p><p>文档的内容都在\begin{document}和\end{document}之间，\begin{document}表示声明文档内容开始，\end{document}表示文档结束。</p><p><strong>2、支持中文</strong></p><p>LaTeX支持中文的方式有两中，一个使用CJK包然后声明一个CJK环境。另外一个用xunicode使用unicode字符支持中文。本文介绍第二种方式（我不喜欢CJK）。</p><p>示例内容：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\documentclass[a4paper,11pt]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec, xunicode, xltxtra&#125;</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document for \LaTeX . \\</div><div class="line">这是一个\LaTeX 中文样本文档。\\</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>编译后发现内容如下：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/test.png" alt="文档内容"></p><p>中文不能正常显示，原因在于字体的设置，因此需要重新设置字体，如果只是简单的使用一种字体，那么可以如下处理：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\documentclass[a4paper,11pt]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec, xunicode, xltxtra&#125;</div><div class="line">\setmainfont&#123;MicrosoftYaHei&#125;  </div><div class="line">\XeTeXlinebreaklocale &quot;zh&quot;  %中文的断句</div><div class="line">\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document for \LaTeX . \\[10pt]</div><div class="line">这是一个\LaTeX 中文样本文档。\\</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>特别注意，中文的断句方式和英文是不一样的（英语是自动断句），因此需要声明中文的断句方式为”zh”。\\\[10pt]表示换行，并且下一行和上一行行距为10pt。</p><p>生成的文档如下：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/chinese.png" alt="中文文档内容"></p><h4 id="四、更进一步"><a href="#四、更进一步" class="headerlink" title="四、更进一步"></a>四、更进一步</h4><p><strong>1、\\usepackage[option]{package}</strong></p><p>LaTeX很多功能需要宏包提供，所谓宏包就是一个文件提供了很多功能用于作者调用。宏包的调用命令如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\usepackage[colorlinks,citecolor=green]&#123;hyperef&#125;  %使用超链接宏包</div></pre></td></tr></table></figure><p>举例如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\documentclass[12pt,a4paper,openany,fleqn]&#123;book&#125; %声明文档类型</div><div class="line">\usepackage&#123;fontspec, xunicode, xltxtra&#125; %使用xunicode相关宏包</div><div class="line">\usepackage&#123;tikz&#125; %使用tikz宏包画图</div><div class="line">\usepackage&#123;subfig&#125;  %使用subfig宏包</div><div class="line">\usepackage&#123;color&#125; %使用color宏包调用颜色</div><div class="line">\usepackage&#123;graphicx&#125; %使用graphicx处理图片</div><div class="line">\usepackage&#123;titlesec&#125; %使用titlesec定义章节标题等</div><div class="line">\usepackage&#123;indentfirst&#125; %首行缩进处理</div><div class="line">\usepackage&#123;geometry&#125;  %使用geomtry包设置页面</div><div class="line">\usepackage[colorlinks,linkcolor=black,anchorcolor=blue,citecolor=green]&#123;hyperref&#125; %使用超链接</div><div class="line">\usepackage&#123;wrapfig&#125; %使用wrapfig处理浮动图片</div><div class="line">\usepackage[fleqn]&#123;amsmath&#125; %使用amsmath处理公式</div><div class="line">\usepackage&#123;latexsym&#125;</div><div class="line">\usepackage&#123;booktabs&#125;</div></pre></td></tr></table></figure><p><strong>2、图片处理</strong></p><p>我们写文档时，很多时候都需要添加图片至文档，LaTeX处理图片一般有很多宏包，用的最多的就是graphicx宏包。使用方式如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\documentclass[a4paper,11pt]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec, xunicode, xltxtra&#125;</div><div class="line">\usepackage&#123;graphicx&#125;  %要加载graphicx宏包</div><div class="line"></div><div class="line">\setmainfont&#123;MicrosoftYaHei&#125;  </div><div class="line">\XeTeXlinebreaklocale &quot;zh&quot;  %中文的断句</div><div class="line">\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">This is a test document for \LaTeX . \\[10pt]</div><div class="line">这是一个\LaTeX 中文样本文档。\\</div><div class="line">这个是广发基金的Logo图片。\\</div><div class="line">\begin&#123;figure&#125;[htbp!]</div><div class="line">\centering  %图片居中</div><div class="line">\includegraphics[width=\textwidth]&#123;picture/guangfa.jpg&#125;</div><div class="line">\label&#123;fig:gflogo&#125;</div><div class="line">\caption&#123;广发基金LOGO&#125;</div><div class="line">\end&#123;figure&#125;</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>编译后生成的文档截图如图所示：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/tupian.png" alt="图片处理的文档截图"></p><p>\\centering是居中的命令，另外也可以用\\begin{center}文档内容\\end{center}居中环境来处理文档居中。</p><p><strong>3、表格处理</strong></p><p>除了图片，我们很多时候还要处理表格。表格可以使用宏包来处理。本示例使用booktabs宏包处理，示例代码如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">\documentclass[a4paper,11pt]&#123;article&#125;</div><div class="line">\usepackage&#123;fontspec, xunicode, xltxtra&#125;</div><div class="line">\usepackage&#123;booktabs&#125;</div><div class="line"></div><div class="line">\setmainfont&#123;MicrosoftYaHei&#125;  </div><div class="line">\XeTeXlinebreaklocale &quot;zh&quot;  %中文的断句</div><div class="line">\XeTeXlinebreakskip = 0pt plus 1pt minus 0.1pt</div><div class="line"></div><div class="line">\begin&#123;document&#125;</div><div class="line">%处理表格</div><div class="line">\begin&#123;table&#125;[htbp]</div><div class="line">\caption&#123;人员表&#125;</div><div class="line">\label&#123;tab:function&#125;</div><div class="line">\begin&#123;tabular*&#125;&#123;\textwidth&#125;&#123;@&#123;\extracolsep&#123;\fill&#125;&#125;lcc&#125;</div><div class="line">\toprule %-------------------------------------</div><div class="line">姓名                 &amp;性别                &amp;年龄  \\</div><div class="line">\midrule  %------------------------------------</div><div class="line">张三                 &amp;男                  &amp;20   \\</div><div class="line">李四                 &amp;男                  &amp;32   \\</div><div class="line">李倩                 &amp;女                  &amp;25   \\</div><div class="line">\bottomrule  %---------------------------------        </div><div class="line">\end&#123;tabular*&#125;</div><div class="line">\end&#123;table&#125;</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure><p>生成的表格图示如下：</p><p><img src="http://7viihf.com1.z0.glb.clouddn.com/table.png" alt="表格内容图片"></p><h4 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h4><p>LaTeX有很多其它的功能，特别是在编写大型文档或者书籍时效率很高。包括写公式、引用、参考文献处理，非常有用。</p><p>附上最近写的产品文档的源文件地址：<br><a href="https://github.com/allenmagic/qybsc" target="_blank" rel="external">汇添富企业版产品手册源文档</a><br><del><a href="https://github.com/allenmagic/qybsc/blob/master/mannual.pdf" target="_blank" rel="external">汇添富企业版产品手册PDF文件</a></del><br>由于文件太大不能正常下载，请使用<a href="http://7viihf.com1.z0.glb.clouddn.com/mannual.pdf" target="_blank" rel="external">新汇添富企业版产品手册PDF</a></p><p>更多的功能，请后续关注。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-04-18-%E4%BD%BF%E7%94%A8LaTeX%E5%86%99%E6%96%87%E6%A1%A3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用Python画股票的K线图</title>
      <link>http://yoursite.com/2017-04-17-%E4%BD%BF%E7%94%A8Python%E7%94%BB%E8%82%A1%E7%A5%A8%E7%9A%84K%E7%BA%BF%E5%9B%BE/</link>
      <guid>http://yoursite.com/2017-04-17-%E4%BD%BF%E7%94%A8Python%E7%94%BB%E8%82%A1%E7%A5%A8%E7%9A%84K%E7%BA%BF%E5%9B%BE/</guid>
      <pubDate>Mon, 17 Apr 2017 08:31:33 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;导言&quot;&gt;&lt;a href=&quot;#导言&quot; class=&quot;headerlink&quot; title=&quot;导言&quot;&gt;&lt;/a&gt;导言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本文简单介绍了如何从网易财经获取某支股票的价格数据，并根据价格数据画出相应的&lt;br&gt;日K线图。有助于新手了解并使用Python的相关功能。包括列表、自定义函数、for循&lt;br&gt;环、if函数以及如何使用matplotlib进行作图等内容。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><blockquote><p>本文简单介绍了如何从网易财经获取某支股票的价格数据，并根据价格数据画出相应的<br>日K线图。有助于新手了解并使用Python的相关功能。包括列表、自定义函数、for循<br>环、if函数以及如何使用matplotlib进行作图等内容。</p></blockquote><a id="more"></a><h2 id="第一步：从网易财经获取股票的价格数据"><a href="#第一步：从网易财经获取股票的价格数据" class="headerlink" title="第一步：从网易财经获取股票的价格数据"></a>第一步：从网易财经获取股票的价格数据</h2><p>我一般是在网易财经查看某支股票的价格和成交数据，<a href="http://money.163.com/" target="_blank" rel="external">网易财经</a>可以查到任意沪深的股票，我们使用<a href="http://quotes.money.163.com/trade/lsjysj_600036.html#06f01" target="_blank" rel="external">招商银行</a>的数据作为参考。</p><h3 id="1、构建爬虫获取股票价格数据"><a href="#1、构建爬虫获取股票价格数据" class="headerlink" title="1、构建爬虫获取股票价格数据"></a>1、构建爬虫获取股票价格数据</h3><p>这里不对Python做介绍了，如果需要了解什么是Python，可以自行百度或者访问<a href="https://www.python.org/" target="_blank" rel="external">Python官网</a>.</p><p><strong>加载需要的模块</strong></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="keyword">import</span> re,urllib2,time,csv,datetime</div><div class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> matplotlib.finance <span class="keyword">as</span> mpf</div><div class="line"><span class="keyword">import</span> matplotlib.dates <span class="keyword">as</span> mpd</div></pre></td></tr></table></figure><p>其中urllib2是用来解析HTML内容的包，主要是从url获取网页内容；re是正则表达式包，本文会使用正则表达式来从抓取的网页数据中获取到有用的数据；time和datetime是时间相关的包，主要用来设定要抓取的时间以及其它相关时间的处理；csv包是用来生成csv数据（该数据会被用于R来画K线图），其余的几个包会在使用时单独介绍，你也可以在需要的时候在程序头部补充import。</p><p><strong>设定时间相关</strong></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">t = time.localtime()  <span class="comment"># 获取当前的本地时间</span></div><div class="line">year = range(t[<span class="number">0</span>],<span class="number">1989</span>,<span class="number">-1</span>)  <span class="comment"># 设定年度范围，从当前年度至沪市开市的年份倒序生成</span></div><div class="line">season = range(<span class="number">4</span>,<span class="number">0</span>,<span class="number">-1</span>)    <span class="comment"># 生成季度的数据列表，从4季度到1季度倒序生成</span></div></pre></td></tr></table></figure><p>为什么要这么设定时间呢？仔细的查看网易股票数据的url，是按照年度和季度来构成的，我们发现搜索数据也是用年度和季度来搜索的。<br><img src="http://7viihf.com1.z0.glb.clouddn.com/600036.png" alt="招商银行2017年1季度数据"><br>其url构成如下：<em><a href="http://quotes.money.163.com/trade/lsjysj_600036.html?year=2017&amp;season=1" target="_blank" rel="external">http://quotes.money.163.com/trade/lsjysj_600036.html?year=2017&amp;season=1</a></em>可见可拆为6个子字符串，分别是<em><a href="http://quotes.money.163.com/trade/lsjysj_" target="_blank" rel="external">http://quotes.money.163.com/trade/lsjysj_</a></em>、<em>600036</em>、<em>.html?year=</em>、<em>2017</em>、<em>&amp;season=</em>、<em>1</em>。其中第2、4、6个子串可以参数化输入获取特定需求的数据。</p><p><strong>定义获取数据的函数</strong></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getData</span><span class="params">(url)</span>:</span></div><div class="line">request = urllib2.Request(url)</div><div class="line">response = urllib2.urlopen(request)</div><div class="line">content = response.read()</div><div class="line"></div><div class="line">pattern = re.compile(<span class="string">'&lt;/thead[\s\S]*&lt;/tr&gt;    &lt;/table&gt;'</span>)</div><div class="line">ta = re.findall(pattern, str(content))</div><div class="line">pattern1 = re.compile(<span class="string">"&lt;td class='cGreen'&gt;"</span>)</div><div class="line">pattern2 = re.compile(<span class="string">"&lt;td class='cRed'&gt;"</span>)</div><div class="line">pattern3 = re.compile(<span class="string">","</span>)</div><div class="line">tab1 = re.sub(pattern1,<span class="string">"&lt;td&gt;"</span>,str(ta))</div><div class="line">tab2 = re.sub(pattern2,<span class="string">"&lt;td&gt;"</span>,str(tab1))</div><div class="line">tab  = re.sub(pattern3, <span class="string">""</span>, str(tab2))</div><div class="line"></div><div class="line"><span class="keyword">if</span> len(tab) == <span class="number">0</span>:</div><div class="line">data = []</div><div class="line"><span class="keyword">else</span>:</div><div class="line">pattern3 = re.compile(<span class="string">'&lt;td&gt;(.*?)&lt;/td&gt;'</span>)</div><div class="line">data = re.findall(pattern3, str(tab))</div><div class="line"></div><div class="line"><span class="keyword">for</span> d <span class="keyword">in</span> data:</div><div class="line"><span class="keyword">if</span> d == <span class="string">''</span>:</div><div class="line">data.remove(<span class="string">''</span>)</div><div class="line"></div><div class="line"><span class="keyword">return</span> data</div></pre></td></tr></table></figure><p>本段代码定义个一个函数getDate(url)，函数名为getData，参数为url。相当于从该url获取股票的交易数据，显然这个函数是定制的。</p><p>首先，我们用urllib2模块的相关函数解析并获取网页的数据。第二步，使用re模块的数据对抓取的网页内容进行初步的处理，分为了三个过程</p><ol><li>首先匹配”    “之间的内容并返回，因为在这之间的内容包含了所有需要的数据，这是一个简单的正则表达式，表示返回    两个字符串之间的所有内容</li><li>匹配<td class="cGreen">、</td><td class="cRed">并使用</td><td>替换，因为这两个字符串会影响后续的匹配数据，现行替换掉可以更方便的匹配到需要的数据</td></li><li>替换到千分位”,”号，因为Python和R并不会识别有千分位号的数据，所以我们要将数据转换为非千分位的数据。</li><li>tab是按照要求最后获取的包含数据和文本的原始内容</li><li>用if函数来获取除文本的数据，因为如果year和season超过了当前的界限，会返回空的tab，所以我们在这里进行判断，如果少了这个判断，会报出index error。这个if函数表示了如果tab为空，data也是个空的列表，如果tab不为空，那么根据pattern3返回需要的数据至data列表</li><li>用一个for循环来遍历data列表，删除空白的内容（其实这一步不需要，因为在if中已经剔除了空的内容。</li></ol><p>所以定义了以上的函数后，就可以使用该函数返回特定url的数据。</p><p><strong>获取某支股票的数据</strong></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_stock_price</span><span class="params">(code)</span>:</span></div><div class="line">url1 = <span class="string">"http://quotes.money.163.com/trade/lsjysj_"</span></div><div class="line">url2 = <span class="string">".html?year="</span></div><div class="line">url3 = <span class="string">"&amp;season="</span></div><div class="line">urllist = []</div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> year:</div><div class="line"><span class="keyword">for</span> v <span class="keyword">in</span> season:</div><div class="line">urllist.append(url1+str(code)+url2+str(k)+url3+str(v))</div><div class="line"></div><div class="line">price = []</div><div class="line"><span class="keyword">for</span> url <span class="keyword">in</span> urllist:</div><div class="line">price.extend(getData(url))</div><div class="line"><span class="keyword">return</span> price</div></pre></td></tr></table></figure><p>自定义get_stock_price(code)函数，code是指股票代码，使用该函数可以返回该股票所有的历史数据（OHLC以及其它）思路很简单：</p><ol><li>根据code构建其股票数据的页面的url列表</li><li>使用getData(url）函数和for循环，返回所有的历史数据</li></ol><p>最终返回的是price的数据列表</p><p>这样，我们就可以使用该函数获取某支股票的所有历史数据：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="comment"># get all histrocial data include all price and others</span></div><div class="line">price = get_stock_price(<span class="number">600036</span>)</div></pre></td></tr></table></figure><p>获取招商银行（600036）的所有历史数据。</p><h3 id="2、保存数据"><a href="#2、保存数据" class="headerlink" title="2、保存数据"></a>2、保存数据</h3><p><strong>保存为csv文件</strong></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">writer = csv.writer(file(<span class="string">"stock.csv"</span>,<span class="string">'wb'</span>))</div><div class="line">writer.writerow([<span class="string">'Date'</span>,<span class="string">'Open'</span>,<span class="string">'High'</span>,<span class="string">'Low'</span>,<span class="string">'Close'</span>,<span class="string">'Volume'</span>])</div><div class="line">pr = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(price),<span class="number">11</span>):</div><div class="line">pr.extend([[price[i],price[i+<span class="number">1</span>],price[i+<span class="number">2</span>],price[i+<span class="number">3</span>],price[i+<span class="number">4</span>],price[i+<span class="number">8</span>]]])</div><div class="line"></div><div class="line"><span class="keyword">for</span> prl <span class="keyword">in</span> pr:</div><div class="line">writer.writerow(prl)</div></pre></td></tr></table></figure><p>我们使用csv模块保存数据为csv文件，用于在R中读取并作图，我们查看在网易的数据展示可以发现，总共11个字段，所有我们在每11个切片中，返回时间、OHLC（开盘价、最高价、最低价、收盘价）和交易量的数据并保存为csv的文件格式。</p><p><strong>处理保存数据到列表</strong></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line"><span class="comment"># get the number for date by date2num</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Date_no</span><span class="params">(strdate)</span>:</span></div><div class="line">t = time.strptime(strdate, <span class="string">"%Y-%m-%d"</span>)</div><div class="line">y,m,d = t[<span class="number">0</span>:<span class="number">3</span>]</div><div class="line">d = datetime.date(y, m, d)</div><div class="line">n = mpd.date2num(d)</div><div class="line"></div><div class="line"><span class="keyword">return</span> n</div><div class="line"></div><div class="line"><span class="comment"># get the price data </span></div><div class="line">pr = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(price),<span class="number">11</span>):</div><div class="line">pr.extend([[</div><div class="line">Date_no(price[i])</div><div class="line">,float(price[i+<span class="number">1</span>])</div><div class="line">,float(price[i+<span class="number">2</span>])</div><div class="line">,float(price[i+<span class="number">3</span>])</div><div class="line">,float(price[i+<span class="number">4</span>])</div><div class="line">,float(price[i+<span class="number">8</span>])]]</div><div class="line">)</div></pre></td></tr></table></figure><p>这个程序片段是用来处理和保存数据用于在pyhton中做出K线图。</p><ol><li>定义函数将字符串的时间处理为matplotlib中作图使用的数值（直接获取的数据中时间是字符串）</li><li>返回返回时间、OHLC（开盘价、最高价、最低价、收盘价）和交易量的数据并存储在pr这个列表里</li></ol><h2 id="第二步：做出K线图"><a href="#第二步：做出K线图" class="headerlink" title="第二步：做出K线图"></a>第二步：做出K线图</h2><p><strong>在R中作图</strong></p><p>代码如下：</p><figure class="highlight r"><table><tr><td class="code"><pre><div class="line"><span class="keyword">library</span>(quantmod)</div><div class="line"></div><div class="line">rm(list = ls())</div><div class="line">setwd(<span class="string">"~/GitHub/index/"</span>)</div><div class="line">price &lt;- as.xts(read.zoo(<span class="string">"stock.csv"</span>,header=<span class="literal">TRUE</span>,sep=<span class="string">","</span>,colClasses = c(<span class="string">"Date"</span>, rep(<span class="string">"numeric"</span>,<span class="number">5</span>))))</div><div class="line"></div><div class="line">n &lt;- nrow(price)</div><div class="line">m &lt;- nrow(price)-<span class="number">100</span></div><div class="line"></div><div class="line"><span class="comment">#pdf(file = "k.pdf")</span></div><div class="line">chartSeries(price[c(m:n)],theme = chartTheme(<span class="string">"white"</span>),up.col = <span class="string">"red"</span>,dn.col = <span class="string">"green"</span>,name = <span class="string">"600036"</span>,time.scale = <span class="number">0.5</span>,line.type = <span class="string">"l"</span>,bar.type = <span class="string">"ohlc"</span>,major.ticks=<span class="string">'auto'</span>, minor.ticks=<span class="literal">TRUE</span>)</div><div class="line"><span class="comment">#dev.off()</span></div></pre></td></tr></table></figure><p>做出的图片效果如下：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/Rplot01.png" alt=""><br>R中可以使用quantmod包中的chartSeries函数画出K线图，具体的使用方法可以参考<a href="http://www.quantmod.com/documentation/chartSeries.html" target="_blank" rel="external">chartSeries参考文档</a></p><p><strong>在Python中使用matplotlib作图</strong></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><div class="line">quotes = pr[<span class="number">0</span>:<span class="number">80</span>]</div><div class="line"></div><div class="line">print(quotes)</div><div class="line"></div><div class="line">fig,ax = plt.subplots(figsize=(<span class="number">30</span>,<span class="number">6</span>))</div><div class="line">fig.subplots_adjust(bottom=<span class="number">0.2</span>)</div><div class="line">mpf.candlestick_ohlc(ax,quotes,width=<span class="number">0.4</span>,colorup=<span class="string">'r'</span>,colordown=<span class="string">'g'</span>)</div><div class="line">plt.grid(<span class="keyword">False</span>)</div><div class="line">ax.xaxis_date()</div><div class="line">ax.autoscale_view()</div><div class="line">plt.setp(plt.gca().get_xticklabels(), rotation=<span class="number">30</span>) </div><div class="line">plt.show()</div></pre></td></tr></table></figure><p>K线效果图如下：<br><img src="http://7viihf.com1.z0.glb.clouddn.com/figure_1.png" alt=""><br>使用matplotlib的candlestick_ohlc的<a href="http://matplotlib.org/api/finance_api.html?highlight=candlestick#matplotlib.finance.candlestick2_ohlc" target="_blank" rel="external">参考文档</a>,但是目前有一些问题，比如会将非交易日期也置放在x轴，会到至K线出现断裂，等待下一步的解决方法吧。</p><p>相关的代码已经同步到最大的同性交友网站<a href="https://github.com/allenmagic/index" target="_blank" rel="external">我的Github</a>上了，可以参考，其中<a href="https://github.com/allenmagic/index/blob/master/stock.py" target="_blank" rel="external">stock.py</a>是主要程序。</p><blockquote><p>写在最后：因为我有近5年没使用过python了，所有代码可能不太简练。我也旨在解决问题，当然解决问题的方法千万种，比如这个例子，最直接的办法就是使用网易的下载所有（或者特定时间段）的数据为csv格式，然后用Excel画K线也可以的。</p></blockquote>]]></content:encoded>
      
      <comments>http://yoursite.com/2017-04-17-%E4%BD%BF%E7%94%A8Python%E7%94%BB%E8%82%A1%E7%A5%A8%E7%9A%84K%E7%BA%BF%E5%9B%BE/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
